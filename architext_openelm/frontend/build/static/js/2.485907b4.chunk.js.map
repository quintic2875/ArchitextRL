{"version":3,"sources":["../node_modules/streamlit-component-lib/node_modules/react/index.js","../../src/event.mjs","../../src/event-target.mjs","../node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","../node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","../node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","../node_modules/@babel/runtime/helpers/esm/classCallCheck.js","../node_modules/@babel/runtime/helpers/esm/typeof.js","../node_modules/@babel/runtime/helpers/esm/toPropertyKey.js","../node_modules/@babel/runtime/helpers/esm/toPrimitive.js","../node_modules/@babel/runtime/helpers/esm/createClass.js","../node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js","../node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","../node_modules/@babel/runtime/helpers/esm/OverloadYield.js","../node_modules/@babel/runtime/helpers/esm/awaitAsyncGenerator.js","../node_modules/@babel/runtime/helpers/esm/AsyncGenerator.js","../node_modules/@babel/runtime/helpers/esm/wrapAsyncGenerator.js","../node_modules/@babel/runtime/helpers/esm/asyncGeneratorDelegate.js","../node_modules/@babel/runtime/helpers/esm/asyncIterator.js","../node_modules/flatbuffers/js/flatbuffers.mjs","../node_modules/text-encoding-utf-8/lib/encoding.lib.mjs","../util/utf8.ts","../node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","../node_modules/@babel/runtime/helpers/esm/inherits.js","../node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js","../node_modules/@babel/runtime/helpers/esm/isNativeReflectConstruct.js","../node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js","../node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js","../node_modules/@babel/runtime/helpers/esm/createSuper.js","../io/interfaces.ts","../util/compat.ts","../util/buffer.ts","../io/adapters.ts","../node_modules/@babel/runtime/helpers/esm/defineProperty.js","../node_modules/@babel/runtime/helpers/esm/objectSpread2.js","../node_modules/@babel/runtime/helpers/esm/get.js","../node_modules/@babel/runtime/helpers/esm/superPropBase.js","../vector.ts","../fb/Schema.ts","../fb/Message.ts","../enum.ts","../util/bit.ts","../node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","../visitor.ts","../visitor/typecomparator.ts","../type.ts","../data.ts","../util/pretty.ts","../builder/valid.ts","../builder/buffer.ts","../builder.ts","../builder/bool.ts","../builder/null.ts","../builder/date.ts","../builder/decimal.ts","../builder/dictionary.ts","../builder/fixedsizebinary.ts","../util/math.ts","../builder/float.ts","../node_modules/@babel/runtime/helpers/esm/construct.js","../util/bn.ts","../builder/int.ts","../builder/time.ts","../builder/timestamp.ts","../builder/interval.ts","../builder/binary.ts","../builder/utf8.ts","../builder/run.ts","../vector/row.ts","../util/vector.ts","../vector/chunked.ts","../column.ts","../util/args.ts","../schema.ts","../builder/list.ts","../builder/fixedsizelist.ts","../builder/map.ts","../builder/struct.ts","../builder/union.ts","../visitor/set.ts","../fb/File.ts","../visitor/builderctor.ts","../builder/index.ts","../ipc/metadata/file.ts","../io/stream.ts","../io/file.ts","../util/int.ts","../visitor/vectorloader.ts","../visitor/typeassembler.ts","../ipc/metadata/json.ts","../ipc/metadata/message.ts","../ipc/message.ts","../visitor/vectorassembler.ts","../ipc/writer.ts","../util/recordbatch.ts","../node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","../node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","../vector/base.ts","../vector/binary.ts","../vector/bool.ts","../vector/date.ts","../vector/decimal.ts","../vector/dictionary.ts","../vector/fixedsizebinary.ts","../vector/fixedsizelist.ts","../vector/float.ts","../vector/interval.ts","../vector/int.ts","../vector/list.ts","../vector/map.ts","../vector/null.ts","../vector/struct.ts","../vector/timestamp.ts","../vector/time.ts","../vector/union.ts","../vector/utf8.ts","../util/fn.ts","../visitor/get.ts","../visitor/indexof.ts","../visitor/iterator.ts","../visitor/toarray.ts","../visitor/bytewidth.ts","../visitor/vectorctor.ts","../vector/index.ts","../table.ts","../recordbatch.ts","../ipc/reader.ts","../io/whatwg/builder.ts","../compute/predicate.ts","../compute/dataframe.ts","../Arrow.ts","../Arrow.dom.ts","../io/whatwg/iterable.ts","../io/whatwg/reader.ts","../io/whatwg/writer.ts","../node_modules/streamlit-component-lib/dist/ArrowTable.js","../node_modules/streamlit-component-lib/dist/streamlit.js","../node_modules/streamlit-component-lib/dist/StreamlitReact.js","../node_modules/hoist-non-react-statics/dist/hoist-non-react-statics.cjs.js","../node_modules/react-is/index.js","../node_modules/react-is/cjs/react-is.production.min.js","../node_modules/streamlit-component-lib/node_modules/react/cjs/react.production.min.js","../node_modules/object-assign/index.js"],"names":["module","exports","require","privateData","WeakMap","wrappers","pd","event","retv","get","console","assert","setCancelFlag","data","passiveListener","cancelable","canceled","preventDefault","error","Event","eventTarget","set","this","eventPhase","currentTarget","stopped","immediateStopped","timeStamp","Date","now","Object","defineProperty","value","enumerable","keys","i","length","key","defineRedirectDescriptor","configurable","defineCallDescriptor","apply","arguments","getWrapper","proto","prototype","wrapper","BaseEvent","CustomEvent","call","create","constructor","writable","isFunc","getOwnPropertyDescriptor","defineWrapper","getPrototypeOf","isStopped","setPassiveListener","type","target","composedPath","NONE","CAPTURING_PHASE","AT_TARGET","BUBBLING_PHASE","stopPropagation","stopImmediatePropagation","bubbles","Boolean","defaultPrevented","composed","srcElement","cancelBubble","returnValue","initEvent","window","setPrototypeOf","listenersMap","ATTRIBUTE","isObject","x","getListeners","listeners","TypeError","defineEventAttribute","eventTargetPrototype","eventName","concat","node","listenerType","listener","next","prev","delete","newNode","passive","once","defineEventAttributeDescriptor","defineCustomEventTarget","eventNames","CustomEventTarget","EventTarget","Array","isArray","types","Map","addEventListener","options","optionsIsObj","capture","undefined","removeEventListener","dispatchEvent","wrappedEvent","wrapEvent","err","handleEvent","setEventPhase","setCurrentTarget","_arrayLikeToArray","arr","len","arr2","_unsupportedIterableToArray","o","minLen","n","toString","slice","name","from","test","_createForOfIteratorHelper","allowArrayLike","it","Symbol","iterator","F","s","done","e","_e","f","normalCompletion","didErr","step","_e2","asyncGeneratorStep","gen","resolve","reject","_next","_throw","arg","info","Promise","then","_asyncToGenerator","fn","self","args","_classCallCheck","instance","Constructor","_typeof","obj","_toPropertyKey","input","hint","prim","toPrimitive","res","String","Number","_defineProperties","props","descriptor","_createClass","protoProps","staticProps","_regeneratorRuntime","Op","hasOwn","hasOwnProperty","desc","$Symbol","iteratorSymbol","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","wrap","innerFn","outerFn","tryLocsList","protoGenerator","Generator","generator","context","Context","makeInvokeMethod","tryCatch","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","method","_invoke","AsyncIterator","PromiseImpl","invoke","record","result","__await","unwrapped","previousPromise","callInvokeWithMethodAndArg","state","Error","doneResult","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","methodName","resultName","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","displayName","isGeneratorFunction","genFun","ctor","mark","__proto__","awrap","async","iter","val","object","reverse","pop","skipTempReset","charAt","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","thrown","delegateYield","_slicedToArray","_i","_s","_x","_r","_arr","_n","_d","_OverloadYield","kind","v","k","_awaitAsyncGenerator","AsyncGenerator","front","back","resume","overloaded","nextKey","settle","request","_wrapAsyncGenerator","_asyncGeneratorDelegate","inner","waiting","pump","_asyncIterator","sync","retry","AsyncFromSyncIterator","AsyncFromSyncIteratorContinuation","r","ret","thr","flatbuffers","inRange","a","min","max","ToDictionary","Offset","Table","SIZEOF_SHORT","SIZEOF_INT","FILE_IDENTIFIER_LENGTH","Encoding","UTF8_BYTES","UTF16_STRING","int32","Int32Array","float32","Float32Array","buffer","float64","Float64Array","isLittleEndian","Uint16Array","Uint8Array","Long","low","high","ZERO","toFloat64","equals","other","Builder","opt_initial_size","initial_size","bb","ByteBuffer","allocate","space","minalign","vtable","vtable_in_use","isNested","object_start","vtables","vector_num_elems","force_defaults","clear","capacity","forceDefaults","dataBuffer","asUint8Array","bytes","subarray","position","offset","prep","size","additional_bytes","align_size","old_buf_size","growByteBuffer","pad","byte_size","writeInt8","writeInt16","writeInt32","writeInt64","writeFloat32","writeFloat64","addInt8","addInt16","addInt32","addInt64","addFloat32","addFloat64","addFieldInt8","voffset","defaultValue","slot","addFieldInt16","addFieldInt32","addFieldInt64","addFieldFloat32","addFieldFloat64","addFieldOffset","addOffset","addFieldStruct","nested","notNested","new_buf_size","nbb","setPosition","startObject","numfields","endObject","vtableloc","trimmed_size","existing_vtable","vt1","outer_loop","vt2","readInt16","j","root_table","opt_file_identifier","file_identifier","charCodeAt","requiredField","table","field","table_start","vtable_start","readInt32","startVector","elem_size","num_elems","alignment","endVector","createString","utf8","codePoint","createLong","bytes_","position_","readInt8","readUint8","readUint16","readUint32","readInt64","readUint64","readFloat32","readFloat64","writeUint8","writeUint16","writeUint32","writeUint64","getBufferIdentifier","fromCharCode","__offset","bb_pos","vtable_offset","__union","t","__string","opt_encoding","b","c","__indirect","__vector","__vector_len","__has_identifier","ident","end_of_stream","Stream","tokens","endOfStream","read","shift","prepend","token","unshift","finished","decoderError","fatal","opt_code_point","DEFAULT_ENCODING","TextDecoder","encoding","toLowerCase","_streaming","_BOMseen","_decoder","_fatal","_ignoreBOM","TextEncoder","_encoder","_options","UTF8Decoder","utf8_code_point","utf8_bytes_seen","utf8_bytes_needed","utf8_lower_boundary","utf8_upper_boundary","handler","stream","bite","code_point","UTF8Encoder","count","temp","decode","ArrayBuffer","byteOffset","byteLength","input_stream","code_points","indexOf","cp","codePointsToString","encode","opt_string","string","u","d","stringToCodePoints","_Buffer","Buffer","useNativeEncoders","decodeUtf8","decoder","_toUint8Array","toUint8Array","TextDecoderPolyfill","encodeUtf8","encoder","TextEncoderPolyfill","_setPrototypeOf","p","bind","_inherits","subClass","superClass","_getPrototypeOf","_isNativeReflectConstruct","Reflect","construct","sham","Proxy","valueOf","_assertThisInitialized","ReferenceError","_possibleConstructorReturn","_createSuper","Derived","hasNativeReflectConstruct","Super","NewTarget","ITERATOR_DONE","freeze","ArrowJSON","_json","ReadableInterop","_getDOMStream","tee","_getNodeStream","pipe","pipeTo","duplex","pipeThrough","_DOMStream","toDOMStream","_nodeStream","toNodeStream","AsyncQueue","_ReadableInterop","_Symbol$asyncIterator","_super","_this","_values","resolvers","_closedPromise","_closedPromiseResolve","_cancel","_callee","reason","_context","return","_ensureOpen","_error","streamAdapters","_throw2","_callee2","_","_context2","abort","_x2","_return2","_callee3","_context3","close","_x3","_read","_callee4","_context4","_x4","_peek","_callee5","_context5","_x5","_this2","_ref2","BigIntUnavailableError","BigIntUnavailable","asIntN","asUintN","BigInt","BigIntCtor","BigIntAvailable","_ref4","BigInt64ArrayUnavailableError","BigInt64Array","BigInt64ArrayUnavailable","BigInt64ArrayCtor","_ref6","BigUint64ArrayUnavailableError","BigUint64Array","BigUint64ArrayUnavailable","BigUint64ArrayCtor","isNumber","isBoolean","isFunction","isPromise","isIterable","isAsyncIterable","isArrowJSON","isIteratorResult","isFileHandle","isFetchResponse","isReadableDOMStream","isReadableNodeStream","toArrayBufferViewIterator","SharedArrayBuf","SharedArrayBuffer","memcpy","source","targetByteOffset","sourceByteLength","targetByteLength","dst","src","Math","joinUint8Arrays","chunks","sliced","xOffset","yOffset","xLen","yLen","y","_x6","_y","collapseContiguousByteRanges","reduce","index","Infinity","toArrayBufferView","ArrayBufferViewCtor","isView","BYTES_PER_ELEMENT","toInt8Array","Int8Array","toInt16Array","Int16Array","toInt32Array","toBigInt64Array","toUint16Array","toUint32Array","Uint32Array","toBigUint64Array","toFloat32Array","toFloat64Array","toUint8ClampedArray","Uint8ClampedArray","ArrayCtor","buffers","t0","t1","_marked","toInt8ArrayIterator","toInt16ArrayIterator","toInt32ArrayIterator","toUint8ArrayIterator","toUint16ArrayIterator","toUint32ArrayIterator","toFloat32ArrayIterator","toFloat64ArrayIterator","toUint8ClampedArrayIterator","toArrayBufferViewAsyncIterator","_toArrayBufferViewAsyncIterator","_callee6","emit","_context8","t2","t3","t4","t5","t6","t7","t8","_ref","_context6","_ref3","_context7","toInt8ArrayAsyncIterator","toInt16ArrayAsyncIterator","toInt32ArrayAsyncIterator","toUint8ArrayAsyncIterator","toUint16ArrayAsyncIterator","toUint32ArrayAsyncIterator","toFloat32ArrayAsyncIterator","toFloat64ArrayAsyncIterator","toUint8ClampedArrayAsyncIterator","rebaseValueOffsets","valueOffsets","compareArrayLike","fromIterable","fromAsyncIterable","_fromAsyncIterable","fromDOMStream","_fromDOMStream","fromNodeStream","_fromNodeStream","threw","cmd","bufferLength","byteRange","_yield","_yield$byteRange","_joinUint8Arrays2","throw","_yield2","_yield$byteRange2","_joinUint8Arrays4","_yield3","_yield$byteRange3","_joinUint8Arrays6","AdaptiveByteReader","releaseLock","byobReader","defaultReader","supportsBYOB","reader","getBYOBReader","getDefaultReader","catch","readFromBYOBReader","mode","_readFromBYOBReader","readInto","_x7","_x8","_x9","_x10","_readInto","_callee8","_yield$reader$read","_context9","onEvent","_callee7","events","_yield4","_yield$_awaitAsyncGen","_yield$_awaitAsyncGen2","_yield$byteRange4","cleanup","_iterator","_step","_step$value","evt","destroy","_x11","_x12","_joinUint8Arrays8","race","map","isFinite","_defineProperty","enumerableOnly","getOwnPropertySymbols","symbols","filter","sym","_objectSpread2","getOwnPropertyDescriptors","defineProperties","property","receiver","base","org","flatbuf","arrow","apache","AbstractVector","MetadataVersion","UnionMode","Precision","DateUnit","TimeUnit","IntervalUnit","Type","Endianness","Null","__init","builder","startNull","endNull","Struct_","startStruct_","endStruct_","List","startList","endList","LargeList","startLargeList","endLargeList","FixedSizeList","listSize","startFixedSizeList","addListSize","endFixedSizeList","keysSorted","startMap","addKeysSorted","endMap","Union","Sparse","typeIdsOffset","numElems","startUnion","addMode","addTypeIds","endUnion","Int","bitWidth","isSigned","startInt","addBitWidth","addIsSigned","endInt","FloatingPoint","HALF","precision","startFloatingPoint","addPrecision","endFloatingPoint","Utf8","startUtf8","endUtf8","Binary","startBinary","endBinary","LargeUtf8","startLargeUtf8","endLargeUtf8","LargeBinary","startLargeBinary","endLargeBinary","FixedSizeBinary","byteWidth","startFixedSizeBinary","addByteWidth","endFixedSizeBinary","Bool","startBool","endBool","Decimal","scale","startDecimal","addScale","endDecimal","MILLISECOND","unit","startDate","addUnit","endDate","Time","startTime","endTime","Timestamp","SECOND","optionalEncoding","timezoneOffset","startTimestamp","addTimezone","endTimestamp","Interval","YEAR_MONTH","startInterval","endInterval","Duration","startDuration","endDuration","KeyValue","keyOffset","valueOffset","startKeyValue","addKey","addValue","endKeyValue","DictionaryEncoding","id","indexTypeOffset","isOrdered","startDictionaryEncoding","addId","addIndexType","addIsOrdered","endDictionaryEncoding","Field","nameOffset","nullable","typeType","typeOffset","dictionaryOffset","childrenOffset","customMetadataOffset","startField","addName","addNullable","addTypeType","addType","addDictionary","addChildren","addCustomMetadata","endField","Schema","Little","endianness","fieldsOffset","startSchema","addEndianness","addFields","endSchema","NS7624605610262437867","MessageHeader","FieldNode","null_count","RecordBatch","nodesOffset","buffersOffset","startRecordBatch","addLength","addNodes","addBuffers","endRecordBatch","DictionaryBatch","dataOffset","isDelta","startDictionaryBatch","addData","addIsDelta","endDictionaryBatch","Message","V1","version","headerType","headerOffset","bodyLength","startMessage","addVersion","addHeaderType","addHeader","addBodyLength","endMessage","Schema_","BufferType","Message_","iterateBits","getBool","_data","_index","byte","bit","getBit","setBool","truncateBitmap","bitmap","alignedSize","packBools","xs","begin","byteIndex","remaining","popcnt_bit_range","lhs","rhs","_step2","sum","_iterator2","rhsInside","lhsInside","popcnt_array","cnt","pos","view","DataView","popcnt_uint32","getUint32","getUint16","getUint8","uint32","_toConsumableArray","Visitor","nodes","_len","_key","visit","_len2","_key2","getVisitFn","visitor","throwIfNotFound","dtype","Data","Vector","inferDType","DataType","visitNull","visitBool","visitInt","Int8","visitInt8","Int16","visitInt16","Int32","visitInt32","Int64","visitInt64","Uint8","visitUint8","Uint16","visitUint16","Uint32","visitUint32","Uint64","visitUint64","Float","visitFloat","Float16","visitFloat16","Float32","visitFloat32","Float64","visitFloat64","visitUtf8","visitBinary","visitFixedSizeBinary","visitDate","DateDay","visitDateDay","DateMillisecond","visitDateMillisecond","visitTimestamp","TimestampSecond","visitTimestampSecond","TimestampMillisecond","visitTimestampMillisecond","TimestampMicrosecond","visitTimestampMicrosecond","TimestampNanosecond","visitTimestampNanosecond","visitTime","TimeSecond","visitTimeSecond","TimeMillisecond","visitTimeMillisecond","TimeMicrosecond","visitTimeMicrosecond","TimeNanosecond","visitTimeNanosecond","visitDecimal","visitList","Struct","visitStruct","visitUnion","DenseUnion","visitDenseUnion","SparseUnion","visitSparseUnion","Dictionary","visitDictionary","visitInterval","IntervalDayTime","visitIntervalDayTime","IntervalYearMonth","visitIntervalYearMonth","visitFixedSizeList","visitMap","_node","typeId","SINGLE","DOUBLE","MICROSECOND","NANOSECOND","DAY","DAY_TIME","Dense","TypeComparator","_Visitor","schema","compareFields","fields","others","every","compareField","compareConstructor","compareAny","compareInt","compareFloat","compareDate","compareTimestamp","timezone","compareTime","compareUnion","typeIds","children","compareInterval","indices","dictionary","comparer","ArrayType","_DataType","Int_","_DataType2","_super2","_Int_","_super3","_Int_2","_super4","_Int_3","_super5","_Int_4","_super6","_Int_5","_super7","_Int_6","_super8","_Int_7","_super9","_Int_8","_super10","_DataType3","_super11","_Float","_super12","_Float2","_super13","_Float3","_super14","_DataType4","_super15","_DataType5","_super16","_DataType6","_super17","_DataType7","_super18","_this3","Date_","_DataType8","_super19","_this4","_Date_","_super20","_Date_2","_super21","Time_","_DataType9","_super22","_this5","Timestamp_","_DataType10","_super27","_this6","Interval_","_DataType11","_super32","_this7","_DataType12","_super35","child","_this8","valueType","_DataType13","_super36","_this9","join","Union_","_DataType14","_super37","_this10","typeIdToChildIndex","idx","_DataType15","_super40","_this11","_DataType16","_super41","_this12","Map_","_DataType17","_super42","_this13","atomicDictionaryId","getId","_DataType18","_super43","_this14","strideForType","nullCount","childData","floor","_nullCount","stride","nullBitmap","childStride","_sliceBuffers","clone","_sliceChildren","newLength","fill","VALIDITY","TYPE","OFFSET","DATA","valueOffsetsOrChildren","undf","valueToString","JSON","stringify","createIsValidFunction","nullValues","fnBody","noNaNs","valueToCase","Function","roundLengthUpToNearest64Bytes","BPE","BufferBuilder","_resize","extra","reserved","array","sliceOrExtendArray","DataBufferBuilder","_BufferBuilder","reserve","BitmapBufferBuilder","_DataBufferBuilder","numValid","cur","_get","OffsetsBufferBuilder","_DataBufferBuilder2","WideBufferBuilder","_BufferBuilder2","_ArrayType64","buffer64","ArrayType64","nulls","_nulls","_isValid","new","flush","numInvalid","_offsets","_typeIds","reservedLength","reservedByteLength","setValid","isValid","setValue","_setValue","valid","numChildren","offsets","last","_options$queueingStra","queueingStrategy","_options$highWaterMar","highWaterMark","pow","sizeProperty","numChunks","append","toVector","throughIterable","_options$queueingStra2","_options$highWaterMar2","_iteratorAbruptCompletion","_didIteratorError","_iteratorError","throughAsyncIterable","FixedWidthBuilder","_Builder","opts","VariableWidthBuilder","_Builder2","_pendingLength","pending","_pending","current","_flush","pendingLength","_flushPending","BoolBuilder","NullBuilder","DateBuilder","_FixedWidthBuilder","DateDayBuilder","_DateBuilder","DateMillisecondBuilder","_DateBuilder2","DecimalBuilder","DictionaryBuilder","hashFn","_dictionaryOffset","_keysToIndices","valueToKey","keysToIndices","_dictionary","curr","FixedSizeBinaryBuilder","f64","u32","uint16ToFloat64","h","expo","sigf","sign","NaN","float64ToUint16","FloatBuilder","Float16Builder","_FloatBuilder","Float32Builder","_FloatBuilder2","Float64Builder","_FloatBuilder3","Parent","Class","bignumToString","bignumToBigInt","isArrowBigNumSymbol","for","BigNum","_construct","SignedBigNum","UnsignedBigNum","_len3","_key3","DecimalBigNum","_len4","_key4","bignumToNumber","bn","hi","lo","signed","words","number","decimalToString","digits","base64","base32","checks","toJSON","assign","memo","BN","num","IntBuilder","Int8Builder","_IntBuilder","Int16Builder","_IntBuilder2","Int32Builder","_IntBuilder3","Int64Builder","_IntBuilder4","toBigInt","Uint8Builder","_IntBuilder5","Uint16Builder","_IntBuilder6","Uint32Builder","_IntBuilder7","Uint64Builder","_IntBuilder8","TimeBuilder","TimeSecondBuilder","_TimeBuilder","TimeMillisecondBuilder","_TimeBuilder2","TimeMicrosecondBuilder","_TimeBuilder3","TimeNanosecondBuilder","_TimeBuilder4","TimestampBuilder","TimestampSecondBuilder","_TimestampBuilder","TimestampMillisecondBuilder","_TimestampBuilder2","TimestampMicrosecondBuilder","_TimestampBuilder3","TimestampNanosecondBuilder","_TimestampBuilder4","IntervalBuilder","IntervalDayTimeBuilder","_IntervalBuilder","IntervalYearMonthBuilder","_IntervalBuilder2","BinaryBuilder","_VariableWidthBuilder","Utf8Builder","Run","kParent","kRowIndex","kKeyToIdx","kIdxToVal","kCustomInspect","Row","_Symbol$iterator","parent","numKeys","ktoi","itov","getValue","getIndex","ki","vi","kr","vr","has","callbackfn","thisArg","callback","m","str","_Object$definePropert","MapRow","_Row","createRowProxy","getChildAt","StructRow","_Row2","defineRowProxyProperties","findIndex","tmp","row","_step3","getter","setter","_iterator3","getKey","RowProxyHandler","isExtensible","deleteProperty","preventExtensions","ownKeys","clampIndex","adjust","clampRange","end","_source$length","big0","isNaNFast","createElementComparator","search","typeofSearch","valueOfSearch","comparators","createSubElementsComparator","creatMapComparator","createArrayLikeComparator","createVectorComparator","createObjectComparator","compareArray","compareObject","vec","compareVector","lKeyItr","rKeyItr","rValItr","rVal","lKey","rKey","Chunked","_AbstractVector","vectors","calculateOffsets","_type","_chunks","_chunkOffsets","_length","_numChildren","chunk","isDictionary","_indices","flatten","_sliceInternal","columns","_children","vector","mid","isValidInternal","getInternal","element","indexOfInternal","toArray","arraySet","typedSet","_ref5","chunkIndex","fromIndex","start","found","slices","chunkOffsets","chunkLength","chunkOffset","to","selectChunkArgs","Column","_Chunked","_field","SingleChunkColumn","metadata","column","rest","some","_Column","_chunk","selectArgs","Ctor","vals","_selectArgs","selectFieldArgs","_selectFieldArgs","_selectChunkArgs","selectVectorChildrenArgs","_selectVectorChildrenArgs","toKeysAndValues","_Object$entries$reduc2","entries","fieldIndex","valueIndex","_ret","_keys$idx","_Symbol$toStringTag","dictionaries","generateDictionaryMap","compareSchemas","columnNames","names","columnIndices","curFields","mergeMaps","newFields","f2","newDictionaries","_Symbol$toStringTag2","_args2","_args2$","_args2$2","_args2$3","_args2$4","_args$","_args$$name","_args$$type","_args$$nullable","_args$$metadata","_len5","_key5","_len6","_key6","m1","m2","ListBuilder","_run","run","FixedSizeListBuilder","childIndex","MapBuilder","StructBuilder","UnionBuilder","_valueToChildTypeId","childTypeId","_this$type","SparseUnionBuilder","_UnionBuilder","DenseUnionBuilder","_UnionBuilder2","SetVisitor","setEpochMsToMillisecondsLong","epochMs","setVariableWidthBytes","setDateDay","setEpochMsToDays","setDateMillisecond","setNumeric","setFloat16","setNumericX2","values64","long","setTimestampSecond","_ref9","setTimestampMillisecond","_ref10","setTimestampMicrosecond","_ref11","setEpochMsToMicrosecondsLong","setTimestampNanosecond","_ref12","setEpochMsToNanosecondsLong","setTimeSecond","_ref13","setTimeMillisecond","_ref14","setTimeMicrosecond","_ref15","setTimeNanosecond","_ref16","setDenseUnion","setSparseUnion","setIntervalDayTime","_ref18","setIntervalYearMonth","_ref19","_ref8","_ref7","_ref17","itr","_setStructVectorValue","_setStructArrayValue","_setStructObjectValue","GetBuilderCtor","newBuilder","getBuilderConstructor","defaultOptions","getChildOptions","_objectSpread","T","setVisitor","Footer","Block","schemaOffset","dictionariesOffset","recordBatchesOffset","startFooter","addSchema","addDictionaries","addRecordBatches","endFooter","metaDataLength","_Block","File_","_Footer","Footer_","V4","recordBatches","dictionaryBatches","_recordBatches","_dictionaryBatches","block","numRecordBatches","getRecordBatch","numDictionaries","getDictionaryBatch","buf","footer","getRootAsFooter","OffHeapFooter","startRecordBatchesVector","rb","FileBlock","startDictionariesVector","db","dictionaryBatchesOffset","finishFooterBuffer","_Footer_","_footer","recordBatchesLength","dictionariesLength","fileBlock","createBlock","AsyncByteQueue","_AsyncQueue","ByteStream","ByteStreamSource","peek","AsyncByteStream","AsyncByteStreamSource","body","closed","cancel","_args5","RandomAccessFile","_ByteStream","_this$readAt","readAt","getInt32","nBytes","AsyncRandomAccessFile","_AsyncByteStream","file","_handle","stat","_readInt","_yield$this$readAt","_seek","bytesRead","_yield$file$read","_readAt","_close","intAsHex","kPowersOfTen","BaseInt64","L","R","product","lessThan","_BaseInt","_times","_plus","out_buffer","fromString","out","posn","group","parseInt","substr","multiple","times","plus","left","right","_BaseInt2","this_high","other_high","negate","startsWith","Int128","L0","L1","L2","L3","R0","R1","R2","R3","multiply","sums","VectorLoader","nodesIndex","buffersIndex","nextFieldNode","readNullBitmap","readData","readOffsets","visitMany","readTypeIds","readDictionary","nextBufferRange","_ref20","JSONVectorLoader","_VectorLoader","sources","isTimestamp","isInt","isTime","isDate","convertArray","isDecimal","isBinary","isFixedSizeBinary","joined","binaryDataFromJSON","isBool","isUtf8","TypeAssembler","startTypeIdsVector","createTypeIdsVector","indexType","recordBatchFromJSON","fieldNodesFromJSON","buffersFromJSON","fieldChildrenFromJSON","fromJSON","fieldNodes","validity","BufferRegion","customMetadataFromJSON","_metadata","indexTypeFromJSON","typeFromJSON","_Field","_Schema","_Message","_KeyValue","_FieldNode","_Endianness","_RecordBatch","_DictionaryBatch","header","_version","_headerType","_createHeader","_bodyLength","msg","message","messageHeaderFromJSON","_message","getRootAsMessage","decodeMessageHeader","isSchema","isRecordBatch","isDictionaryBatch","finishMessageBuffer","_nodes","_buffers","_isDelta","_id","decodeFieldChildren","childrenLength","decodeCustomMetadata","customMetadataLength","customMetadata","decodeIndexType","decodeFieldType","typeIdsArray","typeAssembler","childOffsets","childrenVectorOffset","createChildrenVector","metadataOffset","createCustomMetadataVector","dictType","dictMeta","fieldOffsets","startFieldsVector","fieldsVectorOffset","createFieldsVector","platformIsLittleEndian","Big","_schema","fieldsLength","decodeSchemaFields","schemaFieldsFromJSON","recordBatch","startNodesVector","nodesVectorOffset","startBuffersVector","b_","buffersVectorOffset","batch","nodesLength","decodeFieldNodes","bufferRegions","buffersLength","decodeBuffers","dictionaryBatch","createFieldNode","createBuffer","setInt16","invalidMessageType","nullMessage","invalidMessageMetadata","expected","actual","invalidMessageBodyLength","MessageReader","readMetadataLength","readMetadata","throwIfNull","readMessage","PADDING","metadataLength","AsyncMessageReader","_readMessage","_readMessageBody","_readSchema","_args6","_readMetadataLength","_readMetadata","JSONMessageReader","_MessageReader","_body","_batchIndex","_dictionaryIndex","batches","flattenDataSources","MAGIC_STR","MAGIC","checkForMagicArrowString","magicLength","magicAndPadding","magicX2AndPadding","VectorAssembler","_byteLength","_bufferRegions","RangeError","isNull","addBuffer","_nullV","assembler","vectorChildren","_assembler$visitMany3","assembleFlatVector","assembleFlatListVector","firstOffset","lastOffset","assembleListVector","assembleNestedVector","maxChildTypeId","childLengths","shiftedOffsets","unshiftedOffsets","childLength","RecordBatchWriter","_position","_started","_sink","_dictionaryBlocks","_recordBatchBlocks","_dictionaryDeltaOffsets","autoDestroy","writeLegacyIpcFormat","_autoDestroy","_writeLegacyIpcFormat","writeAll","writeAllAsync","sink","isWritableNodeStream","objectMode","_writeFooter","compareTo","_writeSchema","payload","_InternalEmptyPlaceholderRecordBatch","_writeRecordBatch","flatbufferSize","prefixSize","nPaddingBytes","_write","of","_writePadding","write","_writeMessage","_VectorAssembler$asse","assemble","_writeDictionaries","_writeBodyBuffers","_VectorAssembler$asse2","padding","_step2$value","_writeDictionaryBatch","writableStrategy","readableStrategy","RecordBatchStreamWriter","_RecordBatchWriter","writer","RecordBatchFileWriter","_RecordBatchWriter2","_writeMagic","_step5","_iterator5","_writeAllAsync","noopBuf","nullBufs","bitmapLength","distributeVectorsIntoRecordBatches","vecs","batchArgs","numBatches","batchLength","numColumns","POSITIVE_INFINITY","distributeChildData","uniformlyDistributeChunksAcrossRecordBatches","_changeLengthAndBackfillNullBitmap","_objectWithoutProperties","excluded","sourceKeys","sourceSymbolKeys","propertyIsEnumerable","BaseVector","_bindDataAccessors","VectorName","isConcatSpreadable","BinaryVector","_BaseVector","BoolVector","vectorFromValuesWithType","DateVector","DateDayVector","_DateVector","DateMillisecondVector","_DateVector2","DecimalVector","DictionaryVector","FixedSizeBinaryVector","FixedSizeListVector","FloatVector","ArrowType","vectorTypeToDataType","InputType","arrayTypeToDataType","convertTo16Bit","Float16Vector","_FloatVector","Float32Vector","_FloatVector2","Float64Vector","_FloatVector3","typeCtor","dataCtor","IntervalVector","IntervalDayTimeVector","_IntervalVector","IntervalYearMonthVector","_IntervalVector2","IntVector","is64bit","convert32To64Bit","Int8Vector","_IntVector","Int16Vector","_IntVector2","Int32Vector","_IntVector3","Int64Vector","_IntVector4","_values64","Uint8Vector","_IntVector5","Uint16Vector","_IntVector6","Uint32Vector","_IntVector7","Uint64Vector","_IntVector8","ListVector","MapVector","_this$valueOffsets","NullVector","StructVector","_row","bound","TimestampVector","TimestampSecondVector","_TimestampVector","TimestampMillisecondVector","_TimestampVector2","TimestampMicrosecondVector","_TimestampVector3","TimestampNanosecondVector","_TimestampVector4","TimeVector","TimeSecondVector","_TimeVector","TimeMillisecondVector","_TimeVector2","TimeMicrosecondVector","_TimeVector3","TimeNanosecondVector","_TimeVector4","UnionVector","DenseUnionVector","_UnionVector","SparseUnionVector","_UnionVector2","Utf8Vector","partial0","partial2","GetVisitor","epochMillisecondsLongToMs","epochMillisecondsToDate","getVariableWidthBytes","getDateDay","epochDaysToMs","epochDaysToDate","getDateMillisecond","epochMillisecondsLongToDate","getNumeric","getFloat16","getBigInts","getTimestampSecond","getTimestampMillisecond","getTimestampMicrosecond","epochMicrosecondsLongToMs","getTimestampNanosecond","epochNanosecondsLongToMs","getTimeSecond","getTimeMillisecond","getTimeMicrosecond","getTimeNanosecond","getDenseUnion","getSparseUnion","getIntervalDayTime","getIntervalYearMonth","interval","int32s","_vector","decimal","IndexOfVisitor","indexOfValue","searchElement","indexOfNull","compare","indexOfUnion","IteratorVisitor","vectorIterator","getFn","getVisitor","nullByte","nullBit","nullableIterator","ToArrayVisitor","arrayOfVector","iteratorVisitor","variableWidthColumnErrorMessage","ByteWidthVisitor","____","visitFields","GetVectorConstructor","newDataType","_input","_input$values","_input$type","_input$nullValues","getVectorConstructor","_nullValues$input","_nullValues$input$val","_excluded","transform","indexOfVisitor","toArrayVisitor","getByteWidth","byteWidthVisitor","wrapNullableSet","VectorCtor","partialType0","getColumnAt","getColumnIndex","nameToIndex","selectAt","columnName","_this$_schema","_other$schema$fields$","newIdx","_memo","oldToNew","_other$schema$fields$2","_f","_fs","empty","fromStruct","tableFromIterable","tableFromAsyncIterable","RecordBatchReader","isSync","open","opening","_fromAsync","cols","_selectFieldArgs3","selectColumnArgs","_StructVector","_dictionaries","DictionaryCollector","collect","_selectFieldArgs2","fs","vs","l","batchData","ensureSameLengthData","readAllSync","impl","_impl","isFile","isAsync","isStream","readRecordBatch","RecordBatchStreamReader","RecordBatchJSONReaderImpl","fromArrowJSON","_fromFileHandle","fromFileHandle","_fromAsyncByteStream","fromAsyncByteStream","RecordBatchFileReader","RecordBatchFileReaderImpl","RecordBatchStreamReaderImpl","_callee15","_context16","fromByteStream","readAllAsync","_RecordBatchReader","_Symbol$iterator2","_Symbol$asyncIterator2","AsyncRecordBatchStreamReader","_RecordBatchReader2","_Symbol$iterator3","_Symbol$asyncIterator3","_RecordBatchStreamRea","AsyncRecordBatchFileReader","_AsyncRecordBatchStre","RecordBatchReaderImpl","_recordBatchIndex","_loadVectors","_RecordBatchReaderImp","_Symbol$iterator4","_reader","shouldAutoDestroy","readSchema","_readNextMessageAndValidate","readMessageBody","_loadRecordBatch","_loadDictionaryBatch","AsyncRecordBatchStreamReaderImpl","_RecordBatchReaderImp2","_Symbol$asyncIterator4","_open","_header2","_buffer2","_readNextMessageAndValidate2","_RecordBatchStreamRea2","_readFooter","_readDictionaryBatch","seek","AsyncRecordBatchFileReaderImpl","_AsyncRecordBatchStre2","_open2","_callee9","_readRecordBatch","_callee10","_context10","_readDictionaryBatch2","_callee11","_context11","_readFooter2","_callee12","_context12","_readNextMessageAndValidate3","_callee13","_context13","_RecordBatchStreamRea3","_context14","_readAllAsync","_callee14","_context15","_callee17","_context18","_callee16","_context17","_callee18","_yield$source$stat","_context19","BuilderTransform","_ReadableStream","_WritableStream","_numChunks","_finished","_bufferedSize","builderOptions","_controller","_builder","_getSize","chunkByteLength","_readableStrategy$hig","readableHighWaterMark","_writableStrategy$hig","writableHighWaterMark","ReadableStream","_maybeFlush","WritableStream","_writeValueAndReturnChunkSize","bufferedSize","controller","desiredSize","_enqueue","enqueue","Value","Literal","Equals","LTeq","GTeq","Not","ge","le","eq","_Value","Col","_Value2","colidx","Predicate","expr","And","Or","ComparisonPredicate","_Predicate","_bindLitLit","_bindLitCol","_bindColLit","_bindColCol","CombinationPredicate","_Predicate2","_CombinationPredicate","accum","_CombinationPredicate2","_ComparisonPredicate","_batch","rtrn","left_func","right_func","col","lit","col_func","lastDictionary","reverseLookup","lastKey","_ComparisonPredicate2","_ComparisonPredicate3","_Predicate3","func","countBy","DataFrame","scan","scanReverse","predicate","_Table","FilteredDataFrame","batchIndex","numRows","count_by","countByteLength","ceil","log","counts","CountByResult","_Table2","_DataFrame","_predicate","isBound","and","util_bn_","util_int_","util_bit_","util_math_","util_buffer_","util_vector_","bm","hwm","pull","asyncIterableAsReadableDOMStream","iterableAsReadableDOMStream","queue","readable","ComponentMessageType","ArrowTable","indexBuffer","columnsBuffer","styler","getCell","rowIndex","columnIndex","isBlankCell","headerRows","headerColumns","isIndexCell","isColumnsCell","classNames","content","dataColumnIndex","getContent","columnsTable","dataRowIndex","uuid","indexTable","displayValuesTable","dataTable","getColumnTypeId","nanosToDate","caption","displayValues","styles","numCols","rows","dataRows","dataColumns","serialize","nanos","__assign","Streamlit","API_VERSION","RENDER_EVENT","registeredMessageListener","setComponentReady","onMessageEvent","sendBackMsg","COMPONENT_READY","apiVersion","setFrameHeight","height","document","scrollHeight","lastFrameHeight","SET_FRAME_HEIGHT","setComponentValue","dataType","isBigIntArray","isTypedArray","SET_COMPONENT_VALUE","onRenderMessage","dataframeArgs","argsDataframeToObject","disabled","theme","_injectTheme","eventData","detail","argsDataframe","argsDataframeArrow","_a","toArrowTable","fromEntries","df","postMessage","isStreamlitMessage","style","createElement","head","appendChild","innerHTML","primaryColor","backgroundColor","secondaryBackgroundColor","textColor","font","__extends","extendStatics","__","StreamlitComponentBase","componentDidMount","componentDidUpdate","React","PureComponent","reactIs","REACT_STATICS","childContextTypes","contextType","contextTypes","defaultProps","getDefaultProps","getDerivedStateFromError","getDerivedStateFromProps","mixins","propTypes","KNOWN_STATICS","caller","callee","arity","MEMO_STATICS","TYPE_STATICS","getStatics","component","isMemo","ForwardRef","render","Memo","getOwnPropertyNames","objectPrototype","hoistNonReactStatics","targetComponent","sourceComponent","blacklist","inheritedComponent","targetStatics","sourceStatics","g","q","w","z","$$typeof","A","AsyncMode","ConcurrentMode","ContextConsumer","ContextProvider","Element","Fragment","Lazy","Portal","Profiler","StrictMode","Suspense","isAsyncMode","isConcurrentMode","isContextConsumer","isContextProvider","isElement","isForwardRef","isFragment","isLazy","isPortal","isProfiler","isStrictMode","isSuspense","isValidElementType","typeOf","B","C","encodeURIComponent","D","isMounted","enqueueForceUpdate","enqueueReplaceState","enqueueSetState","E","refs","updater","G","H","isReactComponent","setState","forceUpdate","I","isPureReactComponent","J","K","ref","__self","__source","M","_owner","O","P","Q","keyPrefix","S","U","V","replace","escape","W","aa","X","N","Y","Z","ba","ReactCurrentDispatcher","ReactCurrentBatchConfig","suspense","ReactCurrentOwner","IsSomeRendererActing","Children","only","Component","__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED","cloneElement","createContext","_calculateChangedBits","_currentValue","_currentValue2","_threadCount","Provider","Consumer","createFactory","createRef","forwardRef","isValidElement","lazy","_ctor","_status","_result","useCallback","useContext","useDebugValue","useEffect","useImperativeHandle","useLayoutEffect","useMemo","useReducer","useRef","useState","propIsEnumerable","test1","test2","test3","split","letter","shouldUseNative","toObject"],"mappings":"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","file":"static/js/2.485907b4.chunk.js","sourcesContent":["'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react.production.min.js');\n} else {\n  module.exports = require('./cjs/react.development.js');\n}\n","/**\n * @typedef {object} PrivateData\n * @property {EventTarget} eventTarget The event target.\n * @property {{type:string}} event The original event object.\n * @property {number} eventPhase The current event phase.\n * @property {EventTarget|null} currentTarget The current event target.\n * @property {boolean} canceled The flag to prevent default.\n * @property {boolean} stopped The flag to stop propagation.\n * @property {boolean} immediateStopped The flag to stop propagation immediately.\n * @property {Function|null} passiveListener The listener if the current listener is passive. Otherwise this is null.\n * @property {number} timeStamp The unix time.\n * @private\n */\n\n/**\n * Private data for event wrappers.\n * @type {WeakMap<Event, PrivateData>}\n * @private\n */\nconst privateData = new WeakMap()\n\n/**\n * Cache for wrapper classes.\n * @type {WeakMap<Object, Function>}\n * @private\n */\nconst wrappers = new WeakMap()\n\n/**\n * Get private data.\n * @param {Event} event The event object to get private data.\n * @returns {PrivateData} The private data of the event.\n * @private\n */\nfunction pd(event) {\n    const retv = privateData.get(event)\n    console.assert(\n        retv != null,\n        \"'this' is expected an Event object, but got\",\n        event\n    )\n    return retv\n}\n\n/**\n * https://dom.spec.whatwg.org/#set-the-canceled-flag\n * @param data {PrivateData} private data.\n */\nfunction setCancelFlag(data) {\n    if (data.passiveListener != null) {\n        if (\n            typeof console !== \"undefined\" &&\n            typeof console.error === \"function\"\n        ) {\n            console.error(\n                \"Unable to preventDefault inside passive event listener invocation.\",\n                data.passiveListener\n            )\n        }\n        return\n    }\n    if (!data.event.cancelable) {\n        return\n    }\n\n    data.canceled = true\n    if (typeof data.event.preventDefault === \"function\") {\n        data.event.preventDefault()\n    }\n}\n\n/**\n * @see https://dom.spec.whatwg.org/#interface-event\n * @private\n */\n/**\n * The event wrapper.\n * @constructor\n * @param {EventTarget} eventTarget The event target of this dispatching.\n * @param {Event|{type:string}} event The original event to wrap.\n */\nfunction Event(eventTarget, event) {\n    privateData.set(this, {\n        eventTarget,\n        event,\n        eventPhase: 2,\n        currentTarget: eventTarget,\n        canceled: false,\n        stopped: false,\n        immediateStopped: false,\n        passiveListener: null,\n        timeStamp: event.timeStamp || Date.now(),\n    })\n\n    // https://heycam.github.io/webidl/#Unforgeable\n    Object.defineProperty(this, \"isTrusted\", { value: false, enumerable: true })\n\n    // Define accessors\n    const keys = Object.keys(event)\n    for (let i = 0; i < keys.length; ++i) {\n        const key = keys[i]\n        if (!(key in this)) {\n            Object.defineProperty(this, key, defineRedirectDescriptor(key))\n        }\n    }\n}\n\n// Should be enumerable, but class methods are not enumerable.\nEvent.prototype = {\n    /**\n     * The type of this event.\n     * @type {string}\n     */\n    get type() {\n        return pd(this).event.type\n    },\n\n    /**\n     * The target of this event.\n     * @type {EventTarget}\n     */\n    get target() {\n        return pd(this).eventTarget\n    },\n\n    /**\n     * The target of this event.\n     * @type {EventTarget}\n     */\n    get currentTarget() {\n        return pd(this).currentTarget\n    },\n\n    /**\n     * @returns {EventTarget[]} The composed path of this event.\n     */\n    composedPath() {\n        const currentTarget = pd(this).currentTarget\n        if (currentTarget == null) {\n            return []\n        }\n        return [currentTarget]\n    },\n\n    /**\n     * Constant of NONE.\n     * @type {number}\n     */\n    get NONE() {\n        return 0\n    },\n\n    /**\n     * Constant of CAPTURING_PHASE.\n     * @type {number}\n     */\n    get CAPTURING_PHASE() {\n        return 1\n    },\n\n    /**\n     * Constant of AT_TARGET.\n     * @type {number}\n     */\n    get AT_TARGET() {\n        return 2\n    },\n\n    /**\n     * Constant of BUBBLING_PHASE.\n     * @type {number}\n     */\n    get BUBBLING_PHASE() {\n        return 3\n    },\n\n    /**\n     * The target of this event.\n     * @type {number}\n     */\n    get eventPhase() {\n        return pd(this).eventPhase\n    },\n\n    /**\n     * Stop event bubbling.\n     * @returns {void}\n     */\n    stopPropagation() {\n        const data = pd(this)\n\n        data.stopped = true\n        if (typeof data.event.stopPropagation === \"function\") {\n            data.event.stopPropagation()\n        }\n    },\n\n    /**\n     * Stop event bubbling.\n     * @returns {void}\n     */\n    stopImmediatePropagation() {\n        const data = pd(this)\n\n        data.stopped = true\n        data.immediateStopped = true\n        if (typeof data.event.stopImmediatePropagation === \"function\") {\n            data.event.stopImmediatePropagation()\n        }\n    },\n\n    /**\n     * The flag to be bubbling.\n     * @type {boolean}\n     */\n    get bubbles() {\n        return Boolean(pd(this).event.bubbles)\n    },\n\n    /**\n     * The flag to be cancelable.\n     * @type {boolean}\n     */\n    get cancelable() {\n        return Boolean(pd(this).event.cancelable)\n    },\n\n    /**\n     * Cancel this event.\n     * @returns {void}\n     */\n    preventDefault() {\n        setCancelFlag(pd(this))\n    },\n\n    /**\n     * The flag to indicate cancellation state.\n     * @type {boolean}\n     */\n    get defaultPrevented() {\n        return pd(this).canceled\n    },\n\n    /**\n     * The flag to be composed.\n     * @type {boolean}\n     */\n    get composed() {\n        return Boolean(pd(this).event.composed)\n    },\n\n    /**\n     * The unix time of this event.\n     * @type {number}\n     */\n    get timeStamp() {\n        return pd(this).timeStamp\n    },\n\n    /**\n     * The target of this event.\n     * @type {EventTarget}\n     * @deprecated\n     */\n    get srcElement() {\n        return pd(this).eventTarget\n    },\n\n    /**\n     * The flag to stop event bubbling.\n     * @type {boolean}\n     * @deprecated\n     */\n    get cancelBubble() {\n        return pd(this).stopped\n    },\n    set cancelBubble(value) {\n        if (!value) {\n            return\n        }\n        const data = pd(this)\n\n        data.stopped = true\n        if (typeof data.event.cancelBubble === \"boolean\") {\n            data.event.cancelBubble = true\n        }\n    },\n\n    /**\n     * The flag to indicate cancellation state.\n     * @type {boolean}\n     * @deprecated\n     */\n    get returnValue() {\n        return !pd(this).canceled\n    },\n    set returnValue(value) {\n        if (!value) {\n            setCancelFlag(pd(this))\n        }\n    },\n\n    /**\n     * Initialize this event object. But do nothing under event dispatching.\n     * @param {string} type The event type.\n     * @param {boolean} [bubbles=false] The flag to be possible to bubble up.\n     * @param {boolean} [cancelable=false] The flag to be possible to cancel.\n     * @deprecated\n     */\n    initEvent() {\n        // Do nothing.\n    },\n}\n\n// `constructor` is not enumerable.\nObject.defineProperty(Event.prototype, \"constructor\", {\n    value: Event,\n    configurable: true,\n    writable: true,\n})\n\n// Ensure `event instanceof window.Event` is `true`.\nif (typeof window !== \"undefined\" && typeof window.Event !== \"undefined\") {\n    Object.setPrototypeOf(Event.prototype, window.Event.prototype)\n\n    // Make association for wrappers.\n    wrappers.set(window.Event.prototype, Event)\n}\n\n/**\n * Get the property descriptor to redirect a given property.\n * @param {string} key Property name to define property descriptor.\n * @returns {PropertyDescriptor} The property descriptor to redirect the property.\n * @private\n */\nfunction defineRedirectDescriptor(key) {\n    return {\n        get() {\n            return pd(this).event[key]\n        },\n        set(value) {\n            pd(this).event[key] = value\n        },\n        configurable: true,\n        enumerable: true,\n    }\n}\n\n/**\n * Get the property descriptor to call a given method property.\n * @param {string} key Property name to define property descriptor.\n * @returns {PropertyDescriptor} The property descriptor to call the method property.\n * @private\n */\nfunction defineCallDescriptor(key) {\n    return {\n        value() {\n            const event = pd(this).event\n            return event[key].apply(event, arguments)\n        },\n        configurable: true,\n        enumerable: true,\n    }\n}\n\n/**\n * Define new wrapper class.\n * @param {Function} BaseEvent The base wrapper class.\n * @param {Object} proto The prototype of the original event.\n * @returns {Function} The defined wrapper class.\n * @private\n */\nfunction defineWrapper(BaseEvent, proto) {\n    const keys = Object.keys(proto)\n    if (keys.length === 0) {\n        return BaseEvent\n    }\n\n    /** CustomEvent */\n    function CustomEvent(eventTarget, event) {\n        BaseEvent.call(this, eventTarget, event)\n    }\n\n    CustomEvent.prototype = Object.create(BaseEvent.prototype, {\n        constructor: { value: CustomEvent, configurable: true, writable: true },\n    })\n\n    // Define accessors.\n    for (let i = 0; i < keys.length; ++i) {\n        const key = keys[i]\n        if (!(key in BaseEvent.prototype)) {\n            const descriptor = Object.getOwnPropertyDescriptor(proto, key)\n            const isFunc = typeof descriptor.value === \"function\"\n            Object.defineProperty(\n                CustomEvent.prototype,\n                key,\n                isFunc\n                    ? defineCallDescriptor(key)\n                    : defineRedirectDescriptor(key)\n            )\n        }\n    }\n\n    return CustomEvent\n}\n\n/**\n * Get the wrapper class of a given prototype.\n * @param {Object} proto The prototype of the original event to get its wrapper.\n * @returns {Function} The wrapper class.\n * @private\n */\nfunction getWrapper(proto) {\n    if (proto == null || proto === Object.prototype) {\n        return Event\n    }\n\n    let wrapper = wrappers.get(proto)\n    if (wrapper == null) {\n        wrapper = defineWrapper(getWrapper(Object.getPrototypeOf(proto)), proto)\n        wrappers.set(proto, wrapper)\n    }\n    return wrapper\n}\n\n/**\n * Wrap a given event to management a dispatching.\n * @param {EventTarget} eventTarget The event target of this dispatching.\n * @param {Object} event The event to wrap.\n * @returns {Event} The wrapper instance.\n * @private\n */\nexport function wrapEvent(eventTarget, event) {\n    const Wrapper = getWrapper(Object.getPrototypeOf(event))\n    return new Wrapper(eventTarget, event)\n}\n\n/**\n * Get the immediateStopped flag of a given event.\n * @param {Event} event The event to get.\n * @returns {boolean} The flag to stop propagation immediately.\n * @private\n */\nexport function isStopped(event) {\n    return pd(event).immediateStopped\n}\n\n/**\n * Set the current event phase of a given event.\n * @param {Event} event The event to set current target.\n * @param {number} eventPhase New event phase.\n * @returns {void}\n * @private\n */\nexport function setEventPhase(event, eventPhase) {\n    pd(event).eventPhase = eventPhase\n}\n\n/**\n * Set the current target of a given event.\n * @param {Event} event The event to set current target.\n * @param {EventTarget|null} currentTarget New current target.\n * @returns {void}\n * @private\n */\nexport function setCurrentTarget(event, currentTarget) {\n    pd(event).currentTarget = currentTarget\n}\n\n/**\n * Set a passive listener of a given event.\n * @param {Event} event The event to set current target.\n * @param {Function|null} passiveListener New passive listener.\n * @returns {void}\n * @private\n */\nexport function setPassiveListener(event, passiveListener) {\n    pd(event).passiveListener = passiveListener\n}\n","import {\n    isStopped,\n    setCurrentTarget,\n    setEventPhase,\n    setPassiveListener,\n    wrapEvent,\n} from \"./event.mjs\"\n\n/**\n * @typedef {object} ListenerNode\n * @property {Function} listener\n * @property {1|2|3} listenerType\n * @property {boolean} passive\n * @property {boolean} once\n * @property {ListenerNode|null} next\n * @private\n */\n\n/**\n * @type {WeakMap<object, Map<string, ListenerNode>>}\n * @private\n */\nconst listenersMap = new WeakMap()\n\n// Listener types\nconst CAPTURE = 1\nconst BUBBLE = 2\nconst ATTRIBUTE = 3\n\n/**\n * Check whether a given value is an object or not.\n * @param {any} x The value to check.\n * @returns {boolean} `true` if the value is an object.\n */\nfunction isObject(x) {\n    return x !== null && typeof x === \"object\" //eslint-disable-line no-restricted-syntax\n}\n\n/**\n * Get listeners.\n * @param {EventTarget} eventTarget The event target to get.\n * @returns {Map<string, ListenerNode>} The listeners.\n * @private\n */\nfunction getListeners(eventTarget) {\n    const listeners = listenersMap.get(eventTarget)\n    if (listeners == null) {\n        throw new TypeError(\n            \"'this' is expected an EventTarget object, but got another value.\"\n        )\n    }\n    return listeners\n}\n\n/**\n * Get the property descriptor for the event attribute of a given event.\n * @param {string} eventName The event name to get property descriptor.\n * @returns {PropertyDescriptor} The property descriptor.\n * @private\n */\nfunction defineEventAttributeDescriptor(eventName) {\n    return {\n        get() {\n            const listeners = getListeners(this)\n            let node = listeners.get(eventName)\n            while (node != null) {\n                if (node.listenerType === ATTRIBUTE) {\n                    return node.listener\n                }\n                node = node.next\n            }\n            return null\n        },\n\n        set(listener) {\n            if (typeof listener !== \"function\" && !isObject(listener)) {\n                listener = null // eslint-disable-line no-param-reassign\n            }\n            const listeners = getListeners(this)\n\n            // Traverse to the tail while removing old value.\n            let prev = null\n            let node = listeners.get(eventName)\n            while (node != null) {\n                if (node.listenerType === ATTRIBUTE) {\n                    // Remove old value.\n                    if (prev !== null) {\n                        prev.next = node.next\n                    } else if (node.next !== null) {\n                        listeners.set(eventName, node.next)\n                    } else {\n                        listeners.delete(eventName)\n                    }\n                } else {\n                    prev = node\n                }\n\n                node = node.next\n            }\n\n            // Add new value.\n            if (listener !== null) {\n                const newNode = {\n                    listener,\n                    listenerType: ATTRIBUTE,\n                    passive: false,\n                    once: false,\n                    next: null,\n                }\n                if (prev === null) {\n                    listeners.set(eventName, newNode)\n                } else {\n                    prev.next = newNode\n                }\n            }\n        },\n        configurable: true,\n        enumerable: true,\n    }\n}\n\n/**\n * Define an event attribute (e.g. `eventTarget.onclick`).\n * @param {Object} eventTargetPrototype The event target prototype to define an event attrbite.\n * @param {string} eventName The event name to define.\n * @returns {void}\n */\nfunction defineEventAttribute(eventTargetPrototype, eventName) {\n    Object.defineProperty(\n        eventTargetPrototype,\n        `on${eventName}`,\n        defineEventAttributeDescriptor(eventName)\n    )\n}\n\n/**\n * Define a custom EventTarget with event attributes.\n * @param {string[]} eventNames Event names for event attributes.\n * @returns {EventTarget} The custom EventTarget.\n * @private\n */\nfunction defineCustomEventTarget(eventNames) {\n    /** CustomEventTarget */\n    function CustomEventTarget() {\n        EventTarget.call(this)\n    }\n\n    CustomEventTarget.prototype = Object.create(EventTarget.prototype, {\n        constructor: {\n            value: CustomEventTarget,\n            configurable: true,\n            writable: true,\n        },\n    })\n\n    for (let i = 0; i < eventNames.length; ++i) {\n        defineEventAttribute(CustomEventTarget.prototype, eventNames[i])\n    }\n\n    return CustomEventTarget\n}\n\n/**\n * EventTarget.\n *\n * - This is constructor if no arguments.\n * - This is a function which returns a CustomEventTarget constructor if there are arguments.\n *\n * For example:\n *\n *     class A extends EventTarget {}\n *     class B extends EventTarget(\"message\") {}\n *     class C extends EventTarget(\"message\", \"error\") {}\n *     class D extends EventTarget([\"message\", \"error\"]) {}\n */\nfunction EventTarget() {\n    /*eslint-disable consistent-return */\n    if (this instanceof EventTarget) {\n        listenersMap.set(this, new Map())\n        return\n    }\n    if (arguments.length === 1 && Array.isArray(arguments[0])) {\n        return defineCustomEventTarget(arguments[0])\n    }\n    if (arguments.length > 0) {\n        const types = new Array(arguments.length)\n        for (let i = 0; i < arguments.length; ++i) {\n            types[i] = arguments[i]\n        }\n        return defineCustomEventTarget(types)\n    }\n    throw new TypeError(\"Cannot call a class as a function\")\n    /*eslint-enable consistent-return */\n}\n\n// Should be enumerable, but class methods are not enumerable.\nEventTarget.prototype = {\n    /**\n     * Add a given listener to this event target.\n     * @param {string} eventName The event name to add.\n     * @param {Function} listener The listener to add.\n     * @param {boolean|{capture?:boolean,passive?:boolean,once?:boolean}} [options] The options for this listener.\n     * @returns {void}\n     */\n    addEventListener(eventName, listener, options) {\n        if (listener == null) {\n            return\n        }\n        if (typeof listener !== \"function\" && !isObject(listener)) {\n            throw new TypeError(\"'listener' should be a function or an object.\")\n        }\n\n        const listeners = getListeners(this)\n        const optionsIsObj = isObject(options)\n        const capture = optionsIsObj\n            ? Boolean(options.capture)\n            : Boolean(options)\n        const listenerType = capture ? CAPTURE : BUBBLE\n        const newNode = {\n            listener,\n            listenerType,\n            passive: optionsIsObj && Boolean(options.passive),\n            once: optionsIsObj && Boolean(options.once),\n            next: null,\n        }\n\n        // Set it as the first node if the first node is null.\n        let node = listeners.get(eventName)\n        if (node === undefined) {\n            listeners.set(eventName, newNode)\n            return\n        }\n\n        // Traverse to the tail while checking duplication..\n        let prev = null\n        while (node != null) {\n            if (\n                node.listener === listener &&\n                node.listenerType === listenerType\n            ) {\n                // Should ignore duplication.\n                return\n            }\n            prev = node\n            node = node.next\n        }\n\n        // Add it.\n        prev.next = newNode\n    },\n\n    /**\n     * Remove a given listener from this event target.\n     * @param {string} eventName The event name to remove.\n     * @param {Function} listener The listener to remove.\n     * @param {boolean|{capture?:boolean,passive?:boolean,once?:boolean}} [options] The options for this listener.\n     * @returns {void}\n     */\n    removeEventListener(eventName, listener, options) {\n        if (listener == null) {\n            return\n        }\n\n        const listeners = getListeners(this)\n        const capture = isObject(options)\n            ? Boolean(options.capture)\n            : Boolean(options)\n        const listenerType = capture ? CAPTURE : BUBBLE\n\n        let prev = null\n        let node = listeners.get(eventName)\n        while (node != null) {\n            if (\n                node.listener === listener &&\n                node.listenerType === listenerType\n            ) {\n                if (prev !== null) {\n                    prev.next = node.next\n                } else if (node.next !== null) {\n                    listeners.set(eventName, node.next)\n                } else {\n                    listeners.delete(eventName)\n                }\n                return\n            }\n\n            prev = node\n            node = node.next\n        }\n    },\n\n    /**\n     * Dispatch a given event.\n     * @param {Event|{type:string}} event The event to dispatch.\n     * @returns {boolean} `false` if canceled.\n     */\n    dispatchEvent(event) {\n        if (event == null || typeof event.type !== \"string\") {\n            throw new TypeError('\"event.type\" should be a string.')\n        }\n\n        // If listeners aren't registered, terminate.\n        const listeners = getListeners(this)\n        const eventName = event.type\n        let node = listeners.get(eventName)\n        if (node == null) {\n            return true\n        }\n\n        // Since we cannot rewrite several properties, so wrap object.\n        const wrappedEvent = wrapEvent(this, event)\n\n        // This doesn't process capturing phase and bubbling phase.\n        // This isn't participating in a tree.\n        let prev = null\n        while (node != null) {\n            // Remove this listener if it's once\n            if (node.once) {\n                if (prev !== null) {\n                    prev.next = node.next\n                } else if (node.next !== null) {\n                    listeners.set(eventName, node.next)\n                } else {\n                    listeners.delete(eventName)\n                }\n            } else {\n                prev = node\n            }\n\n            // Call this listener\n            setPassiveListener(\n                wrappedEvent,\n                node.passive ? node.listener : null\n            )\n            if (typeof node.listener === \"function\") {\n                try {\n                    node.listener.call(this, wrappedEvent)\n                } catch (err) {\n                    if (\n                        typeof console !== \"undefined\" &&\n                        typeof console.error === \"function\"\n                    ) {\n                        console.error(err)\n                    }\n                }\n            } else if (\n                node.listenerType !== ATTRIBUTE &&\n                typeof node.listener.handleEvent === \"function\"\n            ) {\n                node.listener.handleEvent(wrappedEvent)\n            }\n\n            // Break if `event.stopImmediatePropagation` was called.\n            if (isStopped(wrappedEvent)) {\n                break\n            }\n\n            node = node.next\n        }\n        setPassiveListener(wrappedEvent, null)\n        setEventPhase(wrappedEvent, 0)\n        setCurrentTarget(wrappedEvent, null)\n\n        return !wrappedEvent.defaultPrevented\n    },\n}\n\n// `constructor` is not enumerable.\nObject.defineProperty(EventTarget.prototype, \"constructor\", {\n    value: EventTarget,\n    configurable: true,\n    writable: true,\n})\n\n// Ensure `eventTarget instanceof window.EventTarget` is `true`.\nif (\n    typeof window !== \"undefined\" &&\n    typeof window.EventTarget !== \"undefined\"\n) {\n    Object.setPrototypeOf(EventTarget.prototype, window.EventTarget.prototype)\n}\n\nexport { defineEventAttribute, EventTarget }\nexport default EventTarget\n","export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n  return arr2;\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","import unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nexport default function _createForOfIteratorHelper(o, allowArrayLike) {\n  var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"];\n  if (!it) {\n    if (Array.isArray(o) || (it = unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n      var F = function F() {};\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n  var normalCompletion = true,\n    didErr = false,\n    err;\n  return {\n    s: function s() {\n      it = it.call(o);\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n      args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n      _next(undefined);\n    });\n  };\n}","export default function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}","export default function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  }, _typeof(obj);\n}","import _typeof from \"./typeof.js\";\nimport toPrimitive from \"./toPrimitive.js\";\nexport default function _toPropertyKey(arg) {\n  var key = toPrimitive(arg, \"string\");\n  return _typeof(key) === \"symbol\" ? key : String(key);\n}","import _typeof from \"./typeof.js\";\nexport default function _toPrimitive(input, hint) {\n  if (_typeof(input) !== \"object\" || input === null) return input;\n  var prim = input[Symbol.toPrimitive];\n  if (prim !== undefined) {\n    var res = prim.call(input, hint || \"default\");\n    if (_typeof(res) !== \"object\") return res;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (hint === \"string\" ? String : Number)(input);\n}","import toPropertyKey from \"./toPropertyKey.js\";\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, toPropertyKey(descriptor.key), descriptor);\n  }\n}\nexport default function _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  Object.defineProperty(Constructor, \"prototype\", {\n    writable: false\n  });\n  return Constructor;\n}","import _typeof from \"./typeof.js\";\nexport default function _regeneratorRuntime() {\n  \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */\n  _regeneratorRuntime = function _regeneratorRuntime() {\n    return exports;\n  };\n  var exports = {},\n    Op = Object.prototype,\n    hasOwn = Op.hasOwnProperty,\n    defineProperty = Object.defineProperty || function (obj, key, desc) {\n      obj[key] = desc.value;\n    },\n    $Symbol = \"function\" == typeof Symbol ? Symbol : {},\n    iteratorSymbol = $Symbol.iterator || \"@@iterator\",\n    asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\",\n    toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n  function define(obj, key, value) {\n    return Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: !0,\n      configurable: !0,\n      writable: !0\n    }), obj[key];\n  }\n  try {\n    define({}, \"\");\n  } catch (err) {\n    define = function define(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator,\n      generator = Object.create(protoGenerator.prototype),\n      context = new Context(tryLocsList || []);\n    return defineProperty(generator, \"_invoke\", {\n      value: makeInvokeMethod(innerFn, self, context)\n    }), generator;\n  }\n  function tryCatch(fn, obj, arg) {\n    try {\n      return {\n        type: \"normal\",\n        arg: fn.call(obj, arg)\n      };\n    } catch (err) {\n      return {\n        type: \"throw\",\n        arg: err\n      };\n    }\n  }\n  exports.wrap = wrap;\n  var ContinueSentinel = {};\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n  var IteratorPrototype = {};\n  define(IteratorPrototype, iteratorSymbol, function () {\n    return this;\n  });\n  var getProto = Object.getPrototypeOf,\n    NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype);\n  var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype);\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function (method) {\n      define(prototype, method, function (arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (\"throw\" !== record.type) {\n        var result = record.arg,\n          value = result.value;\n        return value && \"object\" == _typeof(value) && hasOwn.call(value, \"__await\") ? PromiseImpl.resolve(value.__await).then(function (value) {\n          invoke(\"next\", value, resolve, reject);\n        }, function (err) {\n          invoke(\"throw\", err, resolve, reject);\n        }) : PromiseImpl.resolve(value).then(function (unwrapped) {\n          result.value = unwrapped, resolve(result);\n        }, function (error) {\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n      reject(record.arg);\n    }\n    var previousPromise;\n    defineProperty(this, \"_invoke\", {\n      value: function value(method, arg) {\n        function callInvokeWithMethodAndArg() {\n          return new PromiseImpl(function (resolve, reject) {\n            invoke(method, arg, resolve, reject);\n          });\n        }\n        return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg();\n      }\n    });\n  }\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = \"suspendedStart\";\n    return function (method, arg) {\n      if (\"executing\" === state) throw new Error(\"Generator is already running\");\n      if (\"completed\" === state) {\n        if (\"throw\" === method) throw arg;\n        return doneResult();\n      }\n      for (context.method = method, context.arg = arg;;) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n        if (\"next\" === context.method) context.sent = context._sent = context.arg;else if (\"throw\" === context.method) {\n          if (\"suspendedStart\" === state) throw state = \"completed\", context.arg;\n          context.dispatchException(context.arg);\n        } else \"return\" === context.method && context.abrupt(\"return\", context.arg);\n        state = \"executing\";\n        var record = tryCatch(innerFn, self, context);\n        if (\"normal\" === record.type) {\n          if (state = context.done ? \"completed\" : \"suspendedYield\", record.arg === ContinueSentinel) continue;\n          return {\n            value: record.arg,\n            done: context.done\n          };\n        }\n        \"throw\" === record.type && (state = \"completed\", context.method = \"throw\", context.arg = record.arg);\n      }\n    };\n  }\n  function maybeInvokeDelegate(delegate, context) {\n    var methodName = context.method,\n      method = delegate.iterator[methodName];\n    if (undefined === method) return context.delegate = null, \"throw\" === methodName && delegate.iterator[\"return\"] && (context.method = \"return\", context.arg = undefined, maybeInvokeDelegate(delegate, context), \"throw\" === context.method) || \"return\" !== methodName && (context.method = \"throw\", context.arg = new TypeError(\"The iterator does not provide a '\" + methodName + \"' method\")), ContinueSentinel;\n    var record = tryCatch(method, delegate.iterator, context.arg);\n    if (\"throw\" === record.type) return context.method = \"throw\", context.arg = record.arg, context.delegate = null, ContinueSentinel;\n    var info = record.arg;\n    return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, \"return\" !== context.method && (context.method = \"next\", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = \"throw\", context.arg = new TypeError(\"iterator result is not an object\"), context.delegate = null, ContinueSentinel);\n  }\n  function pushTryEntry(locs) {\n    var entry = {\n      tryLoc: locs[0]\n    };\n    1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry);\n  }\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\", delete record.arg, entry.completion = record;\n  }\n  function Context(tryLocsList) {\n    this.tryEntries = [{\n      tryLoc: \"root\"\n    }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0);\n  }\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) return iteratorMethod.call(iterable);\n      if (\"function\" == typeof iterable.next) return iterable;\n      if (!isNaN(iterable.length)) {\n        var i = -1,\n          next = function next() {\n            for (; ++i < iterable.length;) if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next;\n            return next.value = undefined, next.done = !0, next;\n          };\n        return next.next = next;\n      }\n    }\n    return {\n      next: doneResult\n    };\n  }\n  function doneResult() {\n    return {\n      value: undefined,\n      done: !0\n    };\n  }\n  return GeneratorFunction.prototype = GeneratorFunctionPrototype, defineProperty(Gp, \"constructor\", {\n    value: GeneratorFunctionPrototype,\n    configurable: !0\n  }), defineProperty(GeneratorFunctionPrototype, \"constructor\", {\n    value: GeneratorFunction,\n    configurable: !0\n  }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, \"GeneratorFunction\"), exports.isGeneratorFunction = function (genFun) {\n    var ctor = \"function\" == typeof genFun && genFun.constructor;\n    return !!ctor && (ctor === GeneratorFunction || \"GeneratorFunction\" === (ctor.displayName || ctor.name));\n  }, exports.mark = function (genFun) {\n    return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, \"GeneratorFunction\")), genFun.prototype = Object.create(Gp), genFun;\n  }, exports.awrap = function (arg) {\n    return {\n      __await: arg\n    };\n  }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () {\n    return this;\n  }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    void 0 === PromiseImpl && (PromiseImpl = Promise);\n    var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl);\n    return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) {\n      return result.done ? result.value : iter.next();\n    });\n  }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, \"Generator\"), define(Gp, iteratorSymbol, function () {\n    return this;\n  }), define(Gp, \"toString\", function () {\n    return \"[object Generator]\";\n  }), exports.keys = function (val) {\n    var object = Object(val),\n      keys = [];\n    for (var key in object) keys.push(key);\n    return keys.reverse(), function next() {\n      for (; keys.length;) {\n        var key = keys.pop();\n        if (key in object) return next.value = key, next.done = !1, next;\n      }\n      return next.done = !0, next;\n    };\n  }, exports.values = values, Context.prototype = {\n    constructor: Context,\n    reset: function reset(skipTempReset) {\n      if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) \"t\" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined);\n    },\n    stop: function stop() {\n      this.done = !0;\n      var rootRecord = this.tryEntries[0].completion;\n      if (\"throw\" === rootRecord.type) throw rootRecord.arg;\n      return this.rval;\n    },\n    dispatchException: function dispatchException(exception) {\n      if (this.done) throw exception;\n      var context = this;\n      function handle(loc, caught) {\n        return record.type = \"throw\", record.arg = exception, context.next = loc, caught && (context.method = \"next\", context.arg = undefined), !!caught;\n      }\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i],\n          record = entry.completion;\n        if (\"root\" === entry.tryLoc) return handle(\"end\");\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\"),\n            hasFinally = hasOwn.call(entry, \"finallyLoc\");\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0);\n            if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc);\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0);\n          } else {\n            if (!hasFinally) throw new Error(\"try statement without catch or finally\");\n            if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc);\n          }\n        }\n      }\n    },\n    abrupt: function abrupt(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n      finallyEntry && (\"break\" === type || \"continue\" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null);\n      var record = finallyEntry ? finallyEntry.completion : {};\n      return record.type = type, record.arg = arg, finallyEntry ? (this.method = \"next\", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record);\n    },\n    complete: function complete(record, afterLoc) {\n      if (\"throw\" === record.type) throw record.arg;\n      return \"break\" === record.type || \"continue\" === record.type ? this.next = record.arg : \"return\" === record.type ? (this.rval = this.arg = record.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel;\n    },\n    finish: function finish(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel;\n      }\n    },\n    \"catch\": function _catch(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (\"throw\" === record.type) {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n      throw new Error(\"illegal catch attempt\");\n    },\n    delegateYield: function delegateYield(iterable, resultName, nextLoc) {\n      return this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      }, \"next\" === this.method && (this.arg = undefined), ContinueSentinel;\n    }\n  }, exports;\n}","import arrayWithHoles from \"./arrayWithHoles.js\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableRest from \"./nonIterableRest.js\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  var _i = null == arr ? null : \"undefined\" != typeof Symbol && arr[Symbol.iterator] || arr[\"@@iterator\"];\n  if (null != _i) {\n    var _s,\n      _e,\n      _x,\n      _r,\n      _arr = [],\n      _n = !0,\n      _d = !1;\n    try {\n      if (_x = (_i = _i.call(arr)).next, 0 === i) {\n        if (Object(_i) !== _i) return;\n        _n = !1;\n      } else for (; !(_n = (_s = _x.call(_i)).done) && (_arr.push(_s.value), _arr.length !== i); _n = !0);\n    } catch (err) {\n      _d = !0, _e = err;\n    } finally {\n      try {\n        if (!_n && null != _i[\"return\"] && (_r = _i[\"return\"](), Object(_r) !== _r)) return;\n      } finally {\n        if (_d) throw _e;\n      }\n    }\n    return _arr;\n  }\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","export default function _OverloadYield(value, kind) {\n  this.v = value, this.k = kind;\n}","import OverloadYield from \"./OverloadYield.js\";\nexport default function _awaitAsyncGenerator(value) {\n  return new OverloadYield(value, 0);\n}","import OverloadYield from \"./OverloadYield.js\";\nexport default function AsyncGenerator(gen) {\n  var front, back;\n  function resume(key, arg) {\n    try {\n      var result = gen[key](arg),\n        value = result.value,\n        overloaded = value instanceof OverloadYield;\n      Promise.resolve(overloaded ? value.v : value).then(function (arg) {\n        if (overloaded) {\n          var nextKey = \"return\" === key ? \"return\" : \"next\";\n          if (!value.k || arg.done) return resume(nextKey, arg);\n          arg = gen[nextKey](arg).value;\n        }\n        settle(result.done ? \"return\" : \"normal\", arg);\n      }, function (err) {\n        resume(\"throw\", err);\n      });\n    } catch (err) {\n      settle(\"throw\", err);\n    }\n  }\n  function settle(type, value) {\n    switch (type) {\n      case \"return\":\n        front.resolve({\n          value: value,\n          done: !0\n        });\n        break;\n      case \"throw\":\n        front.reject(value);\n        break;\n      default:\n        front.resolve({\n          value: value,\n          done: !1\n        });\n    }\n    (front = front.next) ? resume(front.key, front.arg) : back = null;\n  }\n  this._invoke = function (key, arg) {\n    return new Promise(function (resolve, reject) {\n      var request = {\n        key: key,\n        arg: arg,\n        resolve: resolve,\n        reject: reject,\n        next: null\n      };\n      back ? back = back.next = request : (front = back = request, resume(key, arg));\n    });\n  }, \"function\" != typeof gen[\"return\"] && (this[\"return\"] = void 0);\n}\nAsyncGenerator.prototype[\"function\" == typeof Symbol && Symbol.asyncIterator || \"@@asyncIterator\"] = function () {\n  return this;\n}, AsyncGenerator.prototype.next = function (arg) {\n  return this._invoke(\"next\", arg);\n}, AsyncGenerator.prototype[\"throw\"] = function (arg) {\n  return this._invoke(\"throw\", arg);\n}, AsyncGenerator.prototype[\"return\"] = function (arg) {\n  return this._invoke(\"return\", arg);\n};","import AsyncGenerator from \"./AsyncGenerator.js\";\nexport default function _wrapAsyncGenerator(fn) {\n  return function () {\n    return new AsyncGenerator(fn.apply(this, arguments));\n  };\n}","import OverloadYield from \"./OverloadYield.js\";\nexport default function _asyncGeneratorDelegate(inner) {\n  var iter = {},\n    waiting = !1;\n  function pump(key, value) {\n    return waiting = !0, value = new Promise(function (resolve) {\n      resolve(inner[key](value));\n    }), {\n      done: !1,\n      value: new OverloadYield(value, 1)\n    };\n  }\n  return iter[\"undefined\" != typeof Symbol && Symbol.iterator || \"@@iterator\"] = function () {\n    return this;\n  }, iter.next = function (value) {\n    return waiting ? (waiting = !1, value) : pump(\"next\", value);\n  }, \"function\" == typeof inner[\"throw\"] && (iter[\"throw\"] = function (value) {\n    if (waiting) throw waiting = !1, value;\n    return pump(\"throw\", value);\n  }), \"function\" == typeof inner[\"return\"] && (iter[\"return\"] = function (value) {\n    return waiting ? (waiting = !1, value) : pump(\"return\", value);\n  }), iter;\n}","export default function _asyncIterator(iterable) {\n  var method,\n    async,\n    sync,\n    retry = 2;\n  for (\"undefined\" != typeof Symbol && (async = Symbol.asyncIterator, sync = Symbol.iterator); retry--;) {\n    if (async && null != (method = iterable[async])) return method.call(iterable);\n    if (sync && null != (method = iterable[sync])) return new AsyncFromSyncIterator(method.call(iterable));\n    async = \"@@asyncIterator\", sync = \"@@iterator\";\n  }\n  throw new TypeError(\"Object is not async iterable\");\n}\nfunction AsyncFromSyncIterator(s) {\n  function AsyncFromSyncIteratorContinuation(r) {\n    if (Object(r) !== r) return Promise.reject(new TypeError(r + \" is not an object.\"));\n    var done = r.done;\n    return Promise.resolve(r.value).then(function (value) {\n      return {\n        value: value,\n        done: done\n      };\n    });\n  }\n  return AsyncFromSyncIterator = function AsyncFromSyncIterator(s) {\n    this.s = s, this.n = s.next;\n  }, AsyncFromSyncIterator.prototype = {\n    s: null,\n    n: null,\n    next: function next() {\n      return AsyncFromSyncIteratorContinuation(this.n.apply(this.s, arguments));\n    },\n    \"return\": function _return(value) {\n      var ret = this.s[\"return\"];\n      return void 0 === ret ? Promise.resolve({\n        value: value,\n        done: !0\n      }) : AsyncFromSyncIteratorContinuation(ret.apply(this.s, arguments));\n    },\n    \"throw\": function _throw(value) {\n      var thr = this.s[\"return\"];\n      return void 0 === thr ? Promise.reject(value) : AsyncFromSyncIteratorContinuation(thr.apply(this.s, arguments));\n    }\n  }, new AsyncFromSyncIterator(s);\n}","/// @file\n/// @addtogroup flatbuffers_javascript_api\n/// @{\n/// @cond FLATBUFFERS_INTERNAL\n\n/**\n * @fileoverview\n *\n * Need to suppress 'global this' error so the Node.js export line doesn't cause\n * closure compile to error out.\n * @suppress {globalThis}\n */\n\n/**\n * @const\n * @namespace\n */\nvar flatbuffers = {};\n\n/**\n * @typedef {number}\n */\nflatbuffers.Offset;\n\n/**\n * @typedef {{\n *   bb: flatbuffers.ByteBuffer,\n *   bb_pos: number\n * }}\n */\nflatbuffers.Table;\n\n/**\n * @type {number}\n * @const\n */\nflatbuffers.SIZEOF_SHORT = 2;\n\n/**\n * @type {number}\n * @const\n */\nflatbuffers.SIZEOF_INT = 4;\n\n/**\n * @type {number}\n * @const\n */\nflatbuffers.FILE_IDENTIFIER_LENGTH = 4;\n\n/**\n * @enum {number}\n */\nflatbuffers.Encoding = {\n  UTF8_BYTES: 1,\n  UTF16_STRING: 2\n};\n\n/**\n * @type {Int32Array}\n * @const\n */\nflatbuffers.int32 = new Int32Array(2);\n\n/**\n * @type {Float32Array}\n * @const\n */\nflatbuffers.float32 = new Float32Array(flatbuffers.int32.buffer);\n\n/**\n * @type {Float64Array}\n * @const\n */\nflatbuffers.float64 = new Float64Array(flatbuffers.int32.buffer);\n\n/**\n * @type {boolean}\n * @const\n */\nflatbuffers.isLittleEndian = new Uint16Array(new Uint8Array([1, 0]).buffer)[0] === 1;\n\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * @constructor\n * @param {number} low\n * @param {number} high\n */\nflatbuffers.Long = function(low, high) {\n  /**\n   * @type {number}\n   * @const\n   */\n  this.low = low | 0;\n\n  /**\n   * @type {number}\n   * @const\n   */\n  this.high = high | 0;\n};\n\n/**\n * @param {number} low\n * @param {number} high\n * @returns {flatbuffers.Long}\n */\nflatbuffers.Long.create = function(low, high) {\n  // Special-case zero to avoid GC overhead for default values\n  return low == 0 && high == 0 ? flatbuffers.Long.ZERO : new flatbuffers.Long(low, high);\n};\n\n/**\n * @returns {number}\n */\nflatbuffers.Long.prototype.toFloat64 = function() {\n  return (this.low >>> 0) + this.high * 0x100000000;\n};\n\n/**\n * @param {flatbuffers.Long} other\n * @returns {boolean}\n */\nflatbuffers.Long.prototype.equals = function(other) {\n  return this.low == other.low && this.high == other.high;\n};\n\n/**\n * @type {flatbuffers.Long}\n * @const\n */\nflatbuffers.Long.ZERO = new flatbuffers.Long(0, 0);\n\n/// @endcond\n////////////////////////////////////////////////////////////////////////////////\n/**\n * Create a FlatBufferBuilder.\n *\n * @constructor\n * @param {number=} opt_initial_size\n */\nflatbuffers.Builder = function(opt_initial_size) {\n  if (!opt_initial_size) {\n    var initial_size = 1024;\n  } else {\n    var initial_size = opt_initial_size;\n  }\n\n  /**\n   * @type {flatbuffers.ByteBuffer}\n   * @private\n   */\n  this.bb = flatbuffers.ByteBuffer.allocate(initial_size);\n\n  /**\n   * Remaining space in the ByteBuffer.\n   *\n   * @type {number}\n   * @private\n   */\n  this.space = initial_size;\n\n  /**\n   * Minimum alignment encountered so far.\n   *\n   * @type {number}\n   * @private\n   */\n  this.minalign = 1;\n\n  /**\n   * The vtable for the current table.\n   *\n   * @type {Array.<number>}\n   * @private\n   */\n  this.vtable = null;\n\n  /**\n   * The amount of fields we're actually using.\n   *\n   * @type {number}\n   * @private\n   */\n  this.vtable_in_use = 0;\n\n  /**\n   * Whether we are currently serializing a table.\n   *\n   * @type {boolean}\n   * @private\n   */\n  this.isNested = false;\n\n  /**\n   * Starting offset of the current struct/table.\n   *\n   * @type {number}\n   * @private\n   */\n  this.object_start = 0;\n\n  /**\n   * List of offsets of all vtables.\n   *\n   * @type {Array.<number>}\n   * @private\n   */\n  this.vtables = [];\n\n  /**\n   * For the current vector being built.\n   *\n   * @type {number}\n   * @private\n   */\n  this.vector_num_elems = 0;\n\n  /**\n   * False omits default values from the serialized data\n   *\n   * @type {boolean}\n   * @private\n   */\n  this.force_defaults = false;\n};\n\nflatbuffers.Builder.prototype.clear = function() {\n  this.bb.clear();\n  this.space = this.bb.capacity();\n  this.minalign = 1;\n  this.vtable = null;\n  this.vtable_in_use = 0;\n  this.isNested = false;\n  this.object_start = 0;\n  this.vtables = [];\n  this.vector_num_elems = 0;\n  this.force_defaults = false;\n};\n\n/**\n * In order to save space, fields that are set to their default value\n * don't get serialized into the buffer. Forcing defaults provides a\n * way to manually disable this optimization.\n *\n * @param {boolean} forceDefaults true always serializes default values\n */\nflatbuffers.Builder.prototype.forceDefaults = function(forceDefaults) {\n  this.force_defaults = forceDefaults;\n};\n\n/**\n * Get the ByteBuffer representing the FlatBuffer. Only call this after you've\n * called finish(). The actual data starts at the ByteBuffer's current position,\n * not necessarily at 0.\n *\n * @returns {flatbuffers.ByteBuffer}\n */\nflatbuffers.Builder.prototype.dataBuffer = function() {\n  return this.bb;\n};\n\n/**\n * Get the bytes representing the FlatBuffer. Only call this after you've\n * called finish().\n *\n * @returns {Uint8Array}\n */\nflatbuffers.Builder.prototype.asUint8Array = function() {\n  return this.bb.bytes().subarray(this.bb.position(), this.bb.position() + this.offset());\n};\n\n/// @cond FLATBUFFERS_INTERNAL\n/**\n * Prepare to write an element of `size` after `additional_bytes` have been\n * written, e.g. if you write a string, you need to align such the int length\n * field is aligned to 4 bytes, and the string data follows it directly. If all\n * you need to do is alignment, `additional_bytes` will be 0.\n *\n * @param {number} size This is the of the new element to write\n * @param {number} additional_bytes The padding size\n */\nflatbuffers.Builder.prototype.prep = function(size, additional_bytes) {\n  // Track the biggest thing we've ever aligned to.\n  if (size > this.minalign) {\n    this.minalign = size;\n  }\n\n  // Find the amount of alignment needed such that `size` is properly\n  // aligned after `additional_bytes`\n  var align_size = ((~(this.bb.capacity() - this.space + additional_bytes)) + 1) & (size - 1);\n\n  // Reallocate the buffer if needed.\n  while (this.space < align_size + size + additional_bytes) {\n    var old_buf_size = this.bb.capacity();\n    this.bb = flatbuffers.Builder.growByteBuffer(this.bb);\n    this.space += this.bb.capacity() - old_buf_size;\n  }\n\n  this.pad(align_size);\n};\n\n/**\n * @param {number} byte_size\n */\nflatbuffers.Builder.prototype.pad = function(byte_size) {\n  for (var i = 0; i < byte_size; i++) {\n    this.bb.writeInt8(--this.space, 0);\n  }\n};\n\n/**\n * @param {number} value\n */\nflatbuffers.Builder.prototype.writeInt8 = function(value) {\n  this.bb.writeInt8(this.space -= 1, value);\n};\n\n/**\n * @param {number} value\n */\nflatbuffers.Builder.prototype.writeInt16 = function(value) {\n  this.bb.writeInt16(this.space -= 2, value);\n};\n\n/**\n * @param {number} value\n */\nflatbuffers.Builder.prototype.writeInt32 = function(value) {\n  this.bb.writeInt32(this.space -= 4, value);\n};\n\n/**\n * @param {flatbuffers.Long} value\n */\nflatbuffers.Builder.prototype.writeInt64 = function(value) {\n  this.bb.writeInt64(this.space -= 8, value);\n};\n\n/**\n * @param {number} value\n */\nflatbuffers.Builder.prototype.writeFloat32 = function(value) {\n  this.bb.writeFloat32(this.space -= 4, value);\n};\n\n/**\n * @param {number} value\n */\nflatbuffers.Builder.prototype.writeFloat64 = function(value) {\n  this.bb.writeFloat64(this.space -= 8, value);\n};\n/// @endcond\n\n/**\n * Add an `int8` to the buffer, properly aligned, and grows the buffer (if necessary).\n * @param {number} value The `int8` to add the the buffer.\n */\nflatbuffers.Builder.prototype.addInt8 = function(value) {\n  this.prep(1, 0);\n  this.writeInt8(value);\n};\n\n/**\n * Add an `int16` to the buffer, properly aligned, and grows the buffer (if necessary).\n * @param {number} value The `int16` to add the the buffer.\n */\nflatbuffers.Builder.prototype.addInt16 = function(value) {\n  this.prep(2, 0);\n  this.writeInt16(value);\n};\n\n/**\n * Add an `int32` to the buffer, properly aligned, and grows the buffer (if necessary).\n * @param {number} value The `int32` to add the the buffer.\n */\nflatbuffers.Builder.prototype.addInt32 = function(value) {\n  this.prep(4, 0);\n  this.writeInt32(value);\n};\n\n/**\n * Add an `int64` to the buffer, properly aligned, and grows the buffer (if necessary).\n * @param {flatbuffers.Long} value The `int64` to add the the buffer.\n */\nflatbuffers.Builder.prototype.addInt64 = function(value) {\n  this.prep(8, 0);\n  this.writeInt64(value);\n};\n\n/**\n * Add a `float32` to the buffer, properly aligned, and grows the buffer (if necessary).\n * @param {number} value The `float32` to add the the buffer.\n */\nflatbuffers.Builder.prototype.addFloat32 = function(value) {\n  this.prep(4, 0);\n  this.writeFloat32(value);\n};\n\n/**\n * Add a `float64` to the buffer, properly aligned, and grows the buffer (if necessary).\n * @param {number} value The `float64` to add the the buffer.\n */\nflatbuffers.Builder.prototype.addFloat64 = function(value) {\n  this.prep(8, 0);\n  this.writeFloat64(value);\n};\n\n/// @cond FLATBUFFERS_INTERNAL\n/**\n * @param {number} voffset\n * @param {number} value\n * @param {number} defaultValue\n */\nflatbuffers.Builder.prototype.addFieldInt8 = function(voffset, value, defaultValue) {\n  if (this.force_defaults || value != defaultValue) {\n    this.addInt8(value);\n    this.slot(voffset);\n  }\n};\n\n/**\n * @param {number} voffset\n * @param {number} value\n * @param {number} defaultValue\n */\nflatbuffers.Builder.prototype.addFieldInt16 = function(voffset, value, defaultValue) {\n  if (this.force_defaults || value != defaultValue) {\n    this.addInt16(value);\n    this.slot(voffset);\n  }\n};\n\n/**\n * @param {number} voffset\n * @param {number} value\n * @param {number} defaultValue\n */\nflatbuffers.Builder.prototype.addFieldInt32 = function(voffset, value, defaultValue) {\n  if (this.force_defaults || value != defaultValue) {\n    this.addInt32(value);\n    this.slot(voffset);\n  }\n};\n\n/**\n * @param {number} voffset\n * @param {flatbuffers.Long} value\n * @param {flatbuffers.Long} defaultValue\n */\nflatbuffers.Builder.prototype.addFieldInt64 = function(voffset, value, defaultValue) {\n  if (this.force_defaults || !value.equals(defaultValue)) {\n    this.addInt64(value);\n    this.slot(voffset);\n  }\n};\n\n/**\n * @param {number} voffset\n * @param {number} value\n * @param {number} defaultValue\n */\nflatbuffers.Builder.prototype.addFieldFloat32 = function(voffset, value, defaultValue) {\n  if (this.force_defaults || value != defaultValue) {\n    this.addFloat32(value);\n    this.slot(voffset);\n  }\n};\n\n/**\n * @param {number} voffset\n * @param {number} value\n * @param {number} defaultValue\n */\nflatbuffers.Builder.prototype.addFieldFloat64 = function(voffset, value, defaultValue) {\n  if (this.force_defaults || value != defaultValue) {\n    this.addFloat64(value);\n    this.slot(voffset);\n  }\n};\n\n/**\n * @param {number} voffset\n * @param {flatbuffers.Offset} value\n * @param {flatbuffers.Offset} defaultValue\n */\nflatbuffers.Builder.prototype.addFieldOffset = function(voffset, value, defaultValue) {\n  if (this.force_defaults || value != defaultValue) {\n    this.addOffset(value);\n    this.slot(voffset);\n  }\n};\n\n/**\n * Structs are stored inline, so nothing additional is being added. `d` is always 0.\n *\n * @param {number} voffset\n * @param {flatbuffers.Offset} value\n * @param {flatbuffers.Offset} defaultValue\n */\nflatbuffers.Builder.prototype.addFieldStruct = function(voffset, value, defaultValue) {\n  if (value != defaultValue) {\n    this.nested(value);\n    this.slot(voffset);\n  }\n};\n\n/**\n * Structures are always stored inline, they need to be created right\n * where they're used.  You'll get this assertion failure if you\n * created it elsewhere.\n *\n * @param {flatbuffers.Offset} obj The offset of the created object\n */\nflatbuffers.Builder.prototype.nested = function(obj) {\n  if (obj != this.offset()) {\n    throw new Error('FlatBuffers: struct must be serialized inline.');\n  }\n};\n\n/**\n * Should not be creating any other object, string or vector\n * while an object is being constructed\n */\nflatbuffers.Builder.prototype.notNested = function() {\n  if (this.isNested) {\n    throw new Error('FlatBuffers: object serialization must not be nested.');\n  }\n};\n\n/**\n * Set the current vtable at `voffset` to the current location in the buffer.\n *\n * @param {number} voffset\n */\nflatbuffers.Builder.prototype.slot = function(voffset) {\n  this.vtable[voffset] = this.offset();\n};\n\n/**\n * @returns {flatbuffers.Offset} Offset relative to the end of the buffer.\n */\nflatbuffers.Builder.prototype.offset = function() {\n  return this.bb.capacity() - this.space;\n};\n\n/**\n * Doubles the size of the backing ByteBuffer and copies the old data towards\n * the end of the new buffer (since we build the buffer backwards).\n *\n * @param {flatbuffers.ByteBuffer} bb The current buffer with the existing data\n * @returns {flatbuffers.ByteBuffer} A new byte buffer with the old data copied\n * to it. The data is located at the end of the buffer.\n *\n * uint8Array.set() formally takes {Array<number>|ArrayBufferView}, so to pass\n * it a uint8Array we need to suppress the type check:\n * @suppress {checkTypes}\n */\nflatbuffers.Builder.growByteBuffer = function(bb) {\n  var old_buf_size = bb.capacity();\n\n  // Ensure we don't grow beyond what fits in an int.\n  if (old_buf_size & 0xC0000000) {\n    throw new Error('FlatBuffers: cannot grow buffer beyond 2 gigabytes.');\n  }\n\n  var new_buf_size = old_buf_size << 1;\n  var nbb = flatbuffers.ByteBuffer.allocate(new_buf_size);\n  nbb.setPosition(new_buf_size - old_buf_size);\n  nbb.bytes().set(bb.bytes(), new_buf_size - old_buf_size);\n  return nbb;\n};\n/// @endcond\n\n/**\n * Adds on offset, relative to where it will be written.\n *\n * @param {flatbuffers.Offset} offset The offset to add.\n */\nflatbuffers.Builder.prototype.addOffset = function(offset) {\n  this.prep(flatbuffers.SIZEOF_INT, 0); // Ensure alignment is already done.\n  this.writeInt32(this.offset() - offset + flatbuffers.SIZEOF_INT);\n};\n\n/// @cond FLATBUFFERS_INTERNAL\n/**\n * Start encoding a new object in the buffer.  Users will not usually need to\n * call this directly. The FlatBuffers compiler will generate helper methods\n * that call this method internally.\n *\n * @param {number} numfields\n */\nflatbuffers.Builder.prototype.startObject = function(numfields) {\n  this.notNested();\n  if (this.vtable == null) {\n    this.vtable = [];\n  }\n  this.vtable_in_use = numfields;\n  for (var i = 0; i < numfields; i++) {\n    this.vtable[i] = 0; // This will push additional elements as needed\n  }\n  this.isNested = true;\n  this.object_start = this.offset();\n};\n\n/**\n * Finish off writing the object that is under construction.\n *\n * @returns {flatbuffers.Offset} The offset to the object inside `dataBuffer`\n */\nflatbuffers.Builder.prototype.endObject = function() {\n  if (this.vtable == null || !this.isNested) {\n    throw new Error('FlatBuffers: endObject called without startObject');\n  }\n\n  this.addInt32(0);\n  var vtableloc = this.offset();\n\n  // Trim trailing zeroes.\n  var i = this.vtable_in_use - 1;\n  for (; i >= 0 && this.vtable[i] == 0; i--) {}\n  var trimmed_size = i + 1;\n\n  // Write out the current vtable.\n  for (; i >= 0; i--) {\n    // Offset relative to the start of the table.\n    this.addInt16(this.vtable[i] != 0 ? vtableloc - this.vtable[i] : 0);\n  }\n\n  var standard_fields = 2; // The fields below:\n  this.addInt16(vtableloc - this.object_start);\n  var len = (trimmed_size + standard_fields) * flatbuffers.SIZEOF_SHORT;\n  this.addInt16(len);\n\n  // Search for an existing vtable that matches the current one.\n  var existing_vtable = 0;\n  var vt1 = this.space;\nouter_loop:\n  for (i = 0; i < this.vtables.length; i++) {\n    var vt2 = this.bb.capacity() - this.vtables[i];\n    if (len == this.bb.readInt16(vt2)) {\n      for (var j = flatbuffers.SIZEOF_SHORT; j < len; j += flatbuffers.SIZEOF_SHORT) {\n        if (this.bb.readInt16(vt1 + j) != this.bb.readInt16(vt2 + j)) {\n          continue outer_loop;\n        }\n      }\n      existing_vtable = this.vtables[i];\n      break;\n    }\n  }\n\n  if (existing_vtable) {\n    // Found a match:\n    // Remove the current vtable.\n    this.space = this.bb.capacity() - vtableloc;\n\n    // Point table to existing vtable.\n    this.bb.writeInt32(this.space, existing_vtable - vtableloc);\n  } else {\n    // No match:\n    // Add the location of the current vtable to the list of vtables.\n    this.vtables.push(this.offset());\n\n    // Point table to current vtable.\n    this.bb.writeInt32(this.bb.capacity() - vtableloc, this.offset() - vtableloc);\n  }\n\n  this.isNested = false;\n  return vtableloc;\n};\n/// @endcond\n\n/**\n * Finalize a buffer, poiting to the given `root_table`.\n *\n * @param {flatbuffers.Offset} root_table\n * @param {string=} opt_file_identifier\n */\nflatbuffers.Builder.prototype.finish = function(root_table, opt_file_identifier) {\n  if (opt_file_identifier) {\n    var file_identifier = opt_file_identifier;\n    this.prep(this.minalign, flatbuffers.SIZEOF_INT +\n      flatbuffers.FILE_IDENTIFIER_LENGTH);\n    if (file_identifier.length != flatbuffers.FILE_IDENTIFIER_LENGTH) {\n      throw new Error('FlatBuffers: file identifier must be length ' +\n        flatbuffers.FILE_IDENTIFIER_LENGTH);\n    }\n    for (var i = flatbuffers.FILE_IDENTIFIER_LENGTH - 1; i >= 0; i--) {\n      this.writeInt8(file_identifier.charCodeAt(i));\n    }\n  }\n  this.prep(this.minalign, flatbuffers.SIZEOF_INT);\n  this.addOffset(root_table);\n  this.bb.setPosition(this.space);\n};\n\n/// @cond FLATBUFFERS_INTERNAL\n/**\n * This checks a required field has been set in a given table that has\n * just been constructed.\n *\n * @param {flatbuffers.Offset} table\n * @param {number} field\n */\nflatbuffers.Builder.prototype.requiredField = function(table, field) {\n  var table_start = this.bb.capacity() - table;\n  var vtable_start = table_start - this.bb.readInt32(table_start);\n  var ok = this.bb.readInt16(vtable_start + field) != 0;\n\n  // If this fails, the caller will show what field needs to be set.\n  if (!ok) {\n    throw new Error('FlatBuffers: field ' + field + ' must be set');\n  }\n};\n\n/**\n * Start a new array/vector of objects.  Users usually will not call\n * this directly. The FlatBuffers compiler will create a start/end\n * method for vector types in generated code.\n *\n * @param {number} elem_size The size of each element in the array\n * @param {number} num_elems The number of elements in the array\n * @param {number} alignment The alignment of the array\n */\nflatbuffers.Builder.prototype.startVector = function(elem_size, num_elems, alignment) {\n  this.notNested();\n  this.vector_num_elems = num_elems;\n  this.prep(flatbuffers.SIZEOF_INT, elem_size * num_elems);\n  this.prep(alignment, elem_size * num_elems); // Just in case alignment > int.\n};\n\n/**\n * Finish off the creation of an array and all its elements. The array must be\n * created with `startVector`.\n *\n * @returns {flatbuffers.Offset} The offset at which the newly created array\n * starts.\n */\nflatbuffers.Builder.prototype.endVector = function() {\n  this.writeInt32(this.vector_num_elems);\n  return this.offset();\n};\n/// @endcond\n\n/**\n * Encode the string `s` in the buffer using UTF-8. If a Uint8Array is passed\n * instead of a string, it is assumed to contain valid UTF-8 encoded data.\n *\n * @param {string|Uint8Array} s The string to encode\n * @return {flatbuffers.Offset} The offset in the buffer where the encoded string starts\n */\nflatbuffers.Builder.prototype.createString = function(s) {\n  if (s instanceof Uint8Array) {\n    var utf8 = s;\n  } else {\n    var utf8 = [];\n    var i = 0;\n\n    while (i < s.length) {\n      var codePoint;\n\n      // Decode UTF-16\n      var a = s.charCodeAt(i++);\n      if (a < 0xD800 || a >= 0xDC00) {\n        codePoint = a;\n      } else {\n        var b = s.charCodeAt(i++);\n        codePoint = (a << 10) + b + (0x10000 - (0xD800 << 10) - 0xDC00);\n      }\n\n      // Encode UTF-8\n      if (codePoint < 0x80) {\n        utf8.push(codePoint);\n      } else {\n        if (codePoint < 0x800) {\n          utf8.push(((codePoint >> 6) & 0x1F) | 0xC0);\n        } else {\n          if (codePoint < 0x10000) {\n            utf8.push(((codePoint >> 12) & 0x0F) | 0xE0);\n          } else {\n            utf8.push(\n              ((codePoint >> 18) & 0x07) | 0xF0,\n              ((codePoint >> 12) & 0x3F) | 0x80);\n          }\n          utf8.push(((codePoint >> 6) & 0x3F) | 0x80);\n        }\n        utf8.push((codePoint & 0x3F) | 0x80);\n      }\n    }\n  }\n\n  this.addInt8(0);\n  this.startVector(1, utf8.length, 1);\n  this.bb.setPosition(this.space -= utf8.length);\n  for (var i = 0, offset = this.space, bytes = this.bb.bytes(); i < utf8.length; i++) {\n    bytes[offset++] = utf8[i];\n  }\n  return this.endVector();\n};\n\n/**\n * A helper function to avoid generated code depending on this file directly.\n *\n * @param {number} low\n * @param {number} high\n * @returns {flatbuffers.Long}\n */\nflatbuffers.Builder.prototype.createLong = function(low, high) {\n  return flatbuffers.Long.create(low, high);\n};\n////////////////////////////////////////////////////////////////////////////////\n/// @cond FLATBUFFERS_INTERNAL\n/**\n * Create a new ByteBuffer with a given array of bytes (`Uint8Array`).\n *\n * @constructor\n * @param {Uint8Array} bytes\n */\nflatbuffers.ByteBuffer = function(bytes) {\n  /**\n   * @type {Uint8Array}\n   * @private\n   */\n  this.bytes_ = bytes;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.position_ = 0;\n};\n\n/**\n * Create and allocate a new ByteBuffer with a given size.\n *\n * @param {number} byte_size\n * @returns {flatbuffers.ByteBuffer}\n */\nflatbuffers.ByteBuffer.allocate = function(byte_size) {\n  return new flatbuffers.ByteBuffer(new Uint8Array(byte_size));\n};\n\nflatbuffers.ByteBuffer.prototype.clear = function() {\n  this.position_ = 0;\n};\n\n/**\n * Get the underlying `Uint8Array`.\n *\n * @returns {Uint8Array}\n */\nflatbuffers.ByteBuffer.prototype.bytes = function() {\n  return this.bytes_;\n};\n\n/**\n * Get the buffer's position.\n *\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.position = function() {\n  return this.position_;\n};\n\n/**\n * Set the buffer's position.\n *\n * @param {number} position\n */\nflatbuffers.ByteBuffer.prototype.setPosition = function(position) {\n  this.position_ = position;\n};\n\n/**\n * Get the buffer's capacity.\n *\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.capacity = function() {\n  return this.bytes_.length;\n};\n\n/**\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.readInt8 = function(offset) {\n  return this.readUint8(offset) << 24 >> 24;\n};\n\n/**\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.readUint8 = function(offset) {\n  return this.bytes_[offset];\n};\n\n/**\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.readInt16 = function(offset) {\n  return this.readUint16(offset) << 16 >> 16;\n};\n\n/**\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.readUint16 = function(offset) {\n  return this.bytes_[offset] | this.bytes_[offset + 1] << 8;\n};\n\n/**\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.readInt32 = function(offset) {\n  return this.bytes_[offset] | this.bytes_[offset + 1] << 8 | this.bytes_[offset + 2] << 16 | this.bytes_[offset + 3] << 24;\n};\n\n/**\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.readUint32 = function(offset) {\n  return this.readInt32(offset) >>> 0;\n};\n\n/**\n * @param {number} offset\n * @returns {flatbuffers.Long}\n */\nflatbuffers.ByteBuffer.prototype.readInt64 = function(offset) {\n  return new flatbuffers.Long(this.readInt32(offset), this.readInt32(offset + 4));\n};\n\n/**\n * @param {number} offset\n * @returns {flatbuffers.Long}\n */\nflatbuffers.ByteBuffer.prototype.readUint64 = function(offset) {\n  return new flatbuffers.Long(this.readUint32(offset), this.readUint32(offset + 4));\n};\n\n/**\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.readFloat32 = function(offset) {\n  flatbuffers.int32[0] = this.readInt32(offset);\n  return flatbuffers.float32[0];\n};\n\n/**\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.readFloat64 = function(offset) {\n  flatbuffers.int32[flatbuffers.isLittleEndian ? 0 : 1] = this.readInt32(offset);\n  flatbuffers.int32[flatbuffers.isLittleEndian ? 1 : 0] = this.readInt32(offset + 4);\n  return flatbuffers.float64[0];\n};\n\n/**\n * @param {number} offset\n * @param {number|boolean} value\n */\nflatbuffers.ByteBuffer.prototype.writeInt8 = function(offset, value) {\n  this.bytes_[offset] = /** @type {number} */(value);\n};\n\n/**\n * @param {number} offset\n * @param {number} value\n */\nflatbuffers.ByteBuffer.prototype.writeUint8 = function(offset, value) {\n  this.bytes_[offset] = value;\n};\n\n/**\n * @param {number} offset\n * @param {number} value\n */\nflatbuffers.ByteBuffer.prototype.writeInt16 = function(offset, value) {\n  this.bytes_[offset] = value;\n  this.bytes_[offset + 1] = value >> 8;\n};\n\n/**\n * @param {number} offset\n * @param {number} value\n */\nflatbuffers.ByteBuffer.prototype.writeUint16 = function(offset, value) {\n    this.bytes_[offset] = value;\n    this.bytes_[offset + 1] = value >> 8;\n};\n\n/**\n * @param {number} offset\n * @param {number} value\n */\nflatbuffers.ByteBuffer.prototype.writeInt32 = function(offset, value) {\n  this.bytes_[offset] = value;\n  this.bytes_[offset + 1] = value >> 8;\n  this.bytes_[offset + 2] = value >> 16;\n  this.bytes_[offset + 3] = value >> 24;\n};\n\n/**\n * @param {number} offset\n * @param {number} value\n */\nflatbuffers.ByteBuffer.prototype.writeUint32 = function(offset, value) {\n    this.bytes_[offset] = value;\n    this.bytes_[offset + 1] = value >> 8;\n    this.bytes_[offset + 2] = value >> 16;\n    this.bytes_[offset + 3] = value >> 24;\n};\n\n/**\n * @param {number} offset\n * @param {flatbuffers.Long} value\n */\nflatbuffers.ByteBuffer.prototype.writeInt64 = function(offset, value) {\n  this.writeInt32(offset, value.low);\n  this.writeInt32(offset + 4, value.high);\n};\n\n/**\n * @param {number} offset\n * @param {flatbuffers.Long} value\n */\nflatbuffers.ByteBuffer.prototype.writeUint64 = function(offset, value) {\n    this.writeUint32(offset, value.low);\n    this.writeUint32(offset + 4, value.high);\n};\n\n/**\n * @param {number} offset\n * @param {number} value\n */\nflatbuffers.ByteBuffer.prototype.writeFloat32 = function(offset, value) {\n  flatbuffers.float32[0] = value;\n  this.writeInt32(offset, flatbuffers.int32[0]);\n};\n\n/**\n * @param {number} offset\n * @param {number} value\n */\nflatbuffers.ByteBuffer.prototype.writeFloat64 = function(offset, value) {\n  flatbuffers.float64[0] = value;\n  this.writeInt32(offset, flatbuffers.int32[flatbuffers.isLittleEndian ? 0 : 1]);\n  this.writeInt32(offset + 4, flatbuffers.int32[flatbuffers.isLittleEndian ? 1 : 0]);\n};\n\n/**\n * Return the file identifier.   Behavior is undefined for FlatBuffers whose\n * schema does not include a file_identifier (likely points at padding or the\n * start of a the root vtable).\n * @returns {string}\n */\nflatbuffers.ByteBuffer.prototype.getBufferIdentifier = function() {\n  if (this.bytes_.length < this.position_ + flatbuffers.SIZEOF_INT +\n      flatbuffers.FILE_IDENTIFIER_LENGTH) {\n    throw new Error(\n        'FlatBuffers: ByteBuffer is too short to contain an identifier.');\n  }\n  var result = \"\";\n  for (var i = 0; i < flatbuffers.FILE_IDENTIFIER_LENGTH; i++) {\n    result += String.fromCharCode(\n        this.readInt8(this.position_ + flatbuffers.SIZEOF_INT + i));\n  }\n  return result;\n};\n\n/**\n * Look up a field in the vtable, return an offset into the object, or 0 if the\n * field is not present.\n *\n * @param {number} bb_pos\n * @param {number} vtable_offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.__offset = function(bb_pos, vtable_offset) {\n  var vtable = bb_pos - this.readInt32(bb_pos);\n  return vtable_offset < this.readInt16(vtable) ? this.readInt16(vtable + vtable_offset) : 0;\n};\n\n/**\n * Initialize any Table-derived type to point to the union at the given offset.\n *\n * @param {flatbuffers.Table} t\n * @param {number} offset\n * @returns {flatbuffers.Table}\n */\nflatbuffers.ByteBuffer.prototype.__union = function(t, offset) {\n  t.bb_pos = offset + this.readInt32(offset);\n  t.bb = this;\n  return t;\n};\n\n/**\n * Create a JavaScript string from UTF-8 data stored inside the FlatBuffer.\n * This allocates a new string and converts to wide chars upon each access.\n *\n * To avoid the conversion to UTF-16, pass flatbuffers.Encoding.UTF8_BYTES as\n * the \"optionalEncoding\" argument. This is useful for avoiding conversion to\n * and from UTF-16 when the data will just be packaged back up in another\n * FlatBuffer later on.\n *\n * @param {number} offset\n * @param {flatbuffers.Encoding=} opt_encoding Defaults to UTF16_STRING\n * @returns {string|Uint8Array}\n */\nflatbuffers.ByteBuffer.prototype.__string = function(offset, opt_encoding) {\n  offset += this.readInt32(offset);\n\n  var length = this.readInt32(offset);\n  var result = '';\n  var i = 0;\n\n  offset += flatbuffers.SIZEOF_INT;\n\n  if (opt_encoding === flatbuffers.Encoding.UTF8_BYTES) {\n    return this.bytes_.subarray(offset, offset + length);\n  }\n\n  while (i < length) {\n    var codePoint;\n\n    // Decode UTF-8\n    var a = this.readUint8(offset + i++);\n    if (a < 0xC0) {\n      codePoint = a;\n    } else {\n      var b = this.readUint8(offset + i++);\n      if (a < 0xE0) {\n        codePoint =\n          ((a & 0x1F) << 6) |\n          (b & 0x3F);\n      } else {\n        var c = this.readUint8(offset + i++);\n        if (a < 0xF0) {\n          codePoint =\n            ((a & 0x0F) << 12) |\n            ((b & 0x3F) << 6) |\n            (c & 0x3F);\n        } else {\n          var d = this.readUint8(offset + i++);\n          codePoint =\n            ((a & 0x07) << 18) |\n            ((b & 0x3F) << 12) |\n            ((c & 0x3F) << 6) |\n            (d & 0x3F);\n        }\n      }\n    }\n\n    // Encode UTF-16\n    if (codePoint < 0x10000) {\n      result += String.fromCharCode(codePoint);\n    } else {\n      codePoint -= 0x10000;\n      result += String.fromCharCode(\n        (codePoint >> 10) + 0xD800,\n        (codePoint & ((1 << 10) - 1)) + 0xDC00);\n    }\n  }\n\n  return result;\n};\n\n/**\n * Retrieve the relative offset stored at \"offset\"\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.__indirect = function(offset) {\n  return offset + this.readInt32(offset);\n};\n\n/**\n * Get the start of data of a vector whose offset is stored at \"offset\" in this object.\n *\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.__vector = function(offset) {\n  return offset + this.readInt32(offset) + flatbuffers.SIZEOF_INT; // data starts after the length\n};\n\n/**\n * Get the length of a vector whose offset is stored at \"offset\" in this object.\n *\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.__vector_len = function(offset) {\n  return this.readInt32(offset + this.readInt32(offset));\n};\n\n/**\n * @param {string} ident\n * @returns {boolean}\n */\nflatbuffers.ByteBuffer.prototype.__has_identifier = function(ident) {\n  if (ident.length != flatbuffers.FILE_IDENTIFIER_LENGTH) {\n    throw new Error('FlatBuffers: file identifier must be length ' +\n                    flatbuffers.FILE_IDENTIFIER_LENGTH);\n  }\n  for (var i = 0; i < flatbuffers.FILE_IDENTIFIER_LENGTH; i++) {\n    if (ident.charCodeAt(i) != this.readInt8(this.position_ + flatbuffers.SIZEOF_INT + i)) {\n      return false;\n    }\n  }\n  return true;\n};\n\n/**\n * A helper function to avoid generated code depending on this file directly.\n *\n * @param {number} low\n * @param {number} high\n * @returns {flatbuffers.Long}\n */\nflatbuffers.ByteBuffer.prototype.createLong = function(low, high) {\n  return flatbuffers.Long.create(low, high);\n};\n\n// Exports for Node.js and RequireJS\nexport { flatbuffers };\n\n/// @endcond\n/// @}\n","'use strict';\n\n// This is free and unencumbered software released into the public domain.\n// See LICENSE.md for more information.\n\n//\n// Utilities\n//\n\n/**\n * @param {number} a The number to test.\n * @param {number} min The minimum value in the range, inclusive.\n * @param {number} max The maximum value in the range, inclusive.\n * @return {boolean} True if a >= min and a <= max.\n */\nfunction inRange(a, min, max) {\n  return min <= a && a <= max;\n}\n\n/**\n * @param {*} o\n * @return {Object}\n */\nfunction ToDictionary(o) {\n  if (o === undefined) return {};\n  if (o === Object(o)) return o;\n  throw TypeError('Could not convert argument to dictionary');\n}\n\n/**\n * @param {string} string Input string of UTF-16 code units.\n * @return {!Array.<number>} Code points.\n */\nfunction stringToCodePoints(string) {\n  // https://heycam.github.io/webidl/#dfn-obtain-unicode\n\n  // 1. Let S be the DOMString value.\n  var s = String(string);\n\n  // 2. Let n be the length of S.\n  var n = s.length;\n\n  // 3. Initialize i to 0.\n  var i = 0;\n\n  // 4. Initialize U to be an empty sequence of Unicode characters.\n  var u = [];\n\n  // 5. While i < n:\n  while (i < n) {\n\n    // 1. Let c be the code unit in S at index i.\n    var c = s.charCodeAt(i);\n\n    // 2. Depending on the value of c:\n\n    // c < 0xD800 or c > 0xDFFF\n    if (c < 0xD800 || c > 0xDFFF) {\n      // Append to U the Unicode character with code point c.\n      u.push(c);\n    }\n\n    // 0xDC00 ≤ c ≤ 0xDFFF\n    else if (0xDC00 <= c && c <= 0xDFFF) {\n      // Append to U a U+FFFD REPLACEMENT CHARACTER.\n      u.push(0xFFFD);\n    }\n\n    // 0xD800 ≤ c ≤ 0xDBFF\n    else if (0xD800 <= c && c <= 0xDBFF) {\n      // 1. If i = n−1, then append to U a U+FFFD REPLACEMENT\n      // CHARACTER.\n      if (i === n - 1) {\n        u.push(0xFFFD);\n      }\n      // 2. Otherwise, i < n−1:\n      else {\n        // 1. Let d be the code unit in S at index i+1.\n        var d = string.charCodeAt(i + 1);\n\n        // 2. If 0xDC00 ≤ d ≤ 0xDFFF, then:\n        if (0xDC00 <= d && d <= 0xDFFF) {\n          // 1. Let a be c & 0x3FF.\n          var a = c & 0x3FF;\n\n          // 2. Let b be d & 0x3FF.\n          var b = d & 0x3FF;\n\n          // 3. Append to U the Unicode character with code point\n          // 2^16+2^10*a+b.\n          u.push(0x10000 + (a << 10) + b);\n\n          // 4. Set i to i+1.\n          i += 1;\n        }\n\n        // 3. Otherwise, d < 0xDC00 or d > 0xDFFF. Append to U a\n        // U+FFFD REPLACEMENT CHARACTER.\n        else  {\n          u.push(0xFFFD);\n        }\n      }\n    }\n\n    // 3. Set i to i+1.\n    i += 1;\n  }\n\n  // 6. Return U.\n  return u;\n}\n\n/**\n * @param {!Array.<number>} code_points Array of code points.\n * @return {string} string String of UTF-16 code units.\n */\nfunction codePointsToString(code_points) {\n  var s = '';\n  for (var i = 0; i < code_points.length; ++i) {\n    var cp = code_points[i];\n    if (cp <= 0xFFFF) {\n      s += String.fromCharCode(cp);\n    } else {\n      cp -= 0x10000;\n      s += String.fromCharCode((cp >> 10) + 0xD800,\n                               (cp & 0x3FF) + 0xDC00);\n    }\n  }\n  return s;\n}\n\n\n//\n// Implementation of Encoding specification\n// https://encoding.spec.whatwg.org/\n//\n\n//\n// 3. Terminology\n//\n\n/**\n * End-of-stream is a special token that signifies no more tokens\n * are in the stream.\n * @const\n */ var end_of_stream = -1;\n\n/**\n * A stream represents an ordered sequence of tokens.\n *\n * @constructor\n * @param {!(Array.<number>|Uint8Array)} tokens Array of tokens that provide the\n * stream.\n */\nfunction Stream(tokens) {\n  /** @type {!Array.<number>} */\n  this.tokens = [].slice.call(tokens);\n}\n\nStream.prototype = {\n  /**\n   * @return {boolean} True if end-of-stream has been hit.\n   */\n  endOfStream: function() {\n    return !this.tokens.length;\n  },\n\n  /**\n   * When a token is read from a stream, the first token in the\n   * stream must be returned and subsequently removed, and\n   * end-of-stream must be returned otherwise.\n   *\n   * @return {number} Get the next token from the stream, or\n   * end_of_stream.\n   */\n   read: function() {\n    if (!this.tokens.length)\n      return end_of_stream;\n     return this.tokens.shift();\n   },\n\n  /**\n   * When one or more tokens are prepended to a stream, those tokens\n   * must be inserted, in given order, before the first token in the\n   * stream.\n   *\n   * @param {(number|!Array.<number>)} token The token(s) to prepend to the stream.\n   */\n  prepend: function(token) {\n    if (Array.isArray(token)) {\n      var tokens = /**@type {!Array.<number>}*/(token);\n      while (tokens.length)\n        this.tokens.unshift(tokens.pop());\n    } else {\n      this.tokens.unshift(token);\n    }\n  },\n\n  /**\n   * When one or more tokens are pushed to a stream, those tokens\n   * must be inserted, in given order, after the last token in the\n   * stream.\n   *\n   * @param {(number|!Array.<number>)} token The tokens(s) to prepend to the stream.\n   */\n  push: function(token) {\n    if (Array.isArray(token)) {\n      var tokens = /**@type {!Array.<number>}*/(token);\n      while (tokens.length)\n        this.tokens.push(tokens.shift());\n    } else {\n      this.tokens.push(token);\n    }\n  }\n};\n\n//\n// 4. Encodings\n//\n\n// 4.1 Encoders and decoders\n\n/** @const */\nvar finished = -1;\n\n/**\n * @param {boolean} fatal If true, decoding errors raise an exception.\n * @param {number=} opt_code_point Override the standard fallback code point.\n * @return {number} The code point to insert on a decoding error.\n */\nfunction decoderError(fatal, opt_code_point) {\n  if (fatal)\n    throw TypeError('Decoder error');\n  return opt_code_point || 0xFFFD;\n}\n\n/** @interface */\nfunction Decoder() {}\nDecoder.prototype = {\n  /**\n   * @param {Stream} stream The stream of bytes being decoded.\n   * @param {number} bite The next byte read from the stream.\n   * @return {?(number|!Array.<number>)} The next code point(s)\n   *     decoded, or null if not enough data exists in the input\n   *     stream to decode a complete code point, or |finished|.\n   */\n  handler: function(stream, bite) {}\n};\n\n/** @interface */\nfunction Encoder() {}\nEncoder.prototype = {\n  /**\n   * @param {Stream} stream The stream of code points being encoded.\n   * @param {number} code_point Next code point read from the stream.\n   * @return {(number|!Array.<number>)} Byte(s) to emit, or |finished|.\n   */\n  handler: function(stream, code_point) {}\n};\n\n//\n// 7. API\n//\n\n/** @const */ var DEFAULT_ENCODING = 'utf-8';\n\n// 7.1 Interface TextDecoder\n\n/**\n * @constructor\n * @param {string=} encoding The label of the encoding;\n *     defaults to 'utf-8'.\n * @param {Object=} options\n */\nfunction TextDecoder(encoding, options) {\n  if (!(this instanceof TextDecoder)) {\n    return new TextDecoder(encoding, options);\n  }\n  encoding = encoding !== undefined ? String(encoding).toLowerCase() : DEFAULT_ENCODING;\n  if (encoding !== DEFAULT_ENCODING) {\n    throw new Error('Encoding not supported. Only utf-8 is supported');\n  }\n  options = ToDictionary(options);\n\n  /** @private @type {boolean} */\n  this._streaming = false;\n  /** @private @type {boolean} */\n  this._BOMseen = false;\n  /** @private @type {?Decoder} */\n  this._decoder = null;\n  /** @private @type {boolean} */\n  this._fatal = Boolean(options['fatal']);\n  /** @private @type {boolean} */\n  this._ignoreBOM = Boolean(options['ignoreBOM']);\n\n  Object.defineProperty(this, 'encoding', {value: 'utf-8'});\n  Object.defineProperty(this, 'fatal', {value: this._fatal});\n  Object.defineProperty(this, 'ignoreBOM', {value: this._ignoreBOM});\n}\n\nTextDecoder.prototype = {\n  /**\n   * @param {ArrayBufferView=} input The buffer of bytes to decode.\n   * @param {Object=} options\n   * @return {string} The decoded string.\n   */\n  decode: function decode(input, options) {\n    var bytes;\n    if (typeof input === 'object' && input instanceof ArrayBuffer) {\n      bytes = new Uint8Array(input);\n    } else if (typeof input === 'object' && 'buffer' in input &&\n               input.buffer instanceof ArrayBuffer) {\n      bytes = new Uint8Array(input.buffer,\n                             input.byteOffset,\n                             input.byteLength);\n    } else {\n      bytes = new Uint8Array(0);\n    }\n\n    options = ToDictionary(options);\n\n    if (!this._streaming) {\n      this._decoder = new UTF8Decoder({fatal: this._fatal});\n      this._BOMseen = false;\n    }\n    this._streaming = Boolean(options['stream']);\n\n    var input_stream = new Stream(bytes);\n\n    var code_points = [];\n\n    /** @type {?(number|!Array.<number>)} */\n    var result;\n\n    while (!input_stream.endOfStream()) {\n      result = this._decoder.handler(input_stream, input_stream.read());\n      if (result === finished)\n        break;\n      if (result === null)\n        continue;\n      if (Array.isArray(result))\n        code_points.push.apply(code_points, /**@type {!Array.<number>}*/(result));\n      else\n        code_points.push(result);\n    }\n    if (!this._streaming) {\n      do {\n        result = this._decoder.handler(input_stream, input_stream.read());\n        if (result === finished)\n          break;\n        if (result === null)\n          continue;\n        if (Array.isArray(result))\n          code_points.push.apply(code_points, /**@type {!Array.<number>}*/(result));\n        else\n          code_points.push(result);\n      } while (!input_stream.endOfStream());\n      this._decoder = null;\n    }\n\n    if (code_points.length) {\n      // If encoding is one of utf-8, utf-16be, and utf-16le, and\n      // ignore BOM flag and BOM seen flag are unset, run these\n      // subsubsteps:\n      if (['utf-8'].indexOf(this.encoding) !== -1 &&\n          !this._ignoreBOM && !this._BOMseen) {\n        // If token is U+FEFF, set BOM seen flag.\n        if (code_points[0] === 0xFEFF) {\n          this._BOMseen = true;\n          code_points.shift();\n        } else {\n          // Otherwise, if token is not end-of-stream, set BOM seen\n          // flag and append token to output.\n          this._BOMseen = true;\n        }\n      }\n    }\n\n    return codePointsToString(code_points);\n  }\n};\n\n// 7.2 Interface TextEncoder\n\n/**\n * @constructor\n * @param {string=} encoding The label of the encoding;\n *     defaults to 'utf-8'.\n * @param {Object=} options\n */\nfunction TextEncoder(encoding, options) {\n  if (!(this instanceof TextEncoder))\n    return new TextEncoder(encoding, options);\n  encoding = encoding !== undefined ? String(encoding).toLowerCase() : DEFAULT_ENCODING;\n  if (encoding !== DEFAULT_ENCODING) {\n    throw new Error('Encoding not supported. Only utf-8 is supported');\n  }\n  options = ToDictionary(options);\n\n  /** @private @type {boolean} */\n  this._streaming = false;\n  /** @private @type {?Encoder} */\n  this._encoder = null;\n  /** @private @type {{fatal: boolean}} */\n  this._options = {fatal: Boolean(options['fatal'])};\n\n  Object.defineProperty(this, 'encoding', {value: 'utf-8'});\n}\n\nTextEncoder.prototype = {\n  /**\n   * @param {string=} opt_string The string to encode.\n   * @param {Object=} options\n   * @return {Uint8Array} Encoded bytes, as a Uint8Array.\n   */\n  encode: function encode(opt_string, options) {\n    opt_string = opt_string ? String(opt_string) : '';\n    options = ToDictionary(options);\n\n    // NOTE: This option is nonstandard. None of the encodings\n    // permitted for encoding (i.e. UTF-8, UTF-16) are stateful,\n    // so streaming is not necessary.\n    if (!this._streaming)\n      this._encoder = new UTF8Encoder(this._options);\n    this._streaming = Boolean(options['stream']);\n\n    var bytes = [];\n    var input_stream = new Stream(stringToCodePoints(opt_string));\n    /** @type {?(number|!Array.<number>)} */\n    var result;\n    while (!input_stream.endOfStream()) {\n      result = this._encoder.handler(input_stream, input_stream.read());\n      if (result === finished)\n        break;\n      if (Array.isArray(result))\n        bytes.push.apply(bytes, /**@type {!Array.<number>}*/(result));\n      else\n        bytes.push(result);\n    }\n    if (!this._streaming) {\n      while (true) {\n        result = this._encoder.handler(input_stream, input_stream.read());\n        if (result === finished)\n          break;\n        if (Array.isArray(result))\n          bytes.push.apply(bytes, /**@type {!Array.<number>}*/(result));\n        else\n          bytes.push(result);\n      }\n      this._encoder = null;\n    }\n    return new Uint8Array(bytes);\n  }\n};\n\n//\n// 8. The encoding\n//\n\n// 8.1 utf-8\n\n/**\n * @constructor\n * @implements {Decoder}\n * @param {{fatal: boolean}} options\n */\nfunction UTF8Decoder(options) {\n  var fatal = options.fatal;\n\n  // utf-8's decoder's has an associated utf-8 code point, utf-8\n  // bytes seen, and utf-8 bytes needed (all initially 0), a utf-8\n  // lower boundary (initially 0x80), and a utf-8 upper boundary\n  // (initially 0xBF).\n  var /** @type {number} */ utf8_code_point = 0,\n      /** @type {number} */ utf8_bytes_seen = 0,\n      /** @type {number} */ utf8_bytes_needed = 0,\n      /** @type {number} */ utf8_lower_boundary = 0x80,\n      /** @type {number} */ utf8_upper_boundary = 0xBF;\n\n  /**\n   * @param {Stream} stream The stream of bytes being decoded.\n   * @param {number} bite The next byte read from the stream.\n   * @return {?(number|!Array.<number>)} The next code point(s)\n   *     decoded, or null if not enough data exists in the input\n   *     stream to decode a complete code point.\n   */\n  this.handler = function(stream, bite) {\n    // 1. If byte is end-of-stream and utf-8 bytes needed is not 0,\n    // set utf-8 bytes needed to 0 and return error.\n    if (bite === end_of_stream && utf8_bytes_needed !== 0) {\n      utf8_bytes_needed = 0;\n      return decoderError(fatal);\n    }\n\n    // 2. If byte is end-of-stream, return finished.\n    if (bite === end_of_stream)\n      return finished;\n\n    // 3. If utf-8 bytes needed is 0, based on byte:\n    if (utf8_bytes_needed === 0) {\n\n      // 0x00 to 0x7F\n      if (inRange(bite, 0x00, 0x7F)) {\n        // Return a code point whose value is byte.\n        return bite;\n      }\n\n      // 0xC2 to 0xDF\n      if (inRange(bite, 0xC2, 0xDF)) {\n        // Set utf-8 bytes needed to 1 and utf-8 code point to byte\n        // − 0xC0.\n        utf8_bytes_needed = 1;\n        utf8_code_point = bite - 0xC0;\n      }\n\n      // 0xE0 to 0xEF\n      else if (inRange(bite, 0xE0, 0xEF)) {\n        // 1. If byte is 0xE0, set utf-8 lower boundary to 0xA0.\n        if (bite === 0xE0)\n          utf8_lower_boundary = 0xA0;\n        // 2. If byte is 0xED, set utf-8 upper boundary to 0x9F.\n        if (bite === 0xED)\n          utf8_upper_boundary = 0x9F;\n        // 3. Set utf-8 bytes needed to 2 and utf-8 code point to\n        // byte − 0xE0.\n        utf8_bytes_needed = 2;\n        utf8_code_point = bite - 0xE0;\n      }\n\n      // 0xF0 to 0xF4\n      else if (inRange(bite, 0xF0, 0xF4)) {\n        // 1. If byte is 0xF0, set utf-8 lower boundary to 0x90.\n        if (bite === 0xF0)\n          utf8_lower_boundary = 0x90;\n        // 2. If byte is 0xF4, set utf-8 upper boundary to 0x8F.\n        if (bite === 0xF4)\n          utf8_upper_boundary = 0x8F;\n        // 3. Set utf-8 bytes needed to 3 and utf-8 code point to\n        // byte − 0xF0.\n        utf8_bytes_needed = 3;\n        utf8_code_point = bite - 0xF0;\n      }\n\n      // Otherwise\n      else {\n        // Return error.\n        return decoderError(fatal);\n      }\n\n      // Then (byte is in the range 0xC2 to 0xF4) set utf-8 code\n      // point to utf-8 code point << (6 × utf-8 bytes needed) and\n      // return continue.\n      utf8_code_point = utf8_code_point << (6 * utf8_bytes_needed);\n      return null;\n    }\n\n    // 4. If byte is not in the range utf-8 lower boundary to utf-8\n    // upper boundary, run these substeps:\n    if (!inRange(bite, utf8_lower_boundary, utf8_upper_boundary)) {\n\n      // 1. Set utf-8 code point, utf-8 bytes needed, and utf-8\n      // bytes seen to 0, set utf-8 lower boundary to 0x80, and set\n      // utf-8 upper boundary to 0xBF.\n      utf8_code_point = utf8_bytes_needed = utf8_bytes_seen = 0;\n      utf8_lower_boundary = 0x80;\n      utf8_upper_boundary = 0xBF;\n\n      // 2. Prepend byte to stream.\n      stream.prepend(bite);\n\n      // 3. Return error.\n      return decoderError(fatal);\n    }\n\n    // 5. Set utf-8 lower boundary to 0x80 and utf-8 upper boundary\n    // to 0xBF.\n    utf8_lower_boundary = 0x80;\n    utf8_upper_boundary = 0xBF;\n\n    // 6. Increase utf-8 bytes seen by one and set utf-8 code point\n    // to utf-8 code point + (byte − 0x80) << (6 × (utf-8 bytes\n    // needed − utf-8 bytes seen)).\n    utf8_bytes_seen += 1;\n    utf8_code_point += (bite - 0x80) << (6 * (utf8_bytes_needed - utf8_bytes_seen));\n\n    // 7. If utf-8 bytes seen is not equal to utf-8 bytes needed,\n    // continue.\n    if (utf8_bytes_seen !== utf8_bytes_needed)\n      return null;\n\n    // 8. Let code point be utf-8 code point.\n    var code_point = utf8_code_point;\n\n    // 9. Set utf-8 code point, utf-8 bytes needed, and utf-8 bytes\n    // seen to 0.\n    utf8_code_point = utf8_bytes_needed = utf8_bytes_seen = 0;\n\n    // 10. Return a code point whose value is code point.\n    return code_point;\n  };\n}\n\n/**\n * @constructor\n * @implements {Encoder}\n * @param {{fatal: boolean}} options\n */\nfunction UTF8Encoder(options) {\n  var fatal = options.fatal;\n  /**\n   * @param {Stream} stream Input stream.\n   * @param {number} code_point Next code point read from the stream.\n   * @return {(number|!Array.<number>)} Byte(s) to emit.\n   */\n  this.handler = function(stream, code_point) {\n    // 1. If code point is end-of-stream, return finished.\n    if (code_point === end_of_stream)\n      return finished;\n\n    // 2. If code point is in the range U+0000 to U+007F, return a\n    // byte whose value is code point.\n    if (inRange(code_point, 0x0000, 0x007f))\n      return code_point;\n\n    // 3. Set count and offset based on the range code point is in:\n    var count, offset;\n    // U+0080 to U+07FF:    1 and 0xC0\n    if (inRange(code_point, 0x0080, 0x07FF)) {\n      count = 1;\n      offset = 0xC0;\n    }\n    // U+0800 to U+FFFF:    2 and 0xE0\n    else if (inRange(code_point, 0x0800, 0xFFFF)) {\n      count = 2;\n      offset = 0xE0;\n    }\n    // U+10000 to U+10FFFF: 3 and 0xF0\n    else if (inRange(code_point, 0x10000, 0x10FFFF)) {\n      count = 3;\n      offset = 0xF0;\n    }\n\n    // 4.Let bytes be a byte sequence whose first byte is (code\n    // point >> (6 × count)) + offset.\n    var bytes = [(code_point >> (6 * count)) + offset];\n\n    // 5. Run these substeps while count is greater than 0:\n    while (count > 0) {\n\n      // 1. Set temp to code point >> (6 × (count − 1)).\n      var temp = code_point >> (6 * (count - 1));\n\n      // 2. Append to bytes 0x80 | (temp & 0x3F).\n      bytes.push(0x80 | (temp & 0x3F));\n\n      // 3. Decrease count by one.\n      count -= 1;\n    }\n\n    // 6. Return bytes bytes, in order.\n    return bytes;\n  };\n}\n\nexport {TextEncoder, TextDecoder};\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { toUint8Array } from './buffer';\nimport {\n    TextDecoder as TextDecoderPolyfill,\n    TextEncoder as TextEncoderPolyfill,\n} from 'text-encoding-utf-8';\n\n/** @ignore @suppress {missingRequire} */\nconst _Buffer = typeof Buffer === 'function' ? Buffer : null;\n/** @ignore */\nconst useNativeEncoders = typeof TextDecoder === 'function' && typeof TextEncoder === 'function';\n\n/** @ignore */\nexport const decodeUtf8 = ((TextDecoder) => {\n    if (useNativeEncoders || !_Buffer) {\n        const decoder = new TextDecoder('utf-8');\n        return (buffer?: ArrayBuffer | ArrayBufferView) => decoder.decode(buffer);\n    }\n    return (input: ArrayBufferLike | ArrayBufferView) => {\n        const { buffer, byteOffset, length } = toUint8Array(input);\n        return _Buffer.from(buffer, byteOffset, length).toString();\n    };\n})(typeof TextDecoder !== 'undefined' ? TextDecoder : TextDecoderPolyfill);\n\n/** @ignore */\nexport const encodeUtf8 = ((TextEncoder) => {\n    if (useNativeEncoders || !_Buffer) {\n        const encoder = new TextEncoder();\n        return (value?: string) => encoder.encode(value);\n    }\n    return (input = '') => toUint8Array(_Buffer.from(input, 'utf8'));\n})(typeof TextEncoder !== 'undefined' ? TextEncoder : TextEncoderPolyfill);\n","export default function _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n  return _setPrototypeOf(o, p);\n}","import setPrototypeOf from \"./setPrototypeOf.js\";\nexport default function _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  Object.defineProperty(subClass, \"prototype\", {\n    writable: false\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}","export default function _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}","export default function _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}","export default function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n  return self;\n}","import _typeof from \"./typeof.js\";\nimport assertThisInitialized from \"./assertThisInitialized.js\";\nexport default function _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  } else if (call !== void 0) {\n    throw new TypeError(\"Derived constructors may only return object or undefined\");\n  }\n  return assertThisInitialized(self);\n}","import getPrototypeOf from \"./getPrototypeOf.js\";\nimport isNativeReflectConstruct from \"./isNativeReflectConstruct.js\";\nimport possibleConstructorReturn from \"./possibleConstructorReturn.js\";\nexport default function _createSuper(Derived) {\n  var hasNativeReflectConstruct = isNativeReflectConstruct();\n  return function _createSuperInternal() {\n    var Super = getPrototypeOf(Derived),\n      result;\n    if (hasNativeReflectConstruct) {\n      var NewTarget = getPrototypeOf(this).constructor;\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n    return possibleConstructorReturn(this, result);\n  };\n}","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport streamAdapters from './adapters';\n\n/** @ignore */\nexport const ITERATOR_DONE: any = Object.freeze({ done: true, value: void (0) });\n\n/** @ignore */\nexport type FileHandle = import('fs').promises.FileHandle;\n/** @ignore */\nexport type ArrowJSONLike = { schema: any; batches?: any[]; dictionaries?: any[]; };\n/** @ignore */\nexport type ReadableDOMStreamOptions = { type: 'bytes' | undefined, autoAllocateChunkSize?: number, highWaterMark?: number };\n\n/** @ignore */\nexport class ArrowJSON {\n    // @ts-ignore\n    constructor(private _json: ArrowJSONLike) {}\n    public get schema(): any { return this._json['schema']; }\n    public get batches(): any[] { return (this._json['batches'] || []) as any[]; }\n    public get dictionaries(): any[] { return (this._json['dictionaries'] || []) as any[]; }\n}\n\n/** @ignore */\nexport interface Readable<T> {\n\n    readonly closed: Promise<void>;\n    cancel(reason?: any): Promise<void>;\n\n    read(size?: number | null): Promise<T | null>;\n    peek(size?: number | null): Promise<T | null>;\n    throw(value?: any): Promise<IteratorResult<any>>;\n    return(value?: any): Promise<IteratorResult<any>>;\n    next(size?: number | null): Promise<IteratorResult<T>>;\n}\n\n/** @ignore */\nexport interface Writable<T> {\n    readonly closed: Promise<void>;\n    close(): void;\n    write(chunk: T): void;\n    abort(reason?: any): void;\n}\n\n/** @ignore */\nexport interface ReadableWritable<TReadable, TWritable> extends Readable<TReadable>, Writable<TWritable> {\n    [Symbol.asyncIterator](): AsyncIterableIterator<TReadable>;\n    toDOMStream(options?: ReadableDOMStreamOptions): ReadableStream<TReadable>;\n    toNodeStream(options?: import('stream').ReadableOptions): import('stream').Readable;\n}\n\n/** @ignore */\nexport abstract class ReadableInterop<T> {\n\n    public abstract toDOMStream(options?: ReadableDOMStreamOptions): ReadableStream<T>;\n    public abstract toNodeStream(options?: import('stream').ReadableOptions): import('stream').Readable;\n\n    public tee(): [ReadableStream<T>, ReadableStream<T>] {\n        return this._getDOMStream().tee();\n    }\n    public pipe<R extends NodeJS.WritableStream>(writable: R, options?: { end?: boolean; }) {\n        return this._getNodeStream().pipe(writable, options);\n    }\n    public pipeTo(writable: WritableStream<T>, options?: PipeOptions) { return this._getDOMStream().pipeTo(writable, options); }\n    public pipeThrough<R extends ReadableStream<any>>(duplex: { writable: WritableStream<T>, readable: R }, options?: PipeOptions) {\n        return this._getDOMStream().pipeThrough(duplex, options);\n    }\n\n    protected _DOMStream?: ReadableStream<T>;\n    private _getDOMStream() {\n        return this._DOMStream || (this._DOMStream = this.toDOMStream());\n    }\n\n    protected _nodeStream?: import('stream').Readable;\n    private _getNodeStream() {\n        return this._nodeStream || (this._nodeStream = this.toNodeStream());\n    }\n}\n\n/** @ignore */\ntype Resolution<T> = { resolve: (value?: T | PromiseLike<T>) => void; reject: (reason?: any) => void; };\n\n/** @ignore */\nexport class AsyncQueue<TReadable = Uint8Array, TWritable = TReadable> extends ReadableInterop<TReadable>\n    implements AsyncIterableIterator<TReadable>, ReadableWritable<TReadable, TWritable> {\n\n    protected _values: TWritable[] = [];\n    protected _error?: { error: any; };\n    protected _closedPromise: Promise<void>;\n    protected _closedPromiseResolve?: (value?: any) => void;\n    protected resolvers: Resolution<IteratorResult<TReadable>>[] = [];\n\n    constructor() {\n        super();\n        this._closedPromise = new Promise((r) => this._closedPromiseResolve = r);\n    }\n\n    public get closed(): Promise<void> { return this._closedPromise; }\n    public async cancel(reason?: any) { await this.return(reason); }\n    public write(value: TWritable) {\n        if (this._ensureOpen()) {\n            this.resolvers.length <= 0\n                ? (this._values.push(value))\n                : (this.resolvers.shift()!.resolve({ done: false, value } as any));\n        }\n    }\n    public abort(value?: any) {\n        if (this._closedPromiseResolve) {\n            this.resolvers.length <= 0\n                ? (this._error = { error: value })\n                : (this.resolvers.shift()!.reject({ done: true, value }));\n        }\n    }\n    public close() {\n        if (this._closedPromiseResolve) {\n            const { resolvers } = this;\n            while (resolvers.length > 0) {\n                resolvers.shift()!.resolve(ITERATOR_DONE);\n            }\n            this._closedPromiseResolve();\n            this._closedPromiseResolve = undefined;\n        }\n    }\n\n    public [Symbol.asyncIterator]() { return this; }\n    public toDOMStream(options?: ReadableDOMStreamOptions) {\n        return streamAdapters.toDOMStream(\n            (this._closedPromiseResolve || this._error)\n                ? (this as AsyncIterable<TReadable>)\n                : (this._values as any) as Iterable<TReadable>,\n            options);\n    }\n    public toNodeStream(options?: import('stream').ReadableOptions) {\n        return streamAdapters.toNodeStream(\n            (this._closedPromiseResolve || this._error)\n                ? (this as AsyncIterable<TReadable>)\n                : (this._values as any) as Iterable<TReadable>,\n            options);\n    }\n    public async throw(_?: any) { await this.abort(_); return ITERATOR_DONE; }\n    public async return(_?: any) { await this.close(); return ITERATOR_DONE; }\n\n    public async read(size?: number | null): Promise<TReadable | null> { return (await this.next(size, 'read')).value; }\n    public async peek(size?: number | null): Promise<TReadable | null> { return (await this.next(size, 'peek')).value; }\n    public next(..._args: any[]): Promise<IteratorResult<TReadable>> {\n        if (this._values.length > 0) {\n            return Promise.resolve({ done: false, value: this._values.shift()! } as any);\n        } else if (this._error) {\n            return Promise.reject({ done: true, value: this._error.error });\n        } else if (!this._closedPromiseResolve) {\n            return Promise.resolve(ITERATOR_DONE);\n        } else {\n            return new Promise<IteratorResult<TReadable>>((resolve, reject) => {\n                this.resolvers.push({ resolve, reject });\n            });\n        }\n    }\n\n    protected _ensureOpen() {\n        if (this._closedPromiseResolve) {\n            return true;\n        }\n        throw new Error(`${this} is closed`);\n    }\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { ReadableInterop, ArrowJSONLike } from '../io/interfaces';\n\n/** @ignore */\ntype FSReadStream = import('fs').ReadStream;\n/** @ignore */\ntype FileHandle = import('fs').promises.FileHandle;\n\n/** @ignore */\nexport interface Subscription {\n    unsubscribe: () => void;\n}\n\n/** @ignore */\nexport interface Observer<T> {\n    closed?: boolean;\n    next: (value: T) => void;\n    error: (err: any) => void;\n    complete: () => void;\n}\n\n/** @ignore */\nexport interface Observable<T> {\n    subscribe: (observer: Observer<T>) => Subscription;\n}\n\n/** @ignore */\nconst [BigIntCtor, BigIntAvailable] = (() => {\n    const BigIntUnavailableError = () => { throw new Error('BigInt is not available in this environment'); };\n    function BigIntUnavailable() { throw BigIntUnavailableError(); }\n    BigIntUnavailable.asIntN = () => { throw BigIntUnavailableError(); };\n    BigIntUnavailable.asUintN = () => { throw BigIntUnavailableError(); };\n    return typeof BigInt !== 'undefined' ? [BigInt, true] : [<any> BigIntUnavailable, false];\n})() as [BigIntConstructor, boolean];\n\n/** @ignore */\nconst [BigInt64ArrayCtor, BigInt64ArrayAvailable] = (() => {\n    const BigInt64ArrayUnavailableError = () => { throw new Error('BigInt64Array is not available in this environment'); };\n    class BigInt64ArrayUnavailable {\n        static get BYTES_PER_ELEMENT() { return 8; }\n        static of() { throw BigInt64ArrayUnavailableError(); }\n        static from() { throw BigInt64ArrayUnavailableError(); }\n        constructor() { throw BigInt64ArrayUnavailableError(); }\n    }\n    return typeof BigInt64Array !== 'undefined' ? [BigInt64Array, true] : [<any> BigInt64ArrayUnavailable, false];\n})() as [BigInt64ArrayConstructor, boolean];\n\n/** @ignore */\nconst [BigUint64ArrayCtor, BigUint64ArrayAvailable] = (() => {\n    const BigUint64ArrayUnavailableError = () => { throw new Error('BigUint64Array is not available in this environment'); };\n    class BigUint64ArrayUnavailable {\n        static get BYTES_PER_ELEMENT() { return 8; }\n        static of() { throw BigUint64ArrayUnavailableError(); }\n        static from() { throw BigUint64ArrayUnavailableError(); }\n        constructor() { throw BigUint64ArrayUnavailableError(); }\n    }\n    return typeof BigUint64Array !== 'undefined' ? [BigUint64Array, true] : [<any> BigUint64ArrayUnavailable, false];\n})() as [BigUint64ArrayConstructor, boolean];\n\nexport { BigIntCtor as BigInt, BigIntAvailable };\nexport { BigInt64ArrayCtor as BigInt64Array, BigInt64ArrayAvailable };\nexport { BigUint64ArrayCtor as BigUint64Array, BigUint64ArrayAvailable };\n\n/** @ignore */ const isNumber = (x: any) => typeof x === 'number';\n/** @ignore */ const isBoolean = (x: any) => typeof x === 'boolean';\n/** @ignore */ const isFunction = (x: any) => typeof x === 'function';\n/** @ignore */\nexport const isObject = (x: any): x is Object => x != null && Object(x) === x;\n\n/** @ignore */\nexport const isPromise = <T = any>(x: any): x is PromiseLike<T> => {\n    return isObject(x) && isFunction(x.then);\n};\n\n/** @ignore */\nexport const isObservable = <T = any>(x: any): x is Observable<T> => {\n    return isObject(x) && isFunction(x.subscribe);\n};\n\n/** @ignore */\nexport const isIterable = <T = any>(x: any): x is Iterable<T> => {\n    return isObject(x) && isFunction(x[Symbol.iterator]);\n};\n\n/** @ignore */\nexport const isAsyncIterable = <T = any>(x: any): x is AsyncIterable<T> => {\n    return isObject(x) && isFunction(x[Symbol.asyncIterator]);\n};\n\n/** @ignore */\nexport const isArrowJSON = (x: any): x is ArrowJSONLike  => {\n    return isObject(x) && isObject(x['schema']);\n};\n\n/** @ignore */\nexport const isArrayLike = <T = any>(x: any): x is ArrayLike<T> => {\n    return isObject(x) && isNumber(x['length']);\n};\n\n/** @ignore */\nexport const isIteratorResult = <T = any>(x: any): x is IteratorResult<T> => {\n    return isObject(x) && ('done' in x) && ('value' in x);\n};\n\n/** @ignore */\nexport const isUnderlyingSink = <T = any>(x: any): x is UnderlyingSink<T> => {\n    return isObject(x) &&\n        isFunction(x['abort']) &&\n        isFunction(x['close']) &&\n        isFunction(x['start']) &&\n        isFunction(x['write']);\n};\n\n/** @ignore */\nexport const isFileHandle = (x: any): x is FileHandle => {\n    return isObject(x) && isFunction(x['stat']) && isNumber(x['fd']);\n};\n\n/** @ignore */\nexport const isFSReadStream = (x: any): x is FSReadStream => {\n    return isReadableNodeStream(x) && isNumber((<any> x)['bytesRead']);\n};\n\n/** @ignore */\nexport const isFetchResponse = (x: any): x is Response => {\n    return isObject(x) && isReadableDOMStream(x['body']);\n};\n\n/** @ignore */\nexport const isWritableDOMStream = <T = any>(x: any): x is WritableStream<T> => {\n    return isObject(x) &&\n        isFunction(x['abort']) &&\n        isFunction(x['getWriter']) &&\n        !(x instanceof ReadableInterop);\n};\n\n/** @ignore */\nexport const isReadableDOMStream = <T = any>(x: any): x is ReadableStream<T> => {\n    return isObject(x) &&\n        isFunction(x['cancel']) &&\n        isFunction(x['getReader']) &&\n        !(x instanceof ReadableInterop);\n};\n\n/** @ignore */\nexport const isWritableNodeStream = (x: any): x is NodeJS.WritableStream => {\n    return isObject(x) &&\n        isFunction(x['end']) &&\n        isFunction(x['write']) &&\n        isBoolean(x['writable']) &&\n        !(x instanceof ReadableInterop);\n};\n\n/** @ignore */\nexport const isReadableNodeStream = (x: any): x is NodeJS.ReadableStream => {\n    return isObject(x) &&\n        isFunction(x['read']) &&\n        isFunction(x['pipe']) &&\n        isBoolean(x['readable']) &&\n        !(x instanceof ReadableInterop);\n};\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { flatbuffers } from 'flatbuffers';\nimport { encodeUtf8 } from '../util/utf8';\nimport ByteBuffer = flatbuffers.ByteBuffer;\nimport { TypedArray, TypedArrayConstructor } from '../interfaces';\nimport { BigIntArray, BigIntArrayConstructor } from '../interfaces';\nimport { isPromise, isIterable, isAsyncIterable, isIteratorResult, BigInt64Array, BigUint64Array } from './compat';\n\n/** @ignore */\nconst SharedArrayBuf = (typeof SharedArrayBuffer !== 'undefined' ? SharedArrayBuffer : ArrayBuffer);\n\n/** @ignore */\nfunction collapseContiguousByteRanges(chunks: Uint8Array[]) {\n    let result = chunks[0] ? [chunks[0]] : [];\n    let xOffset: number, yOffset: number, xLen: number, yLen: number;\n    for (let x, y, i = 0, j = 0, n = chunks.length; ++i < n;) {\n        x = result[j];\n        y = chunks[i];\n        // continue if x and y don't share the same underlying ArrayBuffer, or if x isn't before y\n        if (!x || !y || x.buffer !== y.buffer || y.byteOffset < x.byteOffset) {\n            y && (result[++j] = y);\n            continue;\n        }\n        ({ byteOffset: xOffset, byteLength: xLen } = x);\n        ({ byteOffset: yOffset, byteLength: yLen } = y);\n        // continue if the byte ranges of x and y aren't contiguous\n        if ((xOffset + xLen) < yOffset || (yOffset + yLen) < xOffset) {\n            y && (result[++j] = y);\n            continue;\n        }\n        result[j] = new Uint8Array(x.buffer, xOffset, yOffset - xOffset + yLen);\n    }\n    return result;\n}\n\n/** @ignore */\nexport function memcpy<TTarget extends ArrayBufferView, TSource extends ArrayBufferView>(target: TTarget, source: TSource, targetByteOffset = 0, sourceByteLength = source.byteLength) {\n    const targetByteLength = target.byteLength;\n    const dst = new Uint8Array(target.buffer, target.byteOffset, targetByteLength);\n    const src = new Uint8Array(source.buffer, source.byteOffset, Math.min(sourceByteLength, targetByteLength));\n    dst.set(src, targetByteOffset);\n    return target;\n}\n\n/** @ignore */\nexport function joinUint8Arrays(chunks: Uint8Array[], size?: number | null): [Uint8Array, Uint8Array[], number] {\n    // collapse chunks that share the same underlying ArrayBuffer and whose byte ranges overlap,\n    // to avoid unnecessarily copying the bytes to do this buffer join. This is a common case during\n    // streaming, where we may be reading partial byte ranges out of the same underlying ArrayBuffer\n    let result = collapseContiguousByteRanges(chunks);\n    let byteLength = result.reduce((x, b) => x + b.byteLength, 0);\n    let source: Uint8Array, sliced: Uint8Array, buffer: Uint8Array | void;\n    let offset = 0, index = -1, length = Math.min(size || Infinity, byteLength);\n    for (let n = result.length; ++index < n;) {\n        source = result[index];\n        sliced = source.subarray(0, Math.min(source.length, length - offset));\n        if (length <= (offset + sliced.length)) {\n            if (sliced.length < source.length) {\n                result[index] = source.subarray(sliced.length);\n            } else if (sliced.length === source.length) { index++; }\n            buffer ? memcpy(buffer, sliced, offset) : (buffer = sliced);\n            break;\n        }\n        memcpy(buffer || (buffer = new Uint8Array(length)), sliced, offset);\n        offset += sliced.length;\n    }\n    return [buffer || new Uint8Array(0), result.slice(index), byteLength - (buffer ? buffer.byteLength : 0)];\n}\n\n/** @ignore */\nexport type ArrayBufferViewInput = ArrayBufferView | ArrayBufferLike | ArrayBufferView | Iterable<number> | ArrayLike<number> | ByteBuffer | string | null | undefined  |\n                    IteratorResult<ArrayBufferView | ArrayBufferLike | ArrayBufferView | Iterable<number> | ArrayLike<number> | ByteBuffer | string | null | undefined> |\n          ReadableStreamReadResult<ArrayBufferView | ArrayBufferLike | ArrayBufferView | Iterable<number> | ArrayLike<number> | ByteBuffer | string | null | undefined> ;\n\n/** @ignore */\nexport function toArrayBufferView<T extends TypedArray>(ArrayBufferViewCtor: TypedArrayConstructor<T>, input: ArrayBufferViewInput): T;\nexport function toArrayBufferView<T extends BigIntArray>(ArrayBufferViewCtor: BigIntArrayConstructor<T>, input: ArrayBufferViewInput): T;\nexport function toArrayBufferView(ArrayBufferViewCtor: any, input: ArrayBufferViewInput) {\n\n    let value: any = isIteratorResult(input) ? input.value : input;\n\n    if (value instanceof ArrayBufferViewCtor) {\n        if (ArrayBufferViewCtor === Uint8Array) {\n            // Node's `Buffer` class passes the `instanceof Uint8Array` check, but we need\n            // a real Uint8Array, since Buffer#slice isn't the same as Uint8Array#slice :/\n            return new ArrayBufferViewCtor(value.buffer, value.byteOffset, value.byteLength);\n        }\n        return value;\n    }\n    if (!value) { return new ArrayBufferViewCtor(0); }\n    if (typeof value === 'string') { value = encodeUtf8(value); }\n    if (value instanceof ArrayBuffer) { return new ArrayBufferViewCtor(value); }\n    if (value instanceof SharedArrayBuf) { return new ArrayBufferViewCtor(value); }\n    if (value instanceof ByteBuffer) { return toArrayBufferView(ArrayBufferViewCtor, value.bytes()); }\n    return !ArrayBuffer.isView(value) ? ArrayBufferViewCtor.from(value) : value.byteLength <= 0 ? new ArrayBufferViewCtor(0)\n        : new ArrayBufferViewCtor(value.buffer, value.byteOffset, value.byteLength / ArrayBufferViewCtor.BYTES_PER_ELEMENT);\n}\n\n/** @ignore */ export const toInt8Array = (input: ArrayBufferViewInput) => toArrayBufferView(Int8Array, input);\n/** @ignore */ export const toInt16Array = (input: ArrayBufferViewInput) => toArrayBufferView(Int16Array, input);\n/** @ignore */ export const toInt32Array = (input: ArrayBufferViewInput) => toArrayBufferView(Int32Array, input);\n/** @ignore */ export const toBigInt64Array = (input: ArrayBufferViewInput) => toArrayBufferView(BigInt64Array, input);\n/** @ignore */ export const toUint8Array = (input: ArrayBufferViewInput) => toArrayBufferView(Uint8Array, input);\n/** @ignore */ export const toUint16Array = (input: ArrayBufferViewInput) => toArrayBufferView(Uint16Array, input);\n/** @ignore */ export const toUint32Array = (input: ArrayBufferViewInput) => toArrayBufferView(Uint32Array, input);\n/** @ignore */ export const toBigUint64Array = (input: ArrayBufferViewInput) => toArrayBufferView(BigUint64Array, input);\n/** @ignore */ export const toFloat32Array = (input: ArrayBufferViewInput) => toArrayBufferView(Float32Array, input);\n/** @ignore */ export const toFloat64Array = (input: ArrayBufferViewInput) => toArrayBufferView(Float64Array, input);\n/** @ignore */ export const toUint8ClampedArray = (input: ArrayBufferViewInput) => toArrayBufferView(Uint8ClampedArray, input);\n\n/** @ignore */\ntype ArrayBufferViewIteratorInput = Iterable<ArrayBufferViewInput> | ArrayBufferViewInput;\n\n/** @ignore */\nconst pump = <T extends Iterator<any> | AsyncIterator<any>>(iterator: T) => { iterator.next(); return iterator; };\n\n/** @ignore */\nexport function* toArrayBufferViewIterator<T extends TypedArray>(ArrayCtor: TypedArrayConstructor<T>, source: ArrayBufferViewIteratorInput) {\n\n    const wrap = function*<T>(x: T) { yield x; };\n    const buffers: Iterable<ArrayBufferViewInput> =\n                   (typeof source === 'string') ? wrap(source)\n                 : (ArrayBuffer.isView(source)) ? wrap(source)\n              : (source instanceof ArrayBuffer) ? wrap(source)\n           : (source instanceof SharedArrayBuf) ? wrap(source)\n    : !isIterable<ArrayBufferViewInput>(source) ? wrap(source) : source;\n\n    yield* pump((function* (it) {\n        let r: IteratorResult<any> = <any> null;\n        do {\n            r = it.next(yield toArrayBufferView(ArrayCtor, r));\n        } while (!r.done);\n    })(buffers[Symbol.iterator]()));\n}\n\n/** @ignore */ export const toInt8ArrayIterator = (input: ArrayBufferViewIteratorInput) => toArrayBufferViewIterator(Int8Array, input);\n/** @ignore */ export const toInt16ArrayIterator = (input: ArrayBufferViewIteratorInput) => toArrayBufferViewIterator(Int16Array, input);\n/** @ignore */ export const toInt32ArrayIterator = (input: ArrayBufferViewIteratorInput) => toArrayBufferViewIterator(Int32Array, input);\n/** @ignore */ export const toUint8ArrayIterator = (input: ArrayBufferViewIteratorInput) => toArrayBufferViewIterator(Uint8Array, input);\n/** @ignore */ export const toUint16ArrayIterator = (input: ArrayBufferViewIteratorInput) => toArrayBufferViewIterator(Uint16Array, input);\n/** @ignore */ export const toUint32ArrayIterator = (input: ArrayBufferViewIteratorInput) => toArrayBufferViewIterator(Uint32Array, input);\n/** @ignore */ export const toFloat32ArrayIterator = (input: ArrayBufferViewIteratorInput) => toArrayBufferViewIterator(Float32Array, input);\n/** @ignore */ export const toFloat64ArrayIterator = (input: ArrayBufferViewIteratorInput) => toArrayBufferViewIterator(Float64Array, input);\n/** @ignore */ export const toUint8ClampedArrayIterator = (input: ArrayBufferViewIteratorInput) => toArrayBufferViewIterator(Uint8ClampedArray, input);\n\n/** @ignore */\ntype ArrayBufferViewAsyncIteratorInput = AsyncIterable<ArrayBufferViewInput> | Iterable<ArrayBufferViewInput> | PromiseLike<ArrayBufferViewInput> | ArrayBufferViewInput;\n\n/** @ignore */\nexport async function* toArrayBufferViewAsyncIterator<T extends TypedArray>(ArrayCtor: TypedArrayConstructor<T>, source: ArrayBufferViewAsyncIteratorInput): AsyncIterableIterator<T> {\n\n    // if a Promise, unwrap the Promise and iterate the resolved value\n    if (isPromise<ArrayBufferViewInput>(source)) {\n        return yield* toArrayBufferViewAsyncIterator(ArrayCtor, await source);\n    }\n\n    const wrap = async function*<T>(x: T) { yield await x; };\n    const emit = async function* <T extends Iterable<any>>(source: T) {\n        yield* pump((function*(it: Iterator<any>) {\n            let r: IteratorResult<any> = <any> null;\n            do {\n                r = it.next(yield r && r.value);\n            } while (!r.done);\n        })(source[Symbol.iterator]()));\n    };\n\n    const buffers: AsyncIterable<ArrayBufferViewInput> =\n                        (typeof source === 'string') ? wrap(source) // if string, wrap in an AsyncIterableIterator\n                      : (ArrayBuffer.isView(source)) ? wrap(source) // if TypedArray, wrap in an AsyncIterableIterator\n                   : (source instanceof ArrayBuffer) ? wrap(source) // if ArrayBuffer, wrap in an AsyncIterableIterator\n                : (source instanceof SharedArrayBuf) ? wrap(source) // if SharedArrayBuffer, wrap in an AsyncIterableIterator\n          : isIterable<ArrayBufferViewInput>(source) ? emit(source) // If Iterable, wrap in an AsyncIterableIterator and compose the `next` values\n    : !isAsyncIterable<ArrayBufferViewInput>(source) ? wrap(source) // If not an AsyncIterable, treat as a sentinel and wrap in an AsyncIterableIterator\n                                                     : source; // otherwise if AsyncIterable, use it\n\n    yield* pump((async function* (it) {\n        let r: IteratorResult<any> = <any> null;\n        do {\n            r = await it.next(yield toArrayBufferView(ArrayCtor, r));\n        } while (!r.done);\n    })(buffers[Symbol.asyncIterator]()));\n}\n\n/** @ignore */ export const toInt8ArrayAsyncIterator = (input: ArrayBufferViewAsyncIteratorInput) => toArrayBufferViewAsyncIterator(Int8Array, input);\n/** @ignore */ export const toInt16ArrayAsyncIterator = (input: ArrayBufferViewAsyncIteratorInput) => toArrayBufferViewAsyncIterator(Int16Array, input);\n/** @ignore */ export const toInt32ArrayAsyncIterator = (input: ArrayBufferViewAsyncIteratorInput) => toArrayBufferViewAsyncIterator(Int32Array, input);\n/** @ignore */ export const toUint8ArrayAsyncIterator = (input: ArrayBufferViewAsyncIteratorInput) => toArrayBufferViewAsyncIterator(Uint8Array, input);\n/** @ignore */ export const toUint16ArrayAsyncIterator = (input: ArrayBufferViewAsyncIteratorInput) => toArrayBufferViewAsyncIterator(Uint16Array, input);\n/** @ignore */ export const toUint32ArrayAsyncIterator = (input: ArrayBufferViewAsyncIteratorInput) => toArrayBufferViewAsyncIterator(Uint32Array, input);\n/** @ignore */ export const toFloat32ArrayAsyncIterator = (input: ArrayBufferViewAsyncIteratorInput) => toArrayBufferViewAsyncIterator(Float32Array, input);\n/** @ignore */ export const toFloat64ArrayAsyncIterator = (input: ArrayBufferViewAsyncIteratorInput) => toArrayBufferViewAsyncIterator(Float64Array, input);\n/** @ignore */ export const toUint8ClampedArrayAsyncIterator = (input: ArrayBufferViewAsyncIteratorInput) => toArrayBufferViewAsyncIterator(Uint8ClampedArray, input);\n\n/** @ignore */\nexport function rebaseValueOffsets(offset: number, length: number, valueOffsets: Int32Array) {\n    // If we have a non-zero offset, create a new offsets array with the values\n    // shifted by the start offset, such that the new start offset is 0\n    if (offset !== 0) {\n        valueOffsets = valueOffsets.slice(0, length + 1);\n        for (let i = -1; ++i <= length;) {\n            valueOffsets[i] += offset;\n        }\n    }\n    return valueOffsets;\n}\n\n/** @ignore */\nexport function compareArrayLike<T extends ArrayLike<any>>(a: T, b: T) {\n    let i = 0, n = a.length;\n    if (n !== b.length) { return false; }\n    if (n > 0) {\n        do { if (a[i] !== b[i]) { return false; } } while (++i < n);\n    }\n    return true;\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport {\n    toUint8Array,\n    joinUint8Arrays,\n    ArrayBufferViewInput,\n    toUint8ArrayIterator,\n    toUint8ArrayAsyncIterator\n} from '../util/buffer';\n\nimport { ReadableDOMStreamOptions } from './interfaces';\n\n/** @ignore */\nexport default {\n    fromIterable<T extends ArrayBufferViewInput>(source: Iterable<T> | T): IterableIterator<Uint8Array> {\n        return pump(fromIterable<T>(source));\n    },\n    fromAsyncIterable<T extends ArrayBufferViewInput>(source: AsyncIterable<T> | PromiseLike<T>): AsyncIterableIterator<Uint8Array> {\n        return pump(fromAsyncIterable<T>(source));\n    },\n    fromDOMStream<T extends ArrayBufferViewInput>(source: ReadableStream<T>): AsyncIterableIterator<Uint8Array> {\n        return pump(fromDOMStream<T>(source));\n    },\n    fromNodeStream(stream: NodeJS.ReadableStream): AsyncIterableIterator<Uint8Array> {\n        return pump(fromNodeStream(stream));\n    },\n    // @ts-ignore\n    toDOMStream<T>(source: Iterable<T> | AsyncIterable<T>, options?: ReadableDOMStreamOptions): ReadableStream<T> {\n        throw new Error(`\"toDOMStream\" not available in this environment`);\n    },\n    // @ts-ignore\n    toNodeStream<T>(source: Iterable<T> | AsyncIterable<T>, options?: import('stream').ReadableOptions): import('stream').Readable {\n        throw new Error(`\"toNodeStream\" not available in this environment`);\n    },\n};\n\n/** @ignore */\nconst pump = <T extends Iterator<any> | AsyncIterator<any>>(iterator: T) => { iterator.next(); return iterator; };\n\n/** @ignore */\nfunction* fromIterable<T extends ArrayBufferViewInput>(source: Iterable<T> | T): IterableIterator<Uint8Array> {\n\n    let done: boolean, threw = false;\n    let buffers: Uint8Array[] = [], buffer: Uint8Array;\n    let cmd: 'peek' | 'read', size: number, bufferLength = 0;\n\n    function byteRange() {\n        if (cmd === 'peek') {\n            return joinUint8Arrays(buffers, size)[0];\n        }\n        [buffer, buffers, bufferLength] = joinUint8Arrays(buffers, size);\n        return buffer;\n    }\n\n    // Yield so the caller can inject the read command before creating the source Iterator\n    ({ cmd, size } = yield <any> null);\n\n    // initialize the iterator\n    let it = toUint8ArrayIterator(source)[Symbol.iterator]();\n\n    try {\n        do {\n            // read the next value\n            ({ done, value: buffer } = isNaN(size - bufferLength) ?\n                it.next(undefined) : it.next(size - bufferLength));\n            // if chunk is not null or empty, push it onto the queue\n            if (!done && buffer.byteLength > 0) {\n                buffers.push(buffer);\n                bufferLength += buffer.byteLength;\n            }\n            // If we have enough bytes in our buffer, yield chunks until we don't\n            if (done || size <= bufferLength) {\n                do {\n                    ({ cmd, size } = yield byteRange());\n                } while (size < bufferLength);\n            }\n        } while (!done);\n    } catch (e) {\n        (threw = true) && (typeof it.throw === 'function') && (it.throw(e));\n    } finally {\n        (threw === false) && (typeof it.return === 'function') && (it.return());\n    }\n}\n\n/** @ignore */\nasync function* fromAsyncIterable<T extends ArrayBufferViewInput>(source: AsyncIterable<T> | PromiseLike<T>): AsyncIterableIterator<Uint8Array> {\n\n    let done: boolean, threw = false;\n    let buffers: Uint8Array[] = [], buffer: Uint8Array;\n    let cmd: 'peek' | 'read', size: number, bufferLength = 0;\n\n    function byteRange() {\n        if (cmd === 'peek') {\n            return joinUint8Arrays(buffers, size)[0];\n        }\n        [buffer, buffers, bufferLength] = joinUint8Arrays(buffers, size);\n        return buffer;\n    }\n\n    // Yield so the caller can inject the read command before creating the source AsyncIterator\n    ({ cmd, size } = yield <any> null);\n\n    // initialize the iterator\n    let it = toUint8ArrayAsyncIterator(source)[Symbol.asyncIterator]();\n\n    try {\n        do {\n            // read the next value\n            ({ done, value: buffer } = isNaN(size - bufferLength)\n                ? await it.next(undefined)\n                : await it.next(size - bufferLength));\n            // if chunk is not null or empty, push it onto the queue\n            if (!done && buffer.byteLength > 0) {\n                buffers.push(buffer);\n                bufferLength += buffer.byteLength;\n            }\n            // If we have enough bytes in our buffer, yield chunks until we don't\n            if (done || size <= bufferLength) {\n                do {\n                    ({ cmd, size } = yield byteRange());\n                } while (size < bufferLength);\n            }\n        } while (!done);\n    } catch (e) {\n        (threw = true) && (typeof it.throw === 'function') && (await it.throw(e));\n    } finally {\n        (threw === false) && (typeof it.return === 'function') && (await it.return());\n    }\n}\n\n// All this manual Uint8Array chunk management can be avoided if/when engines\n// add support for ArrayBuffer.transfer() or ArrayBuffer.prototype.realloc():\n// https://github.com/domenic/proposal-arraybuffer-transfer\n/** @ignore */\nasync function* fromDOMStream<T extends ArrayBufferViewInput>(source: ReadableStream<T>): AsyncIterableIterator<Uint8Array> {\n\n    let done = false, threw = false;\n    let buffers: Uint8Array[] = [], buffer: Uint8Array;\n    let cmd: 'peek' | 'read', size: number, bufferLength = 0;\n\n    function byteRange() {\n        if (cmd === 'peek') {\n            return joinUint8Arrays(buffers, size)[0];\n        }\n        [buffer, buffers, bufferLength] = joinUint8Arrays(buffers, size);\n        return buffer;\n    }\n\n    // Yield so the caller can inject the read command before we establish the ReadableStream lock\n    ({ cmd, size } = yield <any> null);\n\n    // initialize the reader and lock the stream\n    let it = new AdaptiveByteReader(source);\n\n    try {\n        do {\n            // read the next value\n            ({ done, value: buffer } = isNaN(size - bufferLength)\n                ? await it['read'](undefined)\n                : await it['read'](size - bufferLength));\n            // if chunk is not null or empty, push it onto the queue\n            if (!done && buffer.byteLength > 0) {\n                buffers.push(toUint8Array(buffer));\n                bufferLength += buffer.byteLength;\n            }\n            // If we have enough bytes in our buffer, yield chunks until we don't\n            if (done || size <= bufferLength) {\n                do {\n                    ({ cmd, size } = yield byteRange());\n                } while (size < bufferLength);\n            }\n        } while (!done);\n    } catch (e) {\n        (threw = true) && (await it['cancel'](e));\n    } finally {\n        (threw === false) ? (await it['cancel']())\n            : source['locked'] && it.releaseLock();\n    }\n}\n\n/** @ignore */\nclass AdaptiveByteReader<T extends ArrayBufferViewInput> {\n\n    private supportsBYOB: boolean;\n    private byobReader: ReadableStreamBYOBReader | null = null;\n    private defaultReader: ReadableStreamDefaultReader<T> | null = null;\n    private reader: ReadableStreamBYOBReader | ReadableStreamDefaultReader<T> | null;\n\n    constructor(private source: ReadableStream<T>) {\n        try {\n            this.supportsBYOB = !!(this.reader = this.getBYOBReader());\n        } catch (e) {\n            this.supportsBYOB = !!!(this.reader = this.getDefaultReader());\n        }\n    }\n\n    get closed(): Promise<void> {\n        return this.reader ? this.reader['closed'].catch(() => {}) : Promise.resolve();\n    }\n\n    releaseLock(): void {\n        if (this.reader) {\n            this.reader.releaseLock();\n        }\n        this.reader = this.byobReader = this.defaultReader = null;\n    }\n\n    async cancel(reason?: any): Promise<void> {\n        const { reader, source } = this;\n        reader && (await reader['cancel'](reason).catch(() => {}));\n        source && (source['locked'] && this.releaseLock());\n    }\n\n    async read(size?: number): Promise<ReadableStreamReadResult<Uint8Array>> {\n        if (size === 0) {\n            return { done: this.reader == null, value: new Uint8Array(0) };\n        }\n        const result = !this.supportsBYOB || typeof size !== 'number'\n            ? await this.getDefaultReader().read()\n            : await this.readFromBYOBReader(size);\n        !result.done && (result.value = toUint8Array(result as ReadableStreamReadResult<Uint8Array>));\n        return result as ReadableStreamReadResult<Uint8Array>;\n    }\n\n    private getDefaultReader() {\n        if (this.byobReader) { this.releaseLock(); }\n        if (!this.defaultReader) {\n            this.defaultReader = this.source['getReader']();\n            // We have to catch and swallow errors here to avoid uncaught promise rejection exceptions\n            // that seem to be raised when we call `releaseLock()` on this reader. I'm still mystified\n            // about why these errors are raised, but I'm sure there's some important spec reason that\n            // I haven't considered. I hate to employ such an anti-pattern here, but it seems like the\n            // only solution in this case :/\n            this.defaultReader['closed'].catch(() => {});\n        }\n        return (this.reader = this.defaultReader);\n    }\n\n    private getBYOBReader() {\n        if (this.defaultReader) { this.releaseLock(); }\n        if (!this.byobReader) {\n            this.byobReader = this.source['getReader']({ mode: 'byob' });\n            // We have to catch and swallow errors here to avoid uncaught promise rejection exceptions\n            // that seem to be raised when we call `releaseLock()` on this reader. I'm still mystified\n            // about why these errors are raised, but I'm sure there's some important spec reason that\n            // I haven't considered. I hate to employ such an anti-pattern here, but it seems like the\n            // only solution in this case :/\n            this.byobReader['closed'].catch(() => {});\n        }\n        return (this.reader = this.byobReader);\n    }\n\n    // This strategy plucked from the example in the streams spec:\n    // https://streams.spec.whatwg.org/#example-manual-read-bytes\n    private async readFromBYOBReader(size: number) {\n        return await readInto(this.getBYOBReader(), new ArrayBuffer(size), 0, size);\n    }\n}\n\n/** @ignore */\nasync function readInto(reader: ReadableStreamBYOBReader, buffer: ArrayBufferLike, offset: number, size: number): Promise<ReadableStreamReadResult<Uint8Array>> {\n    if (offset >= size) {\n        return { done: false, value: new Uint8Array(buffer, 0, size) };\n    }\n    const { done, value } = await reader.read(new Uint8Array(buffer, offset, size - offset));\n    if (((offset += value.byteLength) < size) && !done) {\n        return await readInto(reader, value.buffer, offset, size);\n    }\n    return { done, value: new Uint8Array(value.buffer, 0, offset) };\n}\n\n/** @ignore */\ntype EventName = 'end' | 'error' | 'readable';\n/** @ignore */\ntype Event = [EventName, (_: any) => void, Promise<[EventName, Error | null]>];\n/** @ignore */\nconst onEvent = <T extends string>(stream: NodeJS.ReadableStream, event: T) => {\n    let handler = (_: any) => resolve([event, _]);\n    let resolve: (value?: [T, any] | PromiseLike<[T, any]>) => void;\n    return [event, handler, new Promise<[T, any]>(\n        (r) => (resolve = r) && stream['once'](event, handler)\n    )] as Event;\n};\n\n/** @ignore */\nasync function* fromNodeStream(stream: NodeJS.ReadableStream): AsyncIterableIterator<Uint8Array> {\n\n    let events: Event[] = [];\n    let event: EventName = 'error';\n    let done = false, err: Error | null = null;\n    let cmd: 'peek' | 'read', size: number, bufferLength = 0;\n    let buffers: Uint8Array[] = [], buffer: Uint8Array | Buffer | string;\n\n    function byteRange() {\n        if (cmd === 'peek') {\n            return joinUint8Arrays(buffers, size)[0];\n        }\n        [buffer, buffers, bufferLength] = joinUint8Arrays(buffers, size);\n        return buffer;\n    }\n\n    // Yield so the caller can inject the read command before we\n    // add the listener for the source stream's 'readable' event.\n    ({ cmd, size } = yield <any> null);\n\n    // ignore stdin if it's a TTY\n    if ((stream as any)['isTTY']) { return yield new Uint8Array(0); }\n\n    try {\n        // initialize the stream event handlers\n        events[0] = onEvent(stream, 'end');\n        events[1] = onEvent(stream, 'error');\n\n        do {\n            events[2] = onEvent(stream, 'readable');\n\n            // wait on the first message event from the stream\n            [event, err] = await Promise.race(events.map((x) => x[2]));\n\n            // if the stream emitted an Error, rethrow it\n            if (event === 'error') { break; }\n            if (!(done = event === 'end')) {\n                // If the size is NaN, request to read everything in the stream's internal buffer\n                if (!isFinite(size - bufferLength)) {\n                    buffer = toUint8Array(stream['read'](undefined));\n                } else {\n                    buffer = toUint8Array(stream['read'](size - bufferLength));\n                    // If the byteLength is 0, then the requested amount is more than the stream has\n                    // in its internal buffer. In this case the stream needs a \"kick\" to tell it to\n                    // continue emitting readable events, so request to read everything the stream\n                    // has in its internal buffer right now.\n                    if (buffer.byteLength < (size - bufferLength)) {\n                        buffer = toUint8Array(stream['read'](undefined));\n                    }\n                }\n                // if chunk is not null or empty, push it onto the queue\n                if (buffer.byteLength > 0) {\n                    buffers.push(buffer);\n                    bufferLength += buffer.byteLength;\n                }\n            }\n            // If we have enough bytes in our buffer, yield chunks until we don't\n            if (done || size <= bufferLength) {\n                do {\n                    ({ cmd, size } = yield byteRange());\n                } while (size < bufferLength);\n            }\n        } while (!done);\n    } finally {\n        await cleanup(events, event === 'error' ? err : null);\n    }\n\n    function cleanup<T extends Error | null | void>(events: Event[], err?: T) {\n        buffer = buffers = <any> null;\n        return new Promise<T>(async (resolve, reject) => {\n            for (const [evt, fn] of events) {\n                stream['off'](evt, fn);\n            }\n            try {\n                // Some stream implementations don't call the destroy callback,\n                // because it's really a node-internal API. Just calling `destroy`\n                // here should be enough to conform to the ReadableStream contract\n                const destroy = (stream as any)['destroy'];\n                destroy && destroy.call(stream, err);\n                err = undefined;\n            } catch (e) { err = e || err; } finally {\n                err != null ? reject(err) : resolve();\n            }\n        });\n    }\n}\n","import toPropertyKey from \"./toPropertyKey.js\";\nexport default function _defineProperty(obj, key, value) {\n  key = toPropertyKey(key);\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}","import defineProperty from \"./defineProperty.js\";\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n  return keys;\n}\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n  return target;\n}","import superPropBase from \"./superPropBase.js\";\nexport default function _get() {\n  if (typeof Reflect !== \"undefined\" && Reflect.get) {\n    _get = Reflect.get.bind();\n  } else {\n    _get = function _get(target, property, receiver) {\n      var base = superPropBase(target, property);\n      if (!base) return;\n      var desc = Object.getOwnPropertyDescriptor(base, property);\n      if (desc.get) {\n        return desc.get.call(arguments.length < 3 ? target : receiver);\n      }\n      return desc.value;\n    };\n  }\n  return _get.apply(this, arguments);\n}","import getPrototypeOf from \"./getPrototypeOf.js\";\nexport default function _superPropBase(object, property) {\n  while (!Object.prototype.hasOwnProperty.call(object, property)) {\n    object = getPrototypeOf(object);\n    if (object === null) break;\n  }\n  return object;\n}","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Data } from './data';\nimport { DataType } from './type';\nimport { Chunked } from './vector/chunked';\n\n/** @ignore */\nexport interface Clonable<R extends AbstractVector> {\n    clone(...args: any[]): R;\n}\n\n/** @ignore */\nexport interface Sliceable<R extends AbstractVector> {\n    slice(begin?: number, end?: number): R;\n}\n\n/** @ignore */\nexport interface Applicative<T extends DataType, R extends Chunked> {\n    concat(...others: Vector<T>[]): R;\n    readonly [Symbol.isConcatSpreadable]: boolean;\n}\n\nexport interface AbstractVector<T extends DataType = any>\n    extends Clonable<Vector<T>>,\n            Sliceable<Vector<T>>,\n            Applicative<T, Chunked<T>> {\n\n    readonly TType: T['TType'];\n    readonly TArray: T['TArray'];\n    readonly TValue: T['TValue'];\n}\n\nexport abstract class AbstractVector<T extends DataType = any> implements Iterable<T['TValue'] | null> {\n\n    public abstract readonly data: Data<T>;\n    public abstract readonly type: T;\n    public abstract readonly typeId: T['TType'];\n    public abstract readonly length: number;\n    public abstract readonly stride: number;\n    public abstract readonly nullCount: number;\n    public abstract readonly byteLength: number;\n    public abstract readonly numChildren: number;\n\n    public abstract readonly ArrayType: T['ArrayType'];\n\n    public abstract isValid(index: number): boolean;\n    public abstract get(index: number): T['TValue'] | null;\n    public abstract set(index: number, value: T['TValue'] | null): void;\n    public abstract indexOf(value: T['TValue'] | null, fromIndex?: number): number;\n    public abstract [Symbol.iterator](): IterableIterator<T['TValue'] | null>;\n\n    public abstract toArray(): T['TArray'];\n    public abstract getChildAt<R extends DataType = any>(index: number): Vector<R> | null;\n}\n\nexport { AbstractVector as Vector };\n","/* tslint:disable:class-name */\n\n// automatically generated by the FlatBuffers compiler, do not modify\n\nimport { flatbuffers } from 'flatbuffers';\n/**\n * @enum {number}\n */\nexport namespace org.apache.arrow.flatbuf {\n    export enum MetadataVersion {\n        /**\n         * 0.1.0\n         */\n        V1 = 0,\n\n        /**\n         * 0.2.0\n         */\n        V2 = 1,\n\n        /**\n         * 0.3.0 -> 0.7.1\n         */\n        V3 = 2,\n\n        /**\n         * >= 0.8.0\n         */\n        V4 = 3\n    }\n}\n\n/**\n * @enum {number}\n */\nexport namespace org.apache.arrow.flatbuf {\n    export enum UnionMode {\n        Sparse = 0,\n        Dense = 1\n    }\n}\n\n/**\n * @enum {number}\n */\nexport namespace org.apache.arrow.flatbuf {\n    export enum Precision {\n        HALF = 0,\n        SINGLE = 1,\n        DOUBLE = 2\n    }\n}\n\n/**\n * @enum {number}\n */\nexport namespace org.apache.arrow.flatbuf {\n    export enum DateUnit {\n        DAY = 0,\n        MILLISECOND = 1\n    }\n}\n\n/**\n * @enum {number}\n */\nexport namespace org.apache.arrow.flatbuf {\n    export enum TimeUnit {\n        SECOND = 0,\n        MILLISECOND = 1,\n        MICROSECOND = 2,\n        NANOSECOND = 3\n    }\n}\n\n/**\n * @enum {number}\n */\nexport namespace org.apache.arrow.flatbuf {\n    export enum IntervalUnit {\n        YEAR_MONTH = 0,\n        DAY_TIME = 1\n    }\n}\n\n/**\n * ----------------------------------------------------------------------\n * Top-level Type value, enabling extensible type-specific metadata. We can\n * add new logical types to Type without breaking backwards compatibility\n *\n * @enum {number}\n */\nexport namespace org.apache.arrow.flatbuf {\n    export enum Type {\n        NONE = 0,\n        Null = 1,\n        Int = 2,\n        FloatingPoint = 3,\n        Binary = 4,\n        Utf8 = 5,\n        Bool = 6,\n        Decimal = 7,\n        Date = 8,\n        Time = 9,\n        Timestamp = 10,\n        Interval = 11,\n        List = 12,\n        Struct_ = 13,\n        Union = 14,\n        FixedSizeBinary = 15,\n        FixedSizeList = 16,\n        Map = 17,\n        Duration = 18,\n        LargeBinary = 19,\n        LargeUtf8 = 20,\n        LargeList = 21\n    }\n}\n\n/**\n * ----------------------------------------------------------------------\n * Endianness of the platform producing the data\n *\n * @enum {number}\n */\nexport namespace org.apache.arrow.flatbuf {\n    export enum Endianness {\n        Little = 0,\n        Big = 1\n    }\n}\n\n/**\n * These are stored in the flatbuffer in the Type union below\n *\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class Null {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns Null\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): Null {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param Null= obj\n         * @returns Null\n         */\n        static getRootAsNull(bb: flatbuffers.ByteBuffer, obj?: Null): Null {\n            return (obj || new Null).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         */\n        static startNull(builder: flatbuffers.Builder) {\n            builder.startObject(0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @returns flatbuffers.Offset\n         */\n        static endNull(builder: flatbuffers.Builder): flatbuffers.Offset {\n            let offset = builder.endObject();\n            return offset;\n        }\n\n        static createNull(builder: flatbuffers.Builder): flatbuffers.Offset {\n            Null.startNull(builder);\n            return Null.endNull(builder);\n        }\n    }\n}\n/**\n * A Struct_ in the flatbuffer metadata is the same as an Arrow Struct\n * (according to the physical memory layout). We used Struct_ here as\n * Struct is a reserved word in Flatbuffers\n *\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class Struct_ {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns Struct_\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): Struct_ {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param Struct_= obj\n         * @returns Struct_\n         */\n        static getRootAsStruct_(bb: flatbuffers.ByteBuffer, obj?: Struct_): Struct_ {\n            return (obj || new Struct_).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         */\n        static startStruct_(builder: flatbuffers.Builder) {\n            builder.startObject(0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @returns flatbuffers.Offset\n         */\n        static endStruct_(builder: flatbuffers.Builder): flatbuffers.Offset {\n            let offset = builder.endObject();\n            return offset;\n        }\n\n        static createStruct_(builder: flatbuffers.Builder): flatbuffers.Offset {\n            Struct_.startStruct_(builder);\n            return Struct_.endStruct_(builder);\n        }\n    }\n}\n/**\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class List {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns List\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): List {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param List= obj\n         * @returns List\n         */\n        static getRootAsList(bb: flatbuffers.ByteBuffer, obj?: List): List {\n            return (obj || new List).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         */\n        static startList(builder: flatbuffers.Builder) {\n            builder.startObject(0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @returns flatbuffers.Offset\n         */\n        static endList(builder: flatbuffers.Builder): flatbuffers.Offset {\n            let offset = builder.endObject();\n            return offset;\n        }\n\n        static createList(builder: flatbuffers.Builder): flatbuffers.Offset {\n            List.startList(builder);\n            return List.endList(builder);\n        }\n    }\n}\n/**\n * Same as List, but with 64-bit offsets, allowing to represent\n * extremely large data values.\n *\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class LargeList {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns LargeList\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): LargeList {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param LargeList= obj\n         * @returns LargeList\n         */\n        static getRootAsLargeList(bb: flatbuffers.ByteBuffer, obj?: LargeList): LargeList {\n            return (obj || new LargeList).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         */\n        static startLargeList(builder: flatbuffers.Builder) {\n            builder.startObject(0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @returns flatbuffers.Offset\n         */\n        static endLargeList(builder: flatbuffers.Builder): flatbuffers.Offset {\n            let offset = builder.endObject();\n            return offset;\n        }\n\n        static createLargeList(builder: flatbuffers.Builder): flatbuffers.Offset {\n            LargeList.startLargeList(builder);\n            return LargeList.endLargeList(builder);\n        }\n    }\n}\n/**\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class FixedSizeList {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns FixedSizeList\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): FixedSizeList {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param FixedSizeList= obj\n         * @returns FixedSizeList\n         */\n        static getRootAsFixedSizeList(bb: flatbuffers.ByteBuffer, obj?: FixedSizeList): FixedSizeList {\n            return (obj || new FixedSizeList).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n\n        /**\n         * Number of list items per value\n         *\n         * @returns number\n         */\n        listSize(): number {\n            let offset = this.bb!.__offset(this.bb_pos, 4);\n            return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         */\n        static startFixedSizeList(builder: flatbuffers.Builder) {\n            builder.startObject(1);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param number listSize\n         */\n        static addListSize(builder: flatbuffers.Builder, listSize: number) {\n            builder.addFieldInt32(0, listSize, 0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @returns flatbuffers.Offset\n         */\n        static endFixedSizeList(builder: flatbuffers.Builder): flatbuffers.Offset {\n            let offset = builder.endObject();\n            return offset;\n        }\n\n        static createFixedSizeList(builder: flatbuffers.Builder, listSize: number): flatbuffers.Offset {\n            FixedSizeList.startFixedSizeList(builder);\n            FixedSizeList.addListSize(builder, listSize);\n            return FixedSizeList.endFixedSizeList(builder);\n        }\n    }\n}\n/**\n * A Map is a logical nested type that is represented as\n *\n * List<entry: Struct<key: K, value: V>>\n *\n * In this layout, the keys and values are each respectively contiguous. We do\n * not constrain the key and value types, so the application is responsible\n * for ensuring that the keys are hashable and unique. Whether the keys are sorted\n * may be set in the metadata for this field\n *\n * In a Field with Map type, the Field has a child Struct field, which then\n * has two children: key type and the second the value type. The names of the\n * child fields may be respectively \"entry\", \"key\", and \"value\", but this is\n * not enforced\n *\n * Map\n *   - child[0] entry: Struct\n *     - child[0] key: K\n *     - child[1] value: V\n *\n * Neither the \"entry\" field nor the \"key\" field may be nullable.\n *\n * The metadata is structured so that Arrow systems without special handling\n * for Map can make Map an alias for List. The \"layout\" attribute for the Map\n * field must have the same contents as a List.\n *\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class Map {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns Map\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): Map {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param Map= obj\n         * @returns Map\n         */\n        static getRootAsMap(bb: flatbuffers.ByteBuffer, obj?: Map): Map {\n            return (obj || new Map).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n\n        /**\n         * Set to true if the keys within each value are sorted\n         *\n         * @returns boolean\n         */\n        keysSorted(): boolean {\n            let offset = this.bb!.__offset(this.bb_pos, 4);\n            return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : false;\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         */\n        static startMap(builder: flatbuffers.Builder) {\n            builder.startObject(1);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param boolean keysSorted\n         */\n        static addKeysSorted(builder: flatbuffers.Builder, keysSorted: boolean) {\n            builder.addFieldInt8(0, +keysSorted, +false);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @returns flatbuffers.Offset\n         */\n        static endMap(builder: flatbuffers.Builder): flatbuffers.Offset {\n            let offset = builder.endObject();\n            return offset;\n        }\n\n        static createMap(builder: flatbuffers.Builder, keysSorted: boolean): flatbuffers.Offset {\n            Map.startMap(builder);\n            Map.addKeysSorted(builder, keysSorted);\n            return Map.endMap(builder);\n        }\n    }\n}\n/**\n * A union is a complex type with children in Field\n * By default ids in the type vector refer to the offsets in the children\n * optionally typeIds provides an indirection between the child offset and the type id\n * for each child typeIds[offset] is the id used in the type vector\n *\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class Union {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns Union\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): Union {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param Union= obj\n         * @returns Union\n         */\n        static getRootAsUnion(bb: flatbuffers.ByteBuffer, obj?: Union): Union {\n            return (obj || new Union).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n\n        /**\n         * @returns org.apache.arrow.flatbuf.UnionMode\n         */\n        mode(): org.apache.arrow.flatbuf.UnionMode {\n            let offset = this.bb!.__offset(this.bb_pos, 4);\n            return offset ? /**  */ (this.bb!.readInt16(this.bb_pos + offset)) : org.apache.arrow.flatbuf.UnionMode.Sparse;\n        }\n\n        /**\n         * @param number index\n         * @returns number\n         */\n        typeIds(index: number): number | null {\n            let offset = this.bb!.__offset(this.bb_pos, 6);\n            return offset ? this.bb!.readInt32(this.bb!.__vector(this.bb_pos + offset) + index * 4) : 0;\n        }\n\n        /**\n         * @returns number\n         */\n        typeIdsLength(): number {\n            let offset = this.bb!.__offset(this.bb_pos, 6);\n            return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n        }\n\n        /**\n         * @returns Int32Array\n         */\n        typeIdsArray(): Int32Array | null {\n            let offset = this.bb!.__offset(this.bb_pos, 6);\n            return offset ? new Int32Array(this.bb!.bytes().buffer, this.bb!.bytes().byteOffset + this.bb!.__vector(this.bb_pos + offset), this.bb!.__vector_len(this.bb_pos + offset)) : null;\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         */\n        static startUnion(builder: flatbuffers.Builder) {\n            builder.startObject(2);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param org.apache.arrow.flatbuf.UnionMode mode\n         */\n        static addMode(builder: flatbuffers.Builder, mode: org.apache.arrow.flatbuf.UnionMode) {\n            builder.addFieldInt16(0, mode, org.apache.arrow.flatbuf.UnionMode.Sparse);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Offset typeIdsOffset\n         */\n        static addTypeIds(builder: flatbuffers.Builder, typeIdsOffset: flatbuffers.Offset) {\n            builder.addFieldOffset(1, typeIdsOffset, 0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param Array.<number> data\n         * @returns flatbuffers.Offset\n         */\n        static createTypeIdsVector(builder: flatbuffers.Builder, data: number[] | Int32Array): flatbuffers.Offset {\n            builder.startVector(4, data.length, 4);\n            for (let i = data.length - 1; i >= 0; i--) {\n                builder.addInt32(data[i]);\n            }\n            return builder.endVector();\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param number numElems\n         */\n        static startTypeIdsVector(builder: flatbuffers.Builder, numElems: number) {\n            builder.startVector(4, numElems, 4);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @returns flatbuffers.Offset\n         */\n        static endUnion(builder: flatbuffers.Builder): flatbuffers.Offset {\n            let offset = builder.endObject();\n            return offset;\n        }\n\n        static createUnion(builder: flatbuffers.Builder, mode: org.apache.arrow.flatbuf.UnionMode, typeIdsOffset: flatbuffers.Offset): flatbuffers.Offset {\n            Union.startUnion(builder);\n            Union.addMode(builder, mode);\n            Union.addTypeIds(builder, typeIdsOffset);\n            return Union.endUnion(builder);\n        }\n    }\n}\n/**\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class Int {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns Int\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): Int {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param Int= obj\n         * @returns Int\n         */\n        static getRootAsInt(bb: flatbuffers.ByteBuffer, obj?: Int): Int {\n            return (obj || new Int).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n\n        /**\n         * @returns number\n         */\n        bitWidth(): number {\n            let offset = this.bb!.__offset(this.bb_pos, 4);\n            return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;\n        }\n\n        /**\n         * @returns boolean\n         */\n        isSigned(): boolean {\n            let offset = this.bb!.__offset(this.bb_pos, 6);\n            return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : false;\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         */\n        static startInt(builder: flatbuffers.Builder) {\n            builder.startObject(2);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param number bitWidth\n         */\n        static addBitWidth(builder: flatbuffers.Builder, bitWidth: number) {\n            builder.addFieldInt32(0, bitWidth, 0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param boolean isSigned\n         */\n        static addIsSigned(builder: flatbuffers.Builder, isSigned: boolean) {\n            builder.addFieldInt8(1, +isSigned, +false);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @returns flatbuffers.Offset\n         */\n        static endInt(builder: flatbuffers.Builder): flatbuffers.Offset {\n            let offset = builder.endObject();\n            return offset;\n        }\n\n        static createInt(builder: flatbuffers.Builder, bitWidth: number, isSigned: boolean): flatbuffers.Offset {\n            Int.startInt(builder);\n            Int.addBitWidth(builder, bitWidth);\n            Int.addIsSigned(builder, isSigned);\n            return Int.endInt(builder);\n        }\n    }\n}\n/**\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class FloatingPoint {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns FloatingPoint\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): FloatingPoint {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param FloatingPoint= obj\n         * @returns FloatingPoint\n         */\n        static getRootAsFloatingPoint(bb: flatbuffers.ByteBuffer, obj?: FloatingPoint): FloatingPoint {\n            return (obj || new FloatingPoint).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n\n        /**\n         * @returns org.apache.arrow.flatbuf.Precision\n         */\n        precision(): org.apache.arrow.flatbuf.Precision {\n            let offset = this.bb!.__offset(this.bb_pos, 4);\n            return offset ? /**  */ (this.bb!.readInt16(this.bb_pos + offset)) : org.apache.arrow.flatbuf.Precision.HALF;\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         */\n        static startFloatingPoint(builder: flatbuffers.Builder) {\n            builder.startObject(1);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param org.apache.arrow.flatbuf.Precision precision\n         */\n        static addPrecision(builder: flatbuffers.Builder, precision: org.apache.arrow.flatbuf.Precision) {\n            builder.addFieldInt16(0, precision, org.apache.arrow.flatbuf.Precision.HALF);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @returns flatbuffers.Offset\n         */\n        static endFloatingPoint(builder: flatbuffers.Builder): flatbuffers.Offset {\n            let offset = builder.endObject();\n            return offset;\n        }\n\n        static createFloatingPoint(builder: flatbuffers.Builder, precision: org.apache.arrow.flatbuf.Precision): flatbuffers.Offset {\n            FloatingPoint.startFloatingPoint(builder);\n            FloatingPoint.addPrecision(builder, precision);\n            return FloatingPoint.endFloatingPoint(builder);\n        }\n    }\n}\n/**\n * Unicode with UTF-8 encoding\n *\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class Utf8 {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns Utf8\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): Utf8 {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param Utf8= obj\n         * @returns Utf8\n         */\n        static getRootAsUtf8(bb: flatbuffers.ByteBuffer, obj?: Utf8): Utf8 {\n            return (obj || new Utf8).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         */\n        static startUtf8(builder: flatbuffers.Builder) {\n            builder.startObject(0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @returns flatbuffers.Offset\n         */\n        static endUtf8(builder: flatbuffers.Builder): flatbuffers.Offset {\n            let offset = builder.endObject();\n            return offset;\n        }\n\n        static createUtf8(builder: flatbuffers.Builder): flatbuffers.Offset {\n            Utf8.startUtf8(builder);\n            return Utf8.endUtf8(builder);\n        }\n    }\n}\n/**\n * Opaque binary data\n *\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class Binary {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns Binary\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): Binary {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param Binary= obj\n         * @returns Binary\n         */\n        static getRootAsBinary(bb: flatbuffers.ByteBuffer, obj?: Binary): Binary {\n            return (obj || new Binary).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         */\n        static startBinary(builder: flatbuffers.Builder) {\n            builder.startObject(0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @returns flatbuffers.Offset\n         */\n        static endBinary(builder: flatbuffers.Builder): flatbuffers.Offset {\n            let offset = builder.endObject();\n            return offset;\n        }\n\n        static createBinary(builder: flatbuffers.Builder): flatbuffers.Offset {\n            Binary.startBinary(builder);\n            return Binary.endBinary(builder);\n        }\n    }\n}\n/**\n * Same as Utf8, but with 64-bit offsets, allowing to represent\n * extremely large data values.\n *\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class LargeUtf8 {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns LargeUtf8\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): LargeUtf8 {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param LargeUtf8= obj\n         * @returns LargeUtf8\n         */\n        static getRootAsLargeUtf8(bb: flatbuffers.ByteBuffer, obj?: LargeUtf8): LargeUtf8 {\n            return (obj || new LargeUtf8).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         */\n        static startLargeUtf8(builder: flatbuffers.Builder) {\n            builder.startObject(0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @returns flatbuffers.Offset\n         */\n        static endLargeUtf8(builder: flatbuffers.Builder): flatbuffers.Offset {\n            let offset = builder.endObject();\n            return offset;\n        }\n\n        static createLargeUtf8(builder: flatbuffers.Builder): flatbuffers.Offset {\n            LargeUtf8.startLargeUtf8(builder);\n            return LargeUtf8.endLargeUtf8(builder);\n        }\n    }\n}\n/**\n * Same as Binary, but with 64-bit offsets, allowing to represent\n * extremely large data values.\n *\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class LargeBinary {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns LargeBinary\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): LargeBinary {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param LargeBinary= obj\n         * @returns LargeBinary\n         */\n        static getRootAsLargeBinary(bb: flatbuffers.ByteBuffer, obj?: LargeBinary): LargeBinary {\n            return (obj || new LargeBinary).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         */\n        static startLargeBinary(builder: flatbuffers.Builder) {\n            builder.startObject(0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @returns flatbuffers.Offset\n         */\n        static endLargeBinary(builder: flatbuffers.Builder): flatbuffers.Offset {\n            let offset = builder.endObject();\n            return offset;\n        }\n\n        static createLargeBinary(builder: flatbuffers.Builder): flatbuffers.Offset {\n            LargeBinary.startLargeBinary(builder);\n            return LargeBinary.endLargeBinary(builder);\n        }\n    }\n}\n/**\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class FixedSizeBinary {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns FixedSizeBinary\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): FixedSizeBinary {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param FixedSizeBinary= obj\n         * @returns FixedSizeBinary\n         */\n        static getRootAsFixedSizeBinary(bb: flatbuffers.ByteBuffer, obj?: FixedSizeBinary): FixedSizeBinary {\n            return (obj || new FixedSizeBinary).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n\n        /**\n         * Number of bytes per value\n         *\n         * @returns number\n         */\n        byteWidth(): number {\n            let offset = this.bb!.__offset(this.bb_pos, 4);\n            return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         */\n        static startFixedSizeBinary(builder: flatbuffers.Builder) {\n            builder.startObject(1);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param number byteWidth\n         */\n        static addByteWidth(builder: flatbuffers.Builder, byteWidth: number) {\n            builder.addFieldInt32(0, byteWidth, 0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @returns flatbuffers.Offset\n         */\n        static endFixedSizeBinary(builder: flatbuffers.Builder): flatbuffers.Offset {\n            let offset = builder.endObject();\n            return offset;\n        }\n\n        static createFixedSizeBinary(builder: flatbuffers.Builder, byteWidth: number): flatbuffers.Offset {\n            FixedSizeBinary.startFixedSizeBinary(builder);\n            FixedSizeBinary.addByteWidth(builder, byteWidth);\n            return FixedSizeBinary.endFixedSizeBinary(builder);\n        }\n    }\n}\n/**\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class Bool {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns Bool\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): Bool {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param Bool= obj\n         * @returns Bool\n         */\n        static getRootAsBool(bb: flatbuffers.ByteBuffer, obj?: Bool): Bool {\n            return (obj || new Bool).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         */\n        static startBool(builder: flatbuffers.Builder) {\n            builder.startObject(0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @returns flatbuffers.Offset\n         */\n        static endBool(builder: flatbuffers.Builder): flatbuffers.Offset {\n            let offset = builder.endObject();\n            return offset;\n        }\n\n        static createBool(builder: flatbuffers.Builder): flatbuffers.Offset {\n            Bool.startBool(builder);\n            return Bool.endBool(builder);\n        }\n    }\n}\n/**\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class Decimal {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns Decimal\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): Decimal {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param Decimal= obj\n         * @returns Decimal\n         */\n        static getRootAsDecimal(bb: flatbuffers.ByteBuffer, obj?: Decimal): Decimal {\n            return (obj || new Decimal).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n\n        /**\n         * Total number of decimal digits\n         *\n         * @returns number\n         */\n        precision(): number {\n            let offset = this.bb!.__offset(this.bb_pos, 4);\n            return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;\n        }\n\n        /**\n         * Number of digits after the decimal point \".\"\n         *\n         * @returns number\n         */\n        scale(): number {\n            let offset = this.bb!.__offset(this.bb_pos, 6);\n            return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         */\n        static startDecimal(builder: flatbuffers.Builder) {\n            builder.startObject(2);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param number precision\n         */\n        static addPrecision(builder: flatbuffers.Builder, precision: number) {\n            builder.addFieldInt32(0, precision, 0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param number scale\n         */\n        static addScale(builder: flatbuffers.Builder, scale: number) {\n            builder.addFieldInt32(1, scale, 0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @returns flatbuffers.Offset\n         */\n        static endDecimal(builder: flatbuffers.Builder): flatbuffers.Offset {\n            let offset = builder.endObject();\n            return offset;\n        }\n\n        static createDecimal(builder: flatbuffers.Builder, precision: number, scale: number): flatbuffers.Offset {\n            Decimal.startDecimal(builder);\n            Decimal.addPrecision(builder, precision);\n            Decimal.addScale(builder, scale);\n            return Decimal.endDecimal(builder);\n        }\n    }\n}\n/**\n * Date is either a 32-bit or 64-bit type representing elapsed time since UNIX\n * epoch (1970-01-01), stored in either of two units:\n *\n * * Milliseconds (64 bits) indicating UNIX time elapsed since the epoch (no\n *   leap seconds), where the values are evenly divisible by 86400000\n * * Days (32 bits) since the UNIX epoch\n *\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class Date {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns Date\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): Date {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param Date= obj\n         * @returns Date\n         */\n        static getRootAsDate(bb: flatbuffers.ByteBuffer, obj?: Date): Date {\n            return (obj || new Date).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n\n        /**\n         * @returns org.apache.arrow.flatbuf.DateUnit\n         */\n        unit(): org.apache.arrow.flatbuf.DateUnit {\n            let offset = this.bb!.__offset(this.bb_pos, 4);\n            return offset ? /**  */ (this.bb!.readInt16(this.bb_pos + offset)) : org.apache.arrow.flatbuf.DateUnit.MILLISECOND;\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         */\n        static startDate(builder: flatbuffers.Builder) {\n            builder.startObject(1);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param org.apache.arrow.flatbuf.DateUnit unit\n         */\n        static addUnit(builder: flatbuffers.Builder, unit: org.apache.arrow.flatbuf.DateUnit) {\n            builder.addFieldInt16(0, unit, org.apache.arrow.flatbuf.DateUnit.MILLISECOND);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @returns flatbuffers.Offset\n         */\n        static endDate(builder: flatbuffers.Builder): flatbuffers.Offset {\n            let offset = builder.endObject();\n            return offset;\n        }\n\n        static createDate(builder: flatbuffers.Builder, unit: org.apache.arrow.flatbuf.DateUnit): flatbuffers.Offset {\n            Date.startDate(builder);\n            Date.addUnit(builder, unit);\n            return Date.endDate(builder);\n        }\n    }\n}\n/**\n * Time type. The physical storage type depends on the unit\n * - SECOND and MILLISECOND: 32 bits\n * - MICROSECOND and NANOSECOND: 64 bits\n *\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class Time {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns Time\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): Time {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param Time= obj\n         * @returns Time\n         */\n        static getRootAsTime(bb: flatbuffers.ByteBuffer, obj?: Time): Time {\n            return (obj || new Time).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n\n        /**\n         * @returns org.apache.arrow.flatbuf.TimeUnit\n         */\n        unit(): org.apache.arrow.flatbuf.TimeUnit {\n            let offset = this.bb!.__offset(this.bb_pos, 4);\n            return offset ? /**  */ (this.bb!.readInt16(this.bb_pos + offset)) : org.apache.arrow.flatbuf.TimeUnit.MILLISECOND;\n        }\n\n        /**\n         * @returns number\n         */\n        bitWidth(): number {\n            let offset = this.bb!.__offset(this.bb_pos, 6);\n            return offset ? this.bb!.readInt32(this.bb_pos + offset) : 32;\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         */\n        static startTime(builder: flatbuffers.Builder) {\n            builder.startObject(2);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param org.apache.arrow.flatbuf.TimeUnit unit\n         */\n        static addUnit(builder: flatbuffers.Builder, unit: org.apache.arrow.flatbuf.TimeUnit) {\n            builder.addFieldInt16(0, unit, org.apache.arrow.flatbuf.TimeUnit.MILLISECOND);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param number bitWidth\n         */\n        static addBitWidth(builder: flatbuffers.Builder, bitWidth: number) {\n            builder.addFieldInt32(1, bitWidth, 32);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @returns flatbuffers.Offset\n         */\n        static endTime(builder: flatbuffers.Builder): flatbuffers.Offset {\n            let offset = builder.endObject();\n            return offset;\n        }\n\n        static createTime(builder: flatbuffers.Builder, unit: org.apache.arrow.flatbuf.TimeUnit, bitWidth: number): flatbuffers.Offset {\n            Time.startTime(builder);\n            Time.addUnit(builder, unit);\n            Time.addBitWidth(builder, bitWidth);\n            return Time.endTime(builder);\n        }\n    }\n}\n/**\n * Time elapsed from the Unix epoch, 00:00:00.000 on 1 January 1970, excluding\n * leap seconds, as a 64-bit integer. Note that UNIX time does not include\n * leap seconds.\n *\n * The Timestamp metadata supports both \"time zone naive\" and \"time zone\n * aware\" timestamps. Read about the timezone attribute for more detail\n *\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class Timestamp {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns Timestamp\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): Timestamp {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param Timestamp= obj\n         * @returns Timestamp\n         */\n        static getRootAsTimestamp(bb: flatbuffers.ByteBuffer, obj?: Timestamp): Timestamp {\n            return (obj || new Timestamp).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n\n        /**\n         * @returns org.apache.arrow.flatbuf.TimeUnit\n         */\n        unit(): org.apache.arrow.flatbuf.TimeUnit {\n            let offset = this.bb!.__offset(this.bb_pos, 4);\n            return offset ? /**  */ (this.bb!.readInt16(this.bb_pos + offset)) : org.apache.arrow.flatbuf.TimeUnit.SECOND;\n        }\n\n        /**\n         * The time zone is a string indicating the name of a time zone, one of:\n         *\n         * * As used in the Olson time zone database (the \"tz database\" or\n         *   \"tzdata\"), such as \"America/New_York\"\n         * * An absolute time zone offset of the form +XX:XX or -XX:XX, such as +07:30\n         *\n         * Whether a timezone string is present indicates different semantics about\n         * the data:\n         *\n         * * If the time zone is null or equal to an empty string, the data is \"time\n         *   zone naive\" and shall be displayed *as is* to the user, not localized\n         *   to the locale of the user. This data can be though of as UTC but\n         *   without having \"UTC\" as the time zone, it is not considered to be\n         *   localized to any time zone\n         *\n         * * If the time zone is set to a valid value, values can be displayed as\n         *   \"localized\" to that time zone, even though the underlying 64-bit\n         *   integers are identical to the same data stored in UTC. Converting\n         *   between time zones is a metadata-only operation and does not change the\n         *   underlying values\n         *\n         * @param flatbuffers.Encoding= optionalEncoding\n         * @returns string|Uint8Array|null\n         */\n        timezone(): string | null;\n        timezone(optionalEncoding: flatbuffers.Encoding): string | Uint8Array | null;\n        timezone(optionalEncoding?: any): string | Uint8Array | null {\n            let offset = this.bb!.__offset(this.bb_pos, 6);\n            return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         */\n        static startTimestamp(builder: flatbuffers.Builder) {\n            builder.startObject(2);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param org.apache.arrow.flatbuf.TimeUnit unit\n         */\n        static addUnit(builder: flatbuffers.Builder, unit: org.apache.arrow.flatbuf.TimeUnit) {\n            builder.addFieldInt16(0, unit, org.apache.arrow.flatbuf.TimeUnit.SECOND);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Offset timezoneOffset\n         */\n        static addTimezone(builder: flatbuffers.Builder, timezoneOffset: flatbuffers.Offset) {\n            builder.addFieldOffset(1, timezoneOffset, 0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @returns flatbuffers.Offset\n         */\n        static endTimestamp(builder: flatbuffers.Builder): flatbuffers.Offset {\n            let offset = builder.endObject();\n            return offset;\n        }\n\n        static createTimestamp(builder: flatbuffers.Builder, unit: org.apache.arrow.flatbuf.TimeUnit, timezoneOffset: flatbuffers.Offset): flatbuffers.Offset {\n            Timestamp.startTimestamp(builder);\n            Timestamp.addUnit(builder, unit);\n            Timestamp.addTimezone(builder, timezoneOffset);\n            return Timestamp.endTimestamp(builder);\n        }\n    }\n}\n/**\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class Interval {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns Interval\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): Interval {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param Interval= obj\n         * @returns Interval\n         */\n        static getRootAsInterval(bb: flatbuffers.ByteBuffer, obj?: Interval): Interval {\n            return (obj || new Interval).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n\n        /**\n         * @returns org.apache.arrow.flatbuf.IntervalUnit\n         */\n        unit(): org.apache.arrow.flatbuf.IntervalUnit {\n            let offset = this.bb!.__offset(this.bb_pos, 4);\n            return offset ? /**  */ (this.bb!.readInt16(this.bb_pos + offset)) : org.apache.arrow.flatbuf.IntervalUnit.YEAR_MONTH;\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         */\n        static startInterval(builder: flatbuffers.Builder) {\n            builder.startObject(1);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param org.apache.arrow.flatbuf.IntervalUnit unit\n         */\n        static addUnit(builder: flatbuffers.Builder, unit: org.apache.arrow.flatbuf.IntervalUnit) {\n            builder.addFieldInt16(0, unit, org.apache.arrow.flatbuf.IntervalUnit.YEAR_MONTH);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @returns flatbuffers.Offset\n         */\n        static endInterval(builder: flatbuffers.Builder): flatbuffers.Offset {\n            let offset = builder.endObject();\n            return offset;\n        }\n\n        static createInterval(builder: flatbuffers.Builder, unit: org.apache.arrow.flatbuf.IntervalUnit): flatbuffers.Offset {\n            Interval.startInterval(builder);\n            Interval.addUnit(builder, unit);\n            return Interval.endInterval(builder);\n        }\n    }\n}\n/**\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class Duration {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns Duration\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): Duration {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param Duration= obj\n         * @returns Duration\n         */\n        static getRootAsDuration(bb: flatbuffers.ByteBuffer, obj?: Duration): Duration {\n            return (obj || new Duration).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n\n        /**\n         * @returns org.apache.arrow.flatbuf.TimeUnit\n         */\n        unit(): org.apache.arrow.flatbuf.TimeUnit {\n            let offset = this.bb!.__offset(this.bb_pos, 4);\n            return offset ? /**  */ (this.bb!.readInt16(this.bb_pos + offset)) : org.apache.arrow.flatbuf.TimeUnit.MILLISECOND;\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         */\n        static startDuration(builder: flatbuffers.Builder) {\n            builder.startObject(1);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param org.apache.arrow.flatbuf.TimeUnit unit\n         */\n        static addUnit(builder: flatbuffers.Builder, unit: org.apache.arrow.flatbuf.TimeUnit) {\n            builder.addFieldInt16(0, unit, org.apache.arrow.flatbuf.TimeUnit.MILLISECOND);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @returns flatbuffers.Offset\n         */\n        static endDuration(builder: flatbuffers.Builder): flatbuffers.Offset {\n            let offset = builder.endObject();\n            return offset;\n        }\n\n        static createDuration(builder: flatbuffers.Builder, unit: org.apache.arrow.flatbuf.TimeUnit): flatbuffers.Offset {\n            Duration.startDuration(builder);\n            Duration.addUnit(builder, unit);\n            return Duration.endDuration(builder);\n        }\n    }\n}\n/**\n * ----------------------------------------------------------------------\n * user defined key value pairs to add custom metadata to arrow\n * key namespacing is the responsibility of the user\n *\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class KeyValue {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns KeyValue\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): KeyValue {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param KeyValue= obj\n         * @returns KeyValue\n         */\n        static getRootAsKeyValue(bb: flatbuffers.ByteBuffer, obj?: KeyValue): KeyValue {\n            return (obj || new KeyValue).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n\n        /**\n         * @param flatbuffers.Encoding= optionalEncoding\n         * @returns string|Uint8Array|null\n         */\n        key(): string | null;\n        key(optionalEncoding: flatbuffers.Encoding): string | Uint8Array | null;\n        key(optionalEncoding?: any): string | Uint8Array | null {\n            let offset = this.bb!.__offset(this.bb_pos, 4);\n            return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n        }\n\n        /**\n         * @param flatbuffers.Encoding= optionalEncoding\n         * @returns string|Uint8Array|null\n         */\n        value(): string | null;\n        value(optionalEncoding: flatbuffers.Encoding): string | Uint8Array | null;\n        value(optionalEncoding?: any): string | Uint8Array | null {\n            let offset = this.bb!.__offset(this.bb_pos, 6);\n            return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         */\n        static startKeyValue(builder: flatbuffers.Builder) {\n            builder.startObject(2);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Offset keyOffset\n         */\n        static addKey(builder: flatbuffers.Builder, keyOffset: flatbuffers.Offset) {\n            builder.addFieldOffset(0, keyOffset, 0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Offset valueOffset\n         */\n        static addValue(builder: flatbuffers.Builder, valueOffset: flatbuffers.Offset) {\n            builder.addFieldOffset(1, valueOffset, 0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @returns flatbuffers.Offset\n         */\n        static endKeyValue(builder: flatbuffers.Builder): flatbuffers.Offset {\n            let offset = builder.endObject();\n            return offset;\n        }\n\n        static createKeyValue(builder: flatbuffers.Builder, keyOffset: flatbuffers.Offset, valueOffset: flatbuffers.Offset): flatbuffers.Offset {\n            KeyValue.startKeyValue(builder);\n            KeyValue.addKey(builder, keyOffset);\n            KeyValue.addValue(builder, valueOffset);\n            return KeyValue.endKeyValue(builder);\n        }\n    }\n}\n/**\n * ----------------------------------------------------------------------\n * Dictionary encoding metadata\n *\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class DictionaryEncoding {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns DictionaryEncoding\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): DictionaryEncoding {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param DictionaryEncoding= obj\n         * @returns DictionaryEncoding\n         */\n        static getRootAsDictionaryEncoding(bb: flatbuffers.ByteBuffer, obj?: DictionaryEncoding): DictionaryEncoding {\n            return (obj || new DictionaryEncoding).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n\n        /**\n         * The known dictionary id in the application where this data is used. In\n         * the file or streaming formats, the dictionary ids are found in the\n         * DictionaryBatch messages\n         *\n         * @returns flatbuffers.Long\n         */\n        id(): flatbuffers.Long {\n            let offset = this.bb!.__offset(this.bb_pos, 4);\n            return offset ? this.bb!.readInt64(this.bb_pos + offset) : this.bb!.createLong(0, 0);\n        }\n\n        /**\n         * The dictionary indices are constrained to be positive integers. If this\n         * field is null, the indices must be signed int32\n         *\n         * @param org.apache.arrow.flatbuf.Int= obj\n         * @returns org.apache.arrow.flatbuf.Int|null\n         */\n        indexType(obj?: org.apache.arrow.flatbuf.Int): org.apache.arrow.flatbuf.Int | null {\n            let offset = this.bb!.__offset(this.bb_pos, 6);\n            return offset ? (obj || new org.apache.arrow.flatbuf.Int).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;\n        }\n\n        /**\n         * By default, dictionaries are not ordered, or the order does not have\n         * semantic meaning. In some statistical, applications, dictionary-encoding\n         * is used to represent ordered categorical data, and we provide a way to\n         * preserve that metadata here\n         *\n         * @returns boolean\n         */\n        isOrdered(): boolean {\n            let offset = this.bb!.__offset(this.bb_pos, 8);\n            return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : false;\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         */\n        static startDictionaryEncoding(builder: flatbuffers.Builder) {\n            builder.startObject(3);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Long id\n         */\n        static addId(builder: flatbuffers.Builder, id: flatbuffers.Long) {\n            builder.addFieldInt64(0, id, builder.createLong(0, 0));\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Offset indexTypeOffset\n         */\n        static addIndexType(builder: flatbuffers.Builder, indexTypeOffset: flatbuffers.Offset) {\n            builder.addFieldOffset(1, indexTypeOffset, 0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param boolean isOrdered\n         */\n        static addIsOrdered(builder: flatbuffers.Builder, isOrdered: boolean) {\n            builder.addFieldInt8(2, +isOrdered, +false);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @returns flatbuffers.Offset\n         */\n        static endDictionaryEncoding(builder: flatbuffers.Builder): flatbuffers.Offset {\n            let offset = builder.endObject();\n            return offset;\n        }\n\n        static createDictionaryEncoding(builder: flatbuffers.Builder, id: flatbuffers.Long, indexTypeOffset: flatbuffers.Offset, isOrdered: boolean): flatbuffers.Offset {\n            DictionaryEncoding.startDictionaryEncoding(builder);\n            DictionaryEncoding.addId(builder, id);\n            DictionaryEncoding.addIndexType(builder, indexTypeOffset);\n            DictionaryEncoding.addIsOrdered(builder, isOrdered);\n            return DictionaryEncoding.endDictionaryEncoding(builder);\n        }\n    }\n}\n/**\n * ----------------------------------------------------------------------\n * A field represents a named column in a record / row batch or child of a\n * nested type.\n *\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class Field {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns Field\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): Field {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param Field= obj\n         * @returns Field\n         */\n        static getRootAsField(bb: flatbuffers.ByteBuffer, obj?: Field): Field {\n            return (obj || new Field).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n\n        /**\n         * Name is not required, in i.e. a List\n         *\n         * @param flatbuffers.Encoding= optionalEncoding\n         * @returns string|Uint8Array|null\n         */\n        name(): string | null;\n        name(optionalEncoding: flatbuffers.Encoding): string | Uint8Array | null;\n        name(optionalEncoding?: any): string | Uint8Array | null {\n            let offset = this.bb!.__offset(this.bb_pos, 4);\n            return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n        }\n\n        /**\n         * Whether or not this field can contain nulls. Should be true in general.\n         *\n         * @returns boolean\n         */\n        nullable(): boolean {\n            let offset = this.bb!.__offset(this.bb_pos, 6);\n            return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : false;\n        }\n\n        /**\n         * @returns org.apache.arrow.flatbuf.Type\n         */\n        typeType(): org.apache.arrow.flatbuf.Type {\n            let offset = this.bb!.__offset(this.bb_pos, 8);\n            return offset ? /**  */ (this.bb!.readUint8(this.bb_pos + offset)) : org.apache.arrow.flatbuf.Type.NONE;\n        }\n\n        /**\n         * This is the type of the decoded value if the field is dictionary encoded.\n         *\n         * @param flatbuffers.Table obj\n         * @returns ?flatbuffers.Table\n         */\n        type<T extends flatbuffers.Table>(obj: T): T | null {\n            let offset = this.bb!.__offset(this.bb_pos, 10);\n            return offset ? this.bb!.__union(obj, this.bb_pos + offset) : null;\n        }\n\n        /**\n         * Present only if the field is dictionary encoded.\n         *\n         * @param org.apache.arrow.flatbuf.DictionaryEncoding= obj\n         * @returns org.apache.arrow.flatbuf.DictionaryEncoding|null\n         */\n        dictionary(obj?: org.apache.arrow.flatbuf.DictionaryEncoding): org.apache.arrow.flatbuf.DictionaryEncoding | null {\n            let offset = this.bb!.__offset(this.bb_pos, 12);\n            return offset ? (obj || new org.apache.arrow.flatbuf.DictionaryEncoding).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;\n        }\n\n        /**\n         * children apply only to nested data types like Struct, List and Union. For\n         * primitive types children will have length 0.\n         *\n         * @param number index\n         * @param org.apache.arrow.flatbuf.Field= obj\n         * @returns org.apache.arrow.flatbuf.Field\n         */\n        children(index: number, obj?: org.apache.arrow.flatbuf.Field): org.apache.arrow.flatbuf.Field | null {\n            let offset = this.bb!.__offset(this.bb_pos, 14);\n            return offset ? (obj || new org.apache.arrow.flatbuf.Field).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;\n        }\n\n        /**\n         * @returns number\n         */\n        childrenLength(): number {\n            let offset = this.bb!.__offset(this.bb_pos, 14);\n            return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n        }\n\n        /**\n         * User-defined metadata\n         *\n         * @param number index\n         * @param org.apache.arrow.flatbuf.KeyValue= obj\n         * @returns org.apache.arrow.flatbuf.KeyValue\n         */\n        customMetadata(index: number, obj?: org.apache.arrow.flatbuf.KeyValue): org.apache.arrow.flatbuf.KeyValue | null {\n            let offset = this.bb!.__offset(this.bb_pos, 16);\n            return offset ? (obj || new org.apache.arrow.flatbuf.KeyValue).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;\n        }\n\n        /**\n         * @returns number\n         */\n        customMetadataLength(): number {\n            let offset = this.bb!.__offset(this.bb_pos, 16);\n            return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         */\n        static startField(builder: flatbuffers.Builder) {\n            builder.startObject(7);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Offset nameOffset\n         */\n        static addName(builder: flatbuffers.Builder, nameOffset: flatbuffers.Offset) {\n            builder.addFieldOffset(0, nameOffset, 0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param boolean nullable\n         */\n        static addNullable(builder: flatbuffers.Builder, nullable: boolean) {\n            builder.addFieldInt8(1, +nullable, +false);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param org.apache.arrow.flatbuf.Type typeType\n         */\n        static addTypeType(builder: flatbuffers.Builder, typeType: org.apache.arrow.flatbuf.Type) {\n            builder.addFieldInt8(2, typeType, org.apache.arrow.flatbuf.Type.NONE);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Offset typeOffset\n         */\n        static addType(builder: flatbuffers.Builder, typeOffset: flatbuffers.Offset) {\n            builder.addFieldOffset(3, typeOffset, 0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Offset dictionaryOffset\n         */\n        static addDictionary(builder: flatbuffers.Builder, dictionaryOffset: flatbuffers.Offset) {\n            builder.addFieldOffset(4, dictionaryOffset, 0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Offset childrenOffset\n         */\n        static addChildren(builder: flatbuffers.Builder, childrenOffset: flatbuffers.Offset) {\n            builder.addFieldOffset(5, childrenOffset, 0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param Array.<flatbuffers.Offset> data\n         * @returns flatbuffers.Offset\n         */\n        static createChildrenVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]): flatbuffers.Offset {\n            builder.startVector(4, data.length, 4);\n            for (let i = data.length - 1; i >= 0; i--) {\n                builder.addOffset(data[i]);\n            }\n            return builder.endVector();\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param number numElems\n         */\n        static startChildrenVector(builder: flatbuffers.Builder, numElems: number) {\n            builder.startVector(4, numElems, 4);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Offset customMetadataOffset\n         */\n        static addCustomMetadata(builder: flatbuffers.Builder, customMetadataOffset: flatbuffers.Offset) {\n            builder.addFieldOffset(6, customMetadataOffset, 0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param Array.<flatbuffers.Offset> data\n         * @returns flatbuffers.Offset\n         */\n        static createCustomMetadataVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]): flatbuffers.Offset {\n            builder.startVector(4, data.length, 4);\n            for (let i = data.length - 1; i >= 0; i--) {\n                builder.addOffset(data[i]);\n            }\n            return builder.endVector();\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param number numElems\n         */\n        static startCustomMetadataVector(builder: flatbuffers.Builder, numElems: number) {\n            builder.startVector(4, numElems, 4);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @returns flatbuffers.Offset\n         */\n        static endField(builder: flatbuffers.Builder): flatbuffers.Offset {\n            let offset = builder.endObject();\n            return offset;\n        }\n\n        static createField(builder: flatbuffers.Builder, nameOffset: flatbuffers.Offset, nullable: boolean, typeType: org.apache.arrow.flatbuf.Type, typeOffset: flatbuffers.Offset, dictionaryOffset: flatbuffers.Offset, childrenOffset: flatbuffers.Offset, customMetadataOffset: flatbuffers.Offset): flatbuffers.Offset {\n            Field.startField(builder);\n            Field.addName(builder, nameOffset);\n            Field.addNullable(builder, nullable);\n            Field.addTypeType(builder, typeType);\n            Field.addType(builder, typeOffset);\n            Field.addDictionary(builder, dictionaryOffset);\n            Field.addChildren(builder, childrenOffset);\n            Field.addCustomMetadata(builder, customMetadataOffset);\n            return Field.endField(builder);\n        }\n    }\n}\n/**\n * ----------------------------------------------------------------------\n * A Buffer represents a single contiguous memory segment\n *\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class Buffer {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns Buffer\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): Buffer {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * The relative offset into the shared memory page where the bytes for this\n         * buffer starts\n         *\n         * @returns flatbuffers.Long\n         */\n        offset(): flatbuffers.Long {\n            return this.bb!.readInt64(this.bb_pos);\n        }\n\n        /**\n         * The absolute length (in bytes) of the memory buffer. The memory is found\n         * from offset (inclusive) to offset + length (non-inclusive).\n         *\n         * @returns flatbuffers.Long\n         */\n        length(): flatbuffers.Long {\n            return this.bb!.readInt64(this.bb_pos + 8);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Long offset\n         * @param flatbuffers.Long length\n         * @returns flatbuffers.Offset\n         */\n        static createBuffer(builder: flatbuffers.Builder, offset: flatbuffers.Long, length: flatbuffers.Long): flatbuffers.Offset {\n            builder.prep(8, 16);\n            builder.writeInt64(length);\n            builder.writeInt64(offset);\n            return builder.offset();\n        }\n\n    }\n}\n/**\n * ----------------------------------------------------------------------\n * A Schema describes the columns in a row batch\n *\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class Schema {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns Schema\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): Schema {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param Schema= obj\n         * @returns Schema\n         */\n        static getRootAsSchema(bb: flatbuffers.ByteBuffer, obj?: Schema): Schema {\n            return (obj || new Schema).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n\n        /**\n         * endianness of the buffer\n         * it is Little Endian by default\n         * if endianness doesn't match the underlying system then the vectors need to be converted\n         *\n         * @returns org.apache.arrow.flatbuf.Endianness\n         */\n        endianness(): org.apache.arrow.flatbuf.Endianness {\n            let offset = this.bb!.__offset(this.bb_pos, 4);\n            return offset ? /**  */ (this.bb!.readInt16(this.bb_pos + offset)) : org.apache.arrow.flatbuf.Endianness.Little;\n        }\n\n        /**\n         * @param number index\n         * @param org.apache.arrow.flatbuf.Field= obj\n         * @returns org.apache.arrow.flatbuf.Field\n         */\n        fields(index: number, obj?: org.apache.arrow.flatbuf.Field): org.apache.arrow.flatbuf.Field | null {\n            let offset = this.bb!.__offset(this.bb_pos, 6);\n            return offset ? (obj || new org.apache.arrow.flatbuf.Field).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;\n        }\n\n        /**\n         * @returns number\n         */\n        fieldsLength(): number {\n            let offset = this.bb!.__offset(this.bb_pos, 6);\n            return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n        }\n\n        /**\n         * @param number index\n         * @param org.apache.arrow.flatbuf.KeyValue= obj\n         * @returns org.apache.arrow.flatbuf.KeyValue\n         */\n        customMetadata(index: number, obj?: org.apache.arrow.flatbuf.KeyValue): org.apache.arrow.flatbuf.KeyValue | null {\n            let offset = this.bb!.__offset(this.bb_pos, 8);\n            return offset ? (obj || new org.apache.arrow.flatbuf.KeyValue).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;\n        }\n\n        /**\n         * @returns number\n         */\n        customMetadataLength(): number {\n            let offset = this.bb!.__offset(this.bb_pos, 8);\n            return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         */\n        static startSchema(builder: flatbuffers.Builder) {\n            builder.startObject(3);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param org.apache.arrow.flatbuf.Endianness endianness\n         */\n        static addEndianness(builder: flatbuffers.Builder, endianness: org.apache.arrow.flatbuf.Endianness) {\n            builder.addFieldInt16(0, endianness, org.apache.arrow.flatbuf.Endianness.Little);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Offset fieldsOffset\n         */\n        static addFields(builder: flatbuffers.Builder, fieldsOffset: flatbuffers.Offset) {\n            builder.addFieldOffset(1, fieldsOffset, 0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param Array.<flatbuffers.Offset> data\n         * @returns flatbuffers.Offset\n         */\n        static createFieldsVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]): flatbuffers.Offset {\n            builder.startVector(4, data.length, 4);\n            for (let i = data.length - 1; i >= 0; i--) {\n                builder.addOffset(data[i]);\n            }\n            return builder.endVector();\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param number numElems\n         */\n        static startFieldsVector(builder: flatbuffers.Builder, numElems: number) {\n            builder.startVector(4, numElems, 4);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Offset customMetadataOffset\n         */\n        static addCustomMetadata(builder: flatbuffers.Builder, customMetadataOffset: flatbuffers.Offset) {\n            builder.addFieldOffset(2, customMetadataOffset, 0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param Array.<flatbuffers.Offset> data\n         * @returns flatbuffers.Offset\n         */\n        static createCustomMetadataVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]): flatbuffers.Offset {\n            builder.startVector(4, data.length, 4);\n            for (let i = data.length - 1; i >= 0; i--) {\n                builder.addOffset(data[i]);\n            }\n            return builder.endVector();\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param number numElems\n         */\n        static startCustomMetadataVector(builder: flatbuffers.Builder, numElems: number) {\n            builder.startVector(4, numElems, 4);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @returns flatbuffers.Offset\n         */\n        static endSchema(builder: flatbuffers.Builder): flatbuffers.Offset {\n            let offset = builder.endObject();\n            return offset;\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Offset offset\n         */\n        static finishSchemaBuffer(builder: flatbuffers.Builder, offset: flatbuffers.Offset) {\n            builder.finish(offset);\n        }\n\n        static createSchema(builder: flatbuffers.Builder, endianness: org.apache.arrow.flatbuf.Endianness, fieldsOffset: flatbuffers.Offset, customMetadataOffset: flatbuffers.Offset): flatbuffers.Offset {\n            Schema.startSchema(builder);\n            Schema.addEndianness(builder, endianness);\n            Schema.addFields(builder, fieldsOffset);\n            Schema.addCustomMetadata(builder, customMetadataOffset);\n            return Schema.endSchema(builder);\n        }\n    }\n}\n","// automatically generated by the FlatBuffers compiler, do not modify\n\nimport { flatbuffers } from 'flatbuffers';\nimport * as NS7624605610262437867 from './Schema';\nexport namespace org.apache.arrow.flatbuf {\n    export import Schema = NS7624605610262437867.org.apache.arrow.flatbuf.Schema;\n}\n/**\n * ----------------------------------------------------------------------\n * The root Message type\n * This union enables us to easily send different message types without\n * redundant storage, and in the future we can easily add new message types.\n *\n * Arrow implementations do not need to implement all of the message types,\n * which may include experimental metadata types. For maximum compatibility,\n * it is best to send data using RecordBatch\n *\n * @enum {number}\n */\nexport namespace org.apache.arrow.flatbuf {\n    export enum MessageHeader {\n        NONE = 0,\n        Schema = 1,\n        DictionaryBatch = 2,\n        RecordBatch = 3,\n        Tensor = 4,\n        SparseTensor = 5\n    }\n}\n\n/**\n * ----------------------------------------------------------------------\n * Data structures for describing a table row batch (a collection of\n * equal-length Arrow arrays)\n * Metadata about a field at some level of a nested type tree (but not\n * its children).\n *\n * For example, a List<Int16> with values [[1, 2, 3], null, [4], [5, 6], null]\n * would have {length: 5, null_count: 2} for its List node, and {length: 6,\n * null_count: 0} for its Int16 node, as separate FieldNode structs\n *\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class FieldNode {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns FieldNode\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): FieldNode {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * The number of value slots in the Arrow array at this level of a nested\n         * tree\n         *\n         * @returns flatbuffers.Long\n         */\n        length(): flatbuffers.Long {\n            return this.bb!.readInt64(this.bb_pos);\n        }\n\n        /**\n         * The number of observed nulls. Fields with null_count == 0 may choose not\n         * to write their physical validity bitmap out as a materialized buffer,\n         * instead setting the length of the bitmap buffer to 0.\n         *\n         * @returns flatbuffers.Long\n         */\n        nullCount(): flatbuffers.Long {\n            return this.bb!.readInt64(this.bb_pos + 8);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Long length\n         * @param flatbuffers.Long null_count\n         * @returns flatbuffers.Offset\n         */\n        static createFieldNode(builder: flatbuffers.Builder, length: flatbuffers.Long, null_count: flatbuffers.Long): flatbuffers.Offset {\n            builder.prep(8, 16);\n            builder.writeInt64(null_count);\n            builder.writeInt64(length);\n            return builder.offset();\n        }\n\n    }\n}\n/**\n * A data header describing the shared memory layout of a \"record\" or \"row\"\n * batch. Some systems call this a \"row batch\" internally and others a \"record\n * batch\".\n *\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class RecordBatch {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns RecordBatch\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): RecordBatch {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param RecordBatch= obj\n         * @returns RecordBatch\n         */\n        static getRootAsRecordBatch(bb: flatbuffers.ByteBuffer, obj?: RecordBatch): RecordBatch {\n            return (obj || new RecordBatch).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n\n        /**\n         * number of records / rows. The arrays in the batch should all have this\n         * length\n         *\n         * @returns flatbuffers.Long\n         */\n        length(): flatbuffers.Long {\n            let offset = this.bb!.__offset(this.bb_pos, 4);\n            return offset ? this.bb!.readInt64(this.bb_pos + offset) : this.bb!.createLong(0, 0);\n        }\n\n        /**\n         * Nodes correspond to the pre-ordered flattened logical schema\n         *\n         * @param number index\n         * @param org.apache.arrow.flatbuf.FieldNode= obj\n         * @returns org.apache.arrow.flatbuf.FieldNode\n         */\n        nodes(index: number, obj?: org.apache.arrow.flatbuf.FieldNode): org.apache.arrow.flatbuf.FieldNode | null {\n            let offset = this.bb!.__offset(this.bb_pos, 6);\n            return offset ? (obj || new org.apache.arrow.flatbuf.FieldNode).__init(this.bb!.__vector(this.bb_pos + offset) + index * 16, this.bb!) : null;\n        }\n\n        /**\n         * @returns number\n         */\n        nodesLength(): number {\n            let offset = this.bb!.__offset(this.bb_pos, 6);\n            return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n        }\n\n        /**\n         * Buffers correspond to the pre-ordered flattened buffer tree\n         *\n         * The number of buffers appended to this list depends on the schema. For\n         * example, most primitive arrays will have 2 buffers, 1 for the validity\n         * bitmap and 1 for the values. For struct arrays, there will only be a\n         * single buffer for the validity (nulls) bitmap\n         *\n         * @param number index\n         * @param org.apache.arrow.flatbuf.Buffer= obj\n         * @returns org.apache.arrow.flatbuf.Buffer\n         */\n        buffers(index: number, obj?: NS7624605610262437867.org.apache.arrow.flatbuf.Buffer): NS7624605610262437867.org.apache.arrow.flatbuf.Buffer | null {\n            let offset = this.bb!.__offset(this.bb_pos, 8);\n            return offset ? (obj || new NS7624605610262437867.org.apache.arrow.flatbuf.Buffer).__init(this.bb!.__vector(this.bb_pos + offset) + index * 16, this.bb!) : null;\n        }\n\n        /**\n         * @returns number\n         */\n        buffersLength(): number {\n            let offset = this.bb!.__offset(this.bb_pos, 8);\n            return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         */\n        static startRecordBatch(builder: flatbuffers.Builder) {\n            builder.startObject(3);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Long length\n         */\n        static addLength(builder: flatbuffers.Builder, length: flatbuffers.Long) {\n            builder.addFieldInt64(0, length, builder.createLong(0, 0));\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Offset nodesOffset\n         */\n        static addNodes(builder: flatbuffers.Builder, nodesOffset: flatbuffers.Offset) {\n            builder.addFieldOffset(1, nodesOffset, 0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param number numElems\n         */\n        static startNodesVector(builder: flatbuffers.Builder, numElems: number) {\n            builder.startVector(16, numElems, 8);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Offset buffersOffset\n         */\n        static addBuffers(builder: flatbuffers.Builder, buffersOffset: flatbuffers.Offset) {\n            builder.addFieldOffset(2, buffersOffset, 0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param number numElems\n         */\n        static startBuffersVector(builder: flatbuffers.Builder, numElems: number) {\n            builder.startVector(16, numElems, 8);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @returns flatbuffers.Offset\n         */\n        static endRecordBatch(builder: flatbuffers.Builder): flatbuffers.Offset {\n            let offset = builder.endObject();\n            return offset;\n        }\n\n        static createRecordBatch(builder: flatbuffers.Builder, length: flatbuffers.Long, nodesOffset: flatbuffers.Offset, buffersOffset: flatbuffers.Offset): flatbuffers.Offset {\n            RecordBatch.startRecordBatch(builder);\n            RecordBatch.addLength(builder, length);\n            RecordBatch.addNodes(builder, nodesOffset);\n            RecordBatch.addBuffers(builder, buffersOffset);\n            return RecordBatch.endRecordBatch(builder);\n        }\n    }\n}\n/**\n * For sending dictionary encoding information. Any Field can be\n * dictionary-encoded, but in this case none of its children may be\n * dictionary-encoded.\n * There is one vector / column per dictionary, but that vector / column\n * may be spread across multiple dictionary batches by using the isDelta\n * flag\n *\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class DictionaryBatch {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns DictionaryBatch\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): DictionaryBatch {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param DictionaryBatch= obj\n         * @returns DictionaryBatch\n         */\n        static getRootAsDictionaryBatch(bb: flatbuffers.ByteBuffer, obj?: DictionaryBatch): DictionaryBatch {\n            return (obj || new DictionaryBatch).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n\n        /**\n         * @returns flatbuffers.Long\n         */\n        id(): flatbuffers.Long {\n            let offset = this.bb!.__offset(this.bb_pos, 4);\n            return offset ? this.bb!.readInt64(this.bb_pos + offset) : this.bb!.createLong(0, 0);\n        }\n\n        /**\n         * @param org.apache.arrow.flatbuf.RecordBatch= obj\n         * @returns org.apache.arrow.flatbuf.RecordBatch|null\n         */\n        data(obj?: org.apache.arrow.flatbuf.RecordBatch): org.apache.arrow.flatbuf.RecordBatch | null {\n            let offset = this.bb!.__offset(this.bb_pos, 6);\n            return offset ? (obj || new org.apache.arrow.flatbuf.RecordBatch).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;\n        }\n\n        /**\n         * If isDelta is true the values in the dictionary are to be appended to a\n         * dictionary with the indicated id\n         *\n         * @returns boolean\n         */\n        isDelta(): boolean {\n            let offset = this.bb!.__offset(this.bb_pos, 8);\n            return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : false;\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         */\n        static startDictionaryBatch(builder: flatbuffers.Builder) {\n            builder.startObject(3);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Long id\n         */\n        static addId(builder: flatbuffers.Builder, id: flatbuffers.Long) {\n            builder.addFieldInt64(0, id, builder.createLong(0, 0));\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Offset dataOffset\n         */\n        static addData(builder: flatbuffers.Builder, dataOffset: flatbuffers.Offset) {\n            builder.addFieldOffset(1, dataOffset, 0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param boolean isDelta\n         */\n        static addIsDelta(builder: flatbuffers.Builder, isDelta: boolean) {\n            builder.addFieldInt8(2, +isDelta, +false);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @returns flatbuffers.Offset\n         */\n        static endDictionaryBatch(builder: flatbuffers.Builder): flatbuffers.Offset {\n            let offset = builder.endObject();\n            return offset;\n        }\n\n        static createDictionaryBatch(builder: flatbuffers.Builder, id: flatbuffers.Long, dataOffset: flatbuffers.Offset, isDelta: boolean): flatbuffers.Offset {\n            DictionaryBatch.startDictionaryBatch(builder);\n            DictionaryBatch.addId(builder, id);\n            DictionaryBatch.addData(builder, dataOffset);\n            DictionaryBatch.addIsDelta(builder, isDelta);\n            return DictionaryBatch.endDictionaryBatch(builder);\n        }\n    }\n}\n/**\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class Message {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns Message\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): Message {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param Message= obj\n         * @returns Message\n         */\n        static getRootAsMessage(bb: flatbuffers.ByteBuffer, obj?: Message): Message {\n            return (obj || new Message).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n\n        /**\n         * @returns org.apache.arrow.flatbuf.MetadataVersion\n         */\n        version(): NS7624605610262437867.org.apache.arrow.flatbuf.MetadataVersion {\n            let offset = this.bb!.__offset(this.bb_pos, 4);\n            return offset ? /**  */ (this.bb!.readInt16(this.bb_pos + offset)) : NS7624605610262437867.org.apache.arrow.flatbuf.MetadataVersion.V1;\n        }\n\n        /**\n         * @returns org.apache.arrow.flatbuf.MessageHeader\n         */\n        headerType(): org.apache.arrow.flatbuf.MessageHeader {\n            let offset = this.bb!.__offset(this.bb_pos, 6);\n            return offset ? /**  */ (this.bb!.readUint8(this.bb_pos + offset)) : org.apache.arrow.flatbuf.MessageHeader.NONE;\n        }\n\n        /**\n         * @param flatbuffers.Table obj\n         * @returns ?flatbuffers.Table\n         */\n        header<T extends flatbuffers.Table>(obj: T): T | null {\n            let offset = this.bb!.__offset(this.bb_pos, 8);\n            return offset ? this.bb!.__union(obj, this.bb_pos + offset) : null;\n        }\n\n        /**\n         * @returns flatbuffers.Long\n         */\n        bodyLength(): flatbuffers.Long {\n            let offset = this.bb!.__offset(this.bb_pos, 10);\n            return offset ? this.bb!.readInt64(this.bb_pos + offset) : this.bb!.createLong(0, 0);\n        }\n\n        /**\n         * @param number index\n         * @param org.apache.arrow.flatbuf.KeyValue= obj\n         * @returns org.apache.arrow.flatbuf.KeyValue\n         */\n        customMetadata(index: number, obj?: NS7624605610262437867.org.apache.arrow.flatbuf.KeyValue): NS7624605610262437867.org.apache.arrow.flatbuf.KeyValue | null {\n            let offset = this.bb!.__offset(this.bb_pos, 12);\n            return offset ? (obj || new NS7624605610262437867.org.apache.arrow.flatbuf.KeyValue).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;\n        }\n\n        /**\n         * @returns number\n         */\n        customMetadataLength(): number {\n            let offset = this.bb!.__offset(this.bb_pos, 12);\n            return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         */\n        static startMessage(builder: flatbuffers.Builder) {\n            builder.startObject(5);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param org.apache.arrow.flatbuf.MetadataVersion version\n         */\n        static addVersion(builder: flatbuffers.Builder, version: NS7624605610262437867.org.apache.arrow.flatbuf.MetadataVersion) {\n            builder.addFieldInt16(0, version, NS7624605610262437867.org.apache.arrow.flatbuf.MetadataVersion.V1);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param org.apache.arrow.flatbuf.MessageHeader headerType\n         */\n        static addHeaderType(builder: flatbuffers.Builder, headerType: org.apache.arrow.flatbuf.MessageHeader) {\n            builder.addFieldInt8(1, headerType, org.apache.arrow.flatbuf.MessageHeader.NONE);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Offset headerOffset\n         */\n        static addHeader(builder: flatbuffers.Builder, headerOffset: flatbuffers.Offset) {\n            builder.addFieldOffset(2, headerOffset, 0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Long bodyLength\n         */\n        static addBodyLength(builder: flatbuffers.Builder, bodyLength: flatbuffers.Long) {\n            builder.addFieldInt64(3, bodyLength, builder.createLong(0, 0));\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Offset customMetadataOffset\n         */\n        static addCustomMetadata(builder: flatbuffers.Builder, customMetadataOffset: flatbuffers.Offset) {\n            builder.addFieldOffset(4, customMetadataOffset, 0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param Array.<flatbuffers.Offset> data\n         * @returns flatbuffers.Offset\n         */\n        static createCustomMetadataVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]): flatbuffers.Offset {\n            builder.startVector(4, data.length, 4);\n            for (let i = data.length - 1; i >= 0; i--) {\n                builder.addOffset(data[i]);\n            }\n            return builder.endVector();\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param number numElems\n         */\n        static startCustomMetadataVector(builder: flatbuffers.Builder, numElems: number) {\n            builder.startVector(4, numElems, 4);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @returns flatbuffers.Offset\n         */\n        static endMessage(builder: flatbuffers.Builder): flatbuffers.Offset {\n            let offset = builder.endObject();\n            return offset;\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Offset offset\n         */\n        static finishMessageBuffer(builder: flatbuffers.Builder, offset: flatbuffers.Offset) {\n            builder.finish(offset);\n        }\n\n        static createMessage(builder: flatbuffers.Builder, version: NS7624605610262437867.org.apache.arrow.flatbuf.MetadataVersion, headerType: org.apache.arrow.flatbuf.MessageHeader, headerOffset: flatbuffers.Offset, bodyLength: flatbuffers.Long, customMetadataOffset: flatbuffers.Offset): flatbuffers.Offset {\n            Message.startMessage(builder);\n            Message.addVersion(builder, version);\n            Message.addHeaderType(builder, headerType);\n            Message.addHeader(builder, headerOffset);\n            Message.addBodyLength(builder, bodyLength);\n            Message.addCustomMetadata(builder, customMetadataOffset);\n            return Message.endMessage(builder);\n        }\n    }\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport * as Schema_ from './fb/Schema';\nimport * as Message_ from './fb/Message';\n\nexport import ArrowType = Schema_.org.apache.arrow.flatbuf.Type;\nexport import DateUnit = Schema_.org.apache.arrow.flatbuf.DateUnit;\nexport import TimeUnit = Schema_.org.apache.arrow.flatbuf.TimeUnit;\nexport import Precision = Schema_.org.apache.arrow.flatbuf.Precision;\nexport import UnionMode = Schema_.org.apache.arrow.flatbuf.UnionMode;\nexport import IntervalUnit = Schema_.org.apache.arrow.flatbuf.IntervalUnit;\nexport import MessageHeader = Message_.org.apache.arrow.flatbuf.MessageHeader;\nexport import MetadataVersion = Schema_.org.apache.arrow.flatbuf.MetadataVersion;\n\n/**\n * Main data type enumeration.\n *\n * Data types in this library are all *logical*. They can be expressed as\n * either a primitive physical type (bytes or bits of some fixed size), a\n * nested type consisting of other data types, or another data type (e.g. a\n * timestamp encoded as an int64).\n *\n * **Note**: Only enum values 0-17 (NONE through Map) are written to an Arrow\n * IPC payload.\n *\n * The rest of the values are specified here so TypeScript can narrow the type\n * signatures further beyond the base Arrow Types. The Arrow DataTypes include\n * metadata like `bitWidth` that impact the type signatures of the values we\n * accept and return.\n *\n * For example, the `Int8Vector` reads 1-byte numbers from an `Int8Array`, an\n * `Int32Vector` reads a 4-byte number from an `Int32Array`, and an `Int64Vector`\n * reads a pair of 4-byte lo, hi 32-bit integers as a zero-copy slice from the\n * underlying `Int32Array`.\n *\n * Library consumers benefit by knowing the narrowest type, since we can ensure\n * the types across all public methods are propagated, and never bail to `any`.\n * These values are _never_ used at runtime, and they will _never_ be written\n * to the flatbuffers metadata of serialized Arrow IPC payloads.\n */\nexport enum Type {\n    /** The default placeholder type */\n    NONE            =  0,\n    /** A NULL type having no physical storage */\n    Null            =  1,\n    /** Signed or unsigned 8, 16, 32, or 64-bit little-endian integer */\n    Int             =  2,\n    /** 2, 4, or 8-byte floating point value */\n    Float           =  3,\n    /** Variable-length bytes (no guarantee of UTF8-ness) */\n    Binary          =  4,\n    /** UTF8 variable-length string as List<Char> */\n    Utf8            =  5,\n    /** Boolean as 1 bit, LSB bit-packed ordering */\n    Bool            =  6,\n    /** Precision-and-scale-based decimal type. Storage type depends on the parameters. */\n    Decimal         =  7,\n    /** int32_t days or int64_t milliseconds since the UNIX epoch */\n    Date            =  8,\n    /** Time as signed 32 or 64-bit integer, representing either seconds, milliseconds, microseconds, or nanoseconds since midnight since midnight */\n    Time            =  9,\n    /** Exact timestamp encoded with int64 since UNIX epoch (Default unit millisecond) */\n    Timestamp       = 10,\n    /** YEAR_MONTH or DAY_TIME interval in SQL style */\n    Interval        = 11,\n    /** A list of some logical data type */\n    List            = 12,\n    /** Struct of logical types */\n    Struct          = 13,\n    /** Union of logical types */\n    Union           = 14,\n    /** Fixed-size binary. Each value occupies the same number of bytes */\n    FixedSizeBinary = 15,\n    /** Fixed-size list. Each value occupies the same number of bytes */\n    FixedSizeList   = 16,\n    /** Map of named logical types */\n    Map             = 17,\n\n    /** Dictionary aka Category type */\n    Dictionary            = -1,\n    Int8                  = -2,\n    Int16                 = -3,\n    Int32                 = -4,\n    Int64                 = -5,\n    Uint8                 = -6,\n    Uint16                = -7,\n    Uint32                = -8,\n    Uint64                = -9,\n    Float16               = -10,\n    Float32               = -11,\n    Float64               = -12,\n    DateDay               = -13,\n    DateMillisecond       = -14,\n    TimestampSecond       = -15,\n    TimestampMillisecond  = -16,\n    TimestampMicrosecond  = -17,\n    TimestampNanosecond   = -18,\n    TimeSecond            = -19,\n    TimeMillisecond       = -20,\n    TimeMicrosecond       = -21,\n    TimeNanosecond        = -22,\n    DenseUnion            = -23,\n    SparseUnion           = -24,\n    IntervalDayTime       = -25,\n    IntervalYearMonth     = -26,\n}\n\nexport enum BufferType {\n    /**\n     * used in List type, Dense Union and variable length primitive types (String, Binary)\n     */\n    OFFSET = 0,\n\n    /**\n     * actual data, either wixed width primitive types in slots or variable width delimited by an OFFSET vector\n     */\n    DATA = 1,\n\n    /**\n     * Bit vector indicating if each value is null\n     */\n    VALIDITY = 2,\n\n    /**\n     * Type vector used in Union type\n     */\n    TYPE = 3\n  }\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\n/** @ignore */\nexport function getBool(_data: any, _index: number, byte: number, bit: number) {\n    return (byte & 1 << bit) !== 0;\n}\n\n/** @ignore */\nexport function getBit(_data: any, _index: number, byte: number, bit: number): 0 | 1 {\n    return (byte & 1 << bit) >> bit as (0 | 1);\n}\n\n/** @ignore */\nexport function setBool(bytes: Uint8Array, index: number, value: any) {\n    return value ?\n        !!(bytes[index >> 3] |=  (1 << (index % 8))) || true :\n        !(bytes[index >> 3] &= ~(1 << (index % 8))) && false ;\n}\n\n/** @ignore */\nexport function truncateBitmap(offset: number, length: number, bitmap: Uint8Array) {\n    const alignedSize = (bitmap.byteLength + 7) & ~7;\n    if (offset > 0 || bitmap.byteLength < alignedSize) {\n        const bytes = new Uint8Array(alignedSize);\n        // If the offset is a multiple of 8 bits, it's safe to slice the bitmap\n        bytes.set(offset % 8 === 0 ? bitmap.subarray(offset >> 3) :\n            // Otherwise iterate each bit from the offset and return a new one\n            packBools(iterateBits(bitmap, offset, length, null, getBool)).subarray(0, alignedSize));\n        return bytes;\n    }\n    return bitmap;\n}\n\n/** @ignore */\nexport function packBools(values: Iterable<any>) {\n    let xs: number[] = [];\n    let i = 0, bit = 0, byte = 0;\n    for (const value of values) {\n        value && (byte |= 1 << bit);\n        if (++bit === 8) {\n            xs[i++] = byte;\n            byte = bit = 0;\n        }\n    }\n    if (i === 0 || bit > 0) { xs[i++] = byte; }\n    let b = new Uint8Array((xs.length + 7) & ~7);\n    b.set(xs);\n    return b;\n}\n\n/** @ignore */\nexport function* iterateBits<T>(bytes: Uint8Array, begin: number, length: number, context: any,\n                                get: (context: any, index: number, byte: number, bit: number) => T) {\n    let bit = begin % 8;\n    let byteIndex = begin >> 3;\n    let index = 0, remaining = length;\n    for (; remaining > 0; bit = 0) {\n        let byte = bytes[byteIndex++];\n        do {\n            yield get(context, index++, byte, bit);\n        } while (--remaining > 0 && ++bit < 8);\n    }\n}\n\n/**\n * Compute the population count (the number of bits set to 1) for a range of bits in a Uint8Array.\n * @param vector The Uint8Array of bits for which to compute the population count.\n * @param lhs The range's left-hand side (or start) bit\n * @param rhs The range's right-hand side (or end) bit\n */\n/** @ignore */\nexport function popcnt_bit_range(data: Uint8Array, lhs: number, rhs: number): number {\n    if (rhs - lhs <= 0) { return 0; }\n    // If the bit range is less than one byte, sum the 1 bits in the bit range\n    if (rhs - lhs < 8) {\n        let sum = 0;\n        for (const bit of iterateBits(data, lhs, rhs - lhs, data, getBit)) {\n            sum += bit;\n        }\n        return sum;\n    }\n    // Get the next lowest multiple of 8 from the right hand side\n    const rhsInside = rhs >> 3 << 3;\n    // Get the next highest multiple of 8 from the left hand side\n    const lhsInside = lhs + (lhs % 8 === 0 ? 0 : 8 - lhs % 8);\n    return (\n        // Get the popcnt of bits between the left hand side, and the next highest multiple of 8\n        popcnt_bit_range(data, lhs, lhsInside) +\n        // Get the popcnt of bits between the right hand side, and the next lowest multiple of 8\n        popcnt_bit_range(data, rhsInside, rhs) +\n        // Get the popcnt of all bits between the left and right hand sides' multiples of 8\n        popcnt_array(data, lhsInside >> 3, (rhsInside - lhsInside) >> 3)\n    );\n}\n\n/** @ignore */\nexport function popcnt_array(arr: ArrayBufferView, byteOffset?: number, byteLength?: number) {\n    let cnt = 0, pos = byteOffset! | 0;\n    const view = new DataView(arr.buffer, arr.byteOffset, arr.byteLength);\n    const len =  byteLength === void 0 ? arr.byteLength : pos + byteLength;\n    while (len - pos >= 4) {\n        cnt += popcnt_uint32(view.getUint32(pos));\n        pos += 4;\n    }\n    while (len - pos >= 2) {\n        cnt += popcnt_uint32(view.getUint16(pos));\n        pos += 2;\n    }\n    while (len - pos >= 1) {\n        cnt += popcnt_uint32(view.getUint8(pos));\n        pos += 1;\n    }\n    return cnt;\n}\n\n/** @ignore */\nexport function popcnt_uint32(uint32: number): number {\n    let i = uint32 | 0;\n    i = i - ((i >>> 1) & 0x55555555);\n    i = (i & 0x33333333) + ((i >>> 2) & 0x33333333);\n    return (((i + (i >>> 4)) & 0x0F0F0F0F) * 0x01010101) >>> 24;\n}\n","import arrayWithoutHoles from \"./arrayWithoutHoles.js\";\nimport iterableToArray from \"./iterableToArray.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableSpread from \"./nonIterableSpread.js\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Data } from './data';\nimport { Vector } from './vector';\nimport { Type, Precision, DateUnit, TimeUnit, IntervalUnit, UnionMode } from './enum';\nimport { DataType, Float, Int, Date_, Interval, Time, Timestamp, Union, } from './type';\n\nexport abstract class Visitor {\n    public visitMany(nodes: any[], ...args: any[][]) {\n        return nodes.map((node, i) => this.visit(node, ...args.map((x) => x[i])));\n    }\n    public visit(...args: any[]) {\n        return this.getVisitFn(args[0], false).apply(this, args);\n    }\n    public getVisitFn(node: any, throwIfNotFound = true) {\n        return getVisitFn(this, node, throwIfNotFound);\n    }\n    public visitNull            (_node: any, ..._args: any[]): any { return null; }\n    public visitBool            (_node: any, ..._args: any[]): any { return null; }\n    public visitInt             (_node: any, ..._args: any[]): any { return null; }\n    public visitFloat           (_node: any, ..._args: any[]): any { return null; }\n    public visitUtf8            (_node: any, ..._args: any[]): any { return null; }\n    public visitBinary          (_node: any, ..._args: any[]): any { return null; }\n    public visitFixedSizeBinary (_node: any, ..._args: any[]): any { return null; }\n    public visitDate            (_node: any, ..._args: any[]): any { return null; }\n    public visitTimestamp       (_node: any, ..._args: any[]): any { return null; }\n    public visitTime            (_node: any, ..._args: any[]): any { return null; }\n    public visitDecimal         (_node: any, ..._args: any[]): any { return null; }\n    public visitList            (_node: any, ..._args: any[]): any { return null; }\n    public visitStruct          (_node: any, ..._args: any[]): any { return null; }\n    public visitUnion           (_node: any, ..._args: any[]): any { return null; }\n    public visitDictionary      (_node: any, ..._args: any[]): any { return null; }\n    public visitInterval        (_node: any, ..._args: any[]): any { return null; }\n    public visitFixedSizeList   (_node: any, ..._args: any[]): any { return null; }\n    public visitMap             (_node: any, ..._args: any[]): any { return null; }\n}\n\n/** @ignore */\nfunction getVisitFn<T extends DataType>(visitor: Visitor, node: any, throwIfNotFound = true) {\n    let fn: any = null;\n    let dtype: T['TType'] = Type.NONE;\n    // tslint:disable\n    if      (node instanceof Data    ) { dtype = inferDType(node.type as T); }\n    else if (node instanceof Vector  ) { dtype = inferDType(node.type as T); }\n    else if (node instanceof DataType) { dtype = inferDType(node      as T); }\n    else if (typeof (dtype = node) !== 'number') { dtype = Type[node] as any as T['TType']; }\n\n    switch (dtype) {\n        case Type.Null:                 fn = visitor.visitNull; break;\n        case Type.Bool:                 fn = visitor.visitBool; break;\n        case Type.Int:                  fn = visitor.visitInt; break;\n        case Type.Int8:                 fn = visitor.visitInt8 || visitor.visitInt; break;\n        case Type.Int16:                fn = visitor.visitInt16 || visitor.visitInt; break;\n        case Type.Int32:                fn = visitor.visitInt32 || visitor.visitInt; break;\n        case Type.Int64:                fn = visitor.visitInt64 || visitor.visitInt; break;\n        case Type.Uint8:                fn = visitor.visitUint8 || visitor.visitInt; break;\n        case Type.Uint16:               fn = visitor.visitUint16 || visitor.visitInt; break;\n        case Type.Uint32:               fn = visitor.visitUint32 || visitor.visitInt; break;\n        case Type.Uint64:               fn = visitor.visitUint64 || visitor.visitInt; break;\n        case Type.Float:                fn = visitor.visitFloat; break;\n        case Type.Float16:              fn = visitor.visitFloat16 || visitor.visitFloat; break;\n        case Type.Float32:              fn = visitor.visitFloat32 || visitor.visitFloat; break;\n        case Type.Float64:              fn = visitor.visitFloat64 || visitor.visitFloat; break;\n        case Type.Utf8:                 fn = visitor.visitUtf8; break;\n        case Type.Binary:               fn = visitor.visitBinary; break;\n        case Type.FixedSizeBinary:      fn = visitor.visitFixedSizeBinary; break;\n        case Type.Date:                 fn = visitor.visitDate; break;\n        case Type.DateDay:              fn = visitor.visitDateDay || visitor.visitDate; break;\n        case Type.DateMillisecond:      fn = visitor.visitDateMillisecond || visitor.visitDate; break;\n        case Type.Timestamp:            fn = visitor.visitTimestamp; break;\n        case Type.TimestampSecond:      fn = visitor.visitTimestampSecond || visitor.visitTimestamp; break;\n        case Type.TimestampMillisecond: fn = visitor.visitTimestampMillisecond || visitor.visitTimestamp; break;\n        case Type.TimestampMicrosecond: fn = visitor.visitTimestampMicrosecond || visitor.visitTimestamp; break;\n        case Type.TimestampNanosecond:  fn = visitor.visitTimestampNanosecond || visitor.visitTimestamp; break;\n        case Type.Time:                 fn = visitor.visitTime; break;\n        case Type.TimeSecond:           fn = visitor.visitTimeSecond || visitor.visitTime; break;\n        case Type.TimeMillisecond:      fn = visitor.visitTimeMillisecond || visitor.visitTime; break;\n        case Type.TimeMicrosecond:      fn = visitor.visitTimeMicrosecond || visitor.visitTime; break;\n        case Type.TimeNanosecond:       fn = visitor.visitTimeNanosecond || visitor.visitTime; break;\n        case Type.Decimal:              fn = visitor.visitDecimal; break;\n        case Type.List:                 fn = visitor.visitList; break;\n        case Type.Struct:               fn = visitor.visitStruct; break;\n        case Type.Union:                fn = visitor.visitUnion; break;\n        case Type.DenseUnion:           fn = visitor.visitDenseUnion || visitor.visitUnion; break;\n        case Type.SparseUnion:          fn = visitor.visitSparseUnion || visitor.visitUnion; break;\n        case Type.Dictionary:           fn = visitor.visitDictionary; break;\n        case Type.Interval:             fn = visitor.visitInterval; break;\n        case Type.IntervalDayTime:      fn = visitor.visitIntervalDayTime || visitor.visitInterval; break;\n        case Type.IntervalYearMonth:    fn = visitor.visitIntervalYearMonth || visitor.visitInterval; break;\n        case Type.FixedSizeList:        fn = visitor.visitFixedSizeList; break;\n        case Type.Map:                  fn = visitor.visitMap; break;\n    }\n    if (typeof fn === 'function') return fn;\n    if (!throwIfNotFound) return () => null;\n    throw new Error(`Unrecognized type '${Type[dtype]}'`);\n}\n\n/** @ignore */\nfunction inferDType<T extends DataType>(type: T): Type {\n    switch (type.typeId) {\n        case Type.Null: return Type.Null;\n        case Type.Int:\n            const { bitWidth, isSigned } = (type as any as Int);\n            switch (bitWidth) {\n                case  8: return isSigned ? Type.Int8  : Type.Uint8 ;\n                case 16: return isSigned ? Type.Int16 : Type.Uint16;\n                case 32: return isSigned ? Type.Int32 : Type.Uint32;\n                case 64: return isSigned ? Type.Int64 : Type.Uint64;\n            }\n            return Type.Int;\n        case Type.Float:\n            switch((type as any as Float).precision) {\n                case Precision.HALF: return Type.Float16;\n                case Precision.SINGLE: return Type.Float32;\n                case Precision.DOUBLE: return Type.Float64;\n            }\n            return Type.Float;\n        case Type.Binary: return Type.Binary;\n        case Type.Utf8: return Type.Utf8;\n        case Type.Bool: return Type.Bool;\n        case Type.Decimal: return Type.Decimal;\n        case Type.Time:\n            switch ((type as any as Time).unit) {\n                case TimeUnit.SECOND: return Type.TimeSecond;\n                case TimeUnit.MILLISECOND: return Type.TimeMillisecond;\n                case TimeUnit.MICROSECOND: return Type.TimeMicrosecond;\n                case TimeUnit.NANOSECOND: return Type.TimeNanosecond;\n            }\n            return Type.Time;\n        case Type.Timestamp:\n            switch ((type as any as Timestamp).unit) {\n                case TimeUnit.SECOND: return Type.TimestampSecond;\n                case TimeUnit.MILLISECOND: return Type.TimestampMillisecond;\n                case TimeUnit.MICROSECOND: return Type.TimestampMicrosecond;\n                case TimeUnit.NANOSECOND: return Type.TimestampNanosecond;\n            }\n            return Type.Timestamp;\n        case Type.Date:\n            switch ((type as any as Date_).unit) {\n                case DateUnit.DAY: return Type.DateDay;\n                case DateUnit.MILLISECOND: return Type.DateMillisecond;\n            }\n            return Type.Date;\n        case Type.Interval:\n            switch ((type as any as Interval).unit) {\n                case IntervalUnit.DAY_TIME: return Type.IntervalDayTime;\n                case IntervalUnit.YEAR_MONTH: return Type.IntervalYearMonth;\n            }\n            return Type.Interval;\n        case Type.Map: return Type.Map;\n        case Type.List: return Type.List;\n        case Type.Struct: return Type.Struct;\n        case Type.Union:\n            switch ((type as any as Union).mode) {\n                case UnionMode.Dense: return Type.DenseUnion;\n                case UnionMode.Sparse: return Type.SparseUnion;\n            }\n            return Type.Union;\n        case Type.FixedSizeBinary: return Type.FixedSizeBinary;\n        case Type.FixedSizeList: return Type.FixedSizeList;\n        case Type.Dictionary: return Type.Dictionary;\n    }\n    throw new Error(`Unrecognized type '${Type[type.typeId]}'`);\n}\n\nexport interface Visitor {\n    visitNull                  (node: any, ...args: any[]): any;\n    visitBool                  (node: any, ...args: any[]): any;\n    visitInt                   (node: any, ...args: any[]): any;\n    visitInt8?                 (node: any, ...args: any[]): any;\n    visitInt16?                (node: any, ...args: any[]): any;\n    visitInt32?                (node: any, ...args: any[]): any;\n    visitInt64?                (node: any, ...args: any[]): any;\n    visitUint8?                (node: any, ...args: any[]): any;\n    visitUint16?               (node: any, ...args: any[]): any;\n    visitUint32?               (node: any, ...args: any[]): any;\n    visitUint64?               (node: any, ...args: any[]): any;\n    visitFloat                 (node: any, ...args: any[]): any;\n    visitFloat16?              (node: any, ...args: any[]): any;\n    visitFloat32?              (node: any, ...args: any[]): any;\n    visitFloat64?              (node: any, ...args: any[]): any;\n    visitUtf8                  (node: any, ...args: any[]): any;\n    visitBinary                (node: any, ...args: any[]): any;\n    visitFixedSizeBinary       (node: any, ...args: any[]): any;\n    visitDate                  (node: any, ...args: any[]): any;\n    visitDateDay?              (node: any, ...args: any[]): any;\n    visitDateMillisecond?      (node: any, ...args: any[]): any;\n    visitTimestamp             (node: any, ...args: any[]): any;\n    visitTimestampSecond?      (node: any, ...args: any[]): any;\n    visitTimestampMillisecond? (node: any, ...args: any[]): any;\n    visitTimestampMicrosecond? (node: any, ...args: any[]): any;\n    visitTimestampNanosecond?  (node: any, ...args: any[]): any;\n    visitTime                  (node: any, ...args: any[]): any;\n    visitTimeSecond?           (node: any, ...args: any[]): any;\n    visitTimeMillisecond?      (node: any, ...args: any[]): any;\n    visitTimeMicrosecond?      (node: any, ...args: any[]): any;\n    visitTimeNanosecond?       (node: any, ...args: any[]): any;\n    visitDecimal               (node: any, ...args: any[]): any;\n    visitList                  (node: any, ...args: any[]): any;\n    visitStruct                (node: any, ...args: any[]): any;\n    visitUnion                 (node: any, ...args: any[]): any;\n    visitDenseUnion?           (node: any, ...args: any[]): any;\n    visitSparseUnion?          (node: any, ...args: any[]): any;\n    visitDictionary            (node: any, ...args: any[]): any;\n    visitInterval              (node: any, ...args: any[]): any;\n    visitIntervalDayTime?      (node: any, ...args: any[]): any;\n    visitIntervalYearMonth?    (node: any, ...args: any[]): any;\n    visitFixedSizeList         (node: any, ...args: any[]): any;\n    visitMap                   (node: any, ...args: any[]): any;\n}\n\n// Add these here so they're picked up by the externs creator\n// in the build, and closure-compiler doesn't minify them away\n(Visitor.prototype as any).visitInt8 = null;\n(Visitor.prototype as any).visitInt16 = null;\n(Visitor.prototype as any).visitInt32 = null;\n(Visitor.prototype as any).visitInt64 = null;\n(Visitor.prototype as any).visitUint8 = null;\n(Visitor.prototype as any).visitUint16 = null;\n(Visitor.prototype as any).visitUint32 = null;\n(Visitor.prototype as any).visitUint64 = null;\n(Visitor.prototype as any).visitFloat16 = null;\n(Visitor.prototype as any).visitFloat32 = null;\n(Visitor.prototype as any).visitFloat64 = null;\n(Visitor.prototype as any).visitDateDay = null;\n(Visitor.prototype as any).visitDateMillisecond = null;\n(Visitor.prototype as any).visitTimestampSecond = null;\n(Visitor.prototype as any).visitTimestampMillisecond = null;\n(Visitor.prototype as any).visitTimestampMicrosecond = null;\n(Visitor.prototype as any).visitTimestampNanosecond = null;\n(Visitor.prototype as any).visitTimeSecond = null;\n(Visitor.prototype as any).visitTimeMillisecond = null;\n(Visitor.prototype as any).visitTimeMicrosecond = null;\n(Visitor.prototype as any).visitTimeNanosecond = null;\n(Visitor.prototype as any).visitDenseUnion = null;\n(Visitor.prototype as any).visitSparseUnion = null;\n(Visitor.prototype as any).visitIntervalDayTime = null;\n(Visitor.prototype as any).visitIntervalYearMonth = null;\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Data } from '../data';\nimport { Visitor } from '../visitor';\nimport { VectorType } from '../interfaces';\nimport { Schema, Field } from '../schema';\nimport {\n    DataType, Dictionary,\n    Bool, Null, Utf8, Binary, Decimal, FixedSizeBinary, List, FixedSizeList, Map_, Struct,\n    Float, Float16, Float32, Float64,\n    Int, Uint8, Uint16, Uint32, Uint64, Int8, Int16, Int32, Int64,\n    Date_, DateDay, DateMillisecond,\n    Interval, IntervalDayTime, IntervalYearMonth,\n    Time, TimeSecond, TimeMillisecond, TimeMicrosecond, TimeNanosecond,\n    Timestamp, TimestampSecond, TimestampMillisecond, TimestampMicrosecond, TimestampNanosecond,\n    Union, DenseUnion, SparseUnion,\n} from '../type';\n\n/** @ignore */\nexport interface TypeComparator extends Visitor {\n    visit<T extends DataType>(type: T, other?: DataType | null): other is T;\n    visitMany<T extends DataType>(nodes: T[], others?: DataType[] | null): boolean[];\n    getVisitFn<T extends DataType>(node: VectorType<T> |  Data<T> | T): (other?: DataType | null) => other is T;\n    visitNull                 <T extends Null>                 (type: T, other?: DataType | null): other is T;\n    visitBool                 <T extends Bool>                 (type: T, other?: DataType | null): other is T;\n    visitInt                  <T extends Int>                  (type: T, other?: DataType | null): other is T;\n    visitInt8                 <T extends Int8>                 (type: T, other?: DataType | null): other is T;\n    visitInt16                <T extends Int16>                (type: T, other?: DataType | null): other is T;\n    visitInt32                <T extends Int32>                (type: T, other?: DataType | null): other is T;\n    visitInt64                <T extends Int64>                (type: T, other?: DataType | null): other is T;\n    visitUint8                <T extends Uint8>                (type: T, other?: DataType | null): other is T;\n    visitUint16               <T extends Uint16>               (type: T, other?: DataType | null): other is T;\n    visitUint32               <T extends Uint32>               (type: T, other?: DataType | null): other is T;\n    visitUint64               <T extends Uint64>               (type: T, other?: DataType | null): other is T;\n    visitFloat                <T extends Float>                (type: T, other?: DataType | null): other is T;\n    visitFloat16              <T extends Float16>              (type: T, other?: DataType | null): other is T;\n    visitFloat32              <T extends Float32>              (type: T, other?: DataType | null): other is T;\n    visitFloat64              <T extends Float64>              (type: T, other?: DataType | null): other is T;\n    visitUtf8                 <T extends Utf8>                 (type: T, other?: DataType | null): other is T;\n    visitBinary               <T extends Binary>               (type: T, other?: DataType | null): other is T;\n    visitFixedSizeBinary      <T extends FixedSizeBinary>      (type: T, other?: DataType | null): other is T;\n    visitDate                 <T extends Date_>                (type: T, other?: DataType | null): other is T;\n    visitDateDay              <T extends DateDay>              (type: T, other?: DataType | null): other is T;\n    visitDateMillisecond      <T extends DateMillisecond>      (type: T, other?: DataType | null): other is T;\n    visitTimestamp            <T extends Timestamp>            (type: T, other?: DataType | null): other is T;\n    visitTimestampSecond      <T extends TimestampSecond>      (type: T, other?: DataType | null): other is T;\n    visitTimestampMillisecond <T extends TimestampMillisecond> (type: T, other?: DataType | null): other is T;\n    visitTimestampMicrosecond <T extends TimestampMicrosecond> (type: T, other?: DataType | null): other is T;\n    visitTimestampNanosecond  <T extends TimestampNanosecond>  (type: T, other?: DataType | null): other is T;\n    visitTime                 <T extends Time>                 (type: T, other?: DataType | null): other is T;\n    visitTimeSecond           <T extends TimeSecond>           (type: T, other?: DataType | null): other is T;\n    visitTimeMillisecond      <T extends TimeMillisecond>      (type: T, other?: DataType | null): other is T;\n    visitTimeMicrosecond      <T extends TimeMicrosecond>      (type: T, other?: DataType | null): other is T;\n    visitTimeNanosecond       <T extends TimeNanosecond>       (type: T, other?: DataType | null): other is T;\n    visitDecimal              <T extends Decimal>              (type: T, other?: DataType | null): other is T;\n    visitList                 <T extends List>                 (type: T, other?: DataType | null): other is T;\n    visitStruct               <T extends Struct>               (type: T, other?: DataType | null): other is T;\n    visitUnion                <T extends Union>                (type: T, other?: DataType | null): other is T;\n    visitDenseUnion           <T extends DenseUnion>           (type: T, other?: DataType | null): other is T;\n    visitSparseUnion          <T extends SparseUnion>          (type: T, other?: DataType | null): other is T;\n    visitDictionary           <T extends Dictionary>           (type: T, other?: DataType | null): other is T;\n    visitInterval             <T extends Interval>             (type: T, other?: DataType | null): other is T;\n    visitIntervalDayTime      <T extends IntervalDayTime>      (type: T, other?: DataType | null): other is T;\n    visitIntervalYearMonth    <T extends IntervalYearMonth>    (type: T, other?: DataType | null): other is T;\n    visitFixedSizeList        <T extends FixedSizeList>        (type: T, other?: DataType | null): other is T;\n    visitMap                  <T extends Map_>                 (type: T, other?: DataType | null): other is T;\n}\n\n/** @ignore */\nexport class TypeComparator extends Visitor {\n    compareSchemas<T extends { [key: string]: DataType }>(schema: Schema<T>, other?: Schema | null): other is Schema<T> {\n        return (schema === other) || (\n            other instanceof schema.constructor &&\n            instance.compareFields(schema.fields, other.fields)\n        );\n    }\n    compareFields<T extends { [key: string]: DataType }>(fields: Field<T[keyof T]>[], others?: Field[] | null): others is Field<T[keyof T]>[] {\n        return (fields === others) || (\n            Array.isArray(fields) &&\n            Array.isArray(others) &&\n            fields.length === others.length &&\n            fields.every((f, i) => instance.compareField(f, others[i]))\n        );\n    }\n    compareField<T extends DataType = any>(field: Field<T>, other?: Field | null): other is Field<T> {\n        return (field === other) || (\n            other instanceof field.constructor &&\n            field.name === other.name &&\n            field.nullable === other.nullable &&\n            instance.visit(field.type, other.type)\n        );\n    }\n}\n\nfunction compareConstructor<T extends DataType>(type: T, other?: DataType | null): other is T {\n    return other instanceof type.constructor;\n}\n\nfunction compareAny<T extends DataType>(type: T, other?: DataType | null): other is T {\n    return (type === other) || compareConstructor(type, other);\n}\n\nfunction compareInt<T extends Int>(type: T, other?: DataType | null): other is T {\n    return (type === other) || (\n        compareConstructor(type, other) &&\n        type.bitWidth === other.bitWidth &&\n        type.isSigned === other.isSigned\n    );\n}\n\nfunction compareFloat<T extends Float>(type: T, other?: DataType | null): other is T {\n    return (type === other) || (\n        compareConstructor(type, other) &&\n        type.precision === other.precision\n    );\n}\n\nfunction compareFixedSizeBinary<T extends FixedSizeBinary>(type: T, other?: DataType | null): other is T {\n    return (type === other) || (\n        compareConstructor(type, other) &&\n        type.byteWidth === other.byteWidth\n    );\n}\n\nfunction compareDate<T extends Date_>(type: T, other?: DataType | null): other is T {\n    return (type === other) || (\n        compareConstructor(type, other) &&\n        type.unit === other.unit\n    );\n}\n\nfunction compareTimestamp<T extends Timestamp>(type: T, other?: DataType | null): other is T {\n    return (type === other) || (\n        compareConstructor(type, other) &&\n        type.unit === other.unit &&\n        type.timezone === other.timezone\n    );\n}\n\nfunction compareTime<T extends Time>(type: T, other?: DataType | null): other is T {\n    return (type === other) || (\n        compareConstructor(type, other) &&\n        type.unit === other.unit &&\n        type.bitWidth === other.bitWidth\n    );\n}\n\nfunction compareList<T extends List>(type: T, other?: DataType | null): other is T {\n    return (type === other) || (\n        compareConstructor(type, other) &&\n        type.children.length === other.children.length &&\n        instance.compareFields(type.children, other.children)\n    );\n}\n\nfunction compareStruct<T extends Struct>(type: T, other?: DataType | null): other is T {\n    return (type === other) || (\n        compareConstructor(type, other) &&\n        type.children.length === other.children.length &&\n        instance.compareFields(type.children, other.children)\n    );\n}\n\nfunction compareUnion<T extends Union>(type: T, other?: DataType | null): other is T {\n    return (type === other) || (\n        compareConstructor(type, other) &&\n        type.mode === other.mode &&\n        type.typeIds.every((x, i) => x === other.typeIds[i]) &&\n        instance.compareFields(type.children, other.children)\n    );\n}\n\nfunction compareDictionary<T extends Dictionary>(type: T, other?: DataType | null): other is T {\n    return (type === other) || (\n        compareConstructor(type, other) &&\n        type.id === other.id &&\n        type.isOrdered === other.isOrdered &&\n        instance.visit(<any> type.indices, other.indices) &&\n        instance.visit(type.dictionary, other.dictionary)\n    );\n}\n\nfunction compareInterval<T extends Interval>(type: T, other?: DataType | null): other is T {\n    return (type === other) || (\n        compareConstructor(type, other) &&\n        type.unit === other.unit\n    );\n}\n\nfunction compareFixedSizeList<T extends FixedSizeList>(type: T, other?: DataType | null): other is T {\n    return (type === other) || (\n        compareConstructor(type, other) &&\n        type.listSize === other.listSize &&\n        type.children.length === other.children.length &&\n        instance.compareFields(type.children, other.children)\n    );\n}\n\nfunction compareMap<T extends Map_>(type: T, other?: DataType | null): other is T {\n    return (type === other) || (\n        compareConstructor(type, other) &&\n        type.keysSorted === other.keysSorted &&\n        type.children.length === other.children.length &&\n        instance.compareFields(type.children, other.children)\n    );\n}\n\nTypeComparator.prototype.visitNull                 =             compareAny;\nTypeComparator.prototype.visitBool                 =             compareAny;\nTypeComparator.prototype.visitInt                  =             compareInt;\nTypeComparator.prototype.visitInt8                 =             compareInt;\nTypeComparator.prototype.visitInt16                =             compareInt;\nTypeComparator.prototype.visitInt32                =             compareInt;\nTypeComparator.prototype.visitInt64                =             compareInt;\nTypeComparator.prototype.visitUint8                =             compareInt;\nTypeComparator.prototype.visitUint16               =             compareInt;\nTypeComparator.prototype.visitUint32               =             compareInt;\nTypeComparator.prototype.visitUint64               =             compareInt;\nTypeComparator.prototype.visitFloat                =           compareFloat;\nTypeComparator.prototype.visitFloat16              =           compareFloat;\nTypeComparator.prototype.visitFloat32              =           compareFloat;\nTypeComparator.prototype.visitFloat64              =           compareFloat;\nTypeComparator.prototype.visitUtf8                 =             compareAny;\nTypeComparator.prototype.visitBinary               =             compareAny;\nTypeComparator.prototype.visitFixedSizeBinary      = compareFixedSizeBinary;\nTypeComparator.prototype.visitDate                 =            compareDate;\nTypeComparator.prototype.visitDateDay              =            compareDate;\nTypeComparator.prototype.visitDateMillisecond      =            compareDate;\nTypeComparator.prototype.visitTimestamp            =       compareTimestamp;\nTypeComparator.prototype.visitTimestampSecond      =       compareTimestamp;\nTypeComparator.prototype.visitTimestampMillisecond =       compareTimestamp;\nTypeComparator.prototype.visitTimestampMicrosecond =       compareTimestamp;\nTypeComparator.prototype.visitTimestampNanosecond  =       compareTimestamp;\nTypeComparator.prototype.visitTime                 =            compareTime;\nTypeComparator.prototype.visitTimeSecond           =            compareTime;\nTypeComparator.prototype.visitTimeMillisecond      =            compareTime;\nTypeComparator.prototype.visitTimeMicrosecond      =            compareTime;\nTypeComparator.prototype.visitTimeNanosecond       =            compareTime;\nTypeComparator.prototype.visitDecimal              =             compareAny;\nTypeComparator.prototype.visitList                 =            compareList;\nTypeComparator.prototype.visitStruct               =          compareStruct;\nTypeComparator.prototype.visitUnion                =           compareUnion;\nTypeComparator.prototype.visitDenseUnion           =           compareUnion;\nTypeComparator.prototype.visitSparseUnion          =           compareUnion;\nTypeComparator.prototype.visitDictionary           =      compareDictionary;\nTypeComparator.prototype.visitInterval             =        compareInterval;\nTypeComparator.prototype.visitIntervalDayTime      =        compareInterval;\nTypeComparator.prototype.visitIntervalYearMonth    =        compareInterval;\nTypeComparator.prototype.visitFixedSizeList        =   compareFixedSizeList;\nTypeComparator.prototype.visitMap                  =             compareMap;\n\n/** @ignore */\nexport const instance = new TypeComparator();\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\n/* tslint:disable:class-name */\n\nimport { Field } from './schema';\nimport { flatbuffers } from 'flatbuffers';\nimport { TypedArrayConstructor } from './interfaces';\nimport { VectorType as V, TypeToDataType } from './interfaces';\nimport { instance as comparer } from './visitor/typecomparator';\n\nimport Long = flatbuffers.Long;\nimport {\n    Type,\n    Precision, UnionMode,\n    DateUnit, TimeUnit, IntervalUnit\n} from './enum';\n\n/** @ignore */\nexport type TimeBitWidth = 32 | 64;\n/** @ignore */\nexport type IntBitWidth = 8 | 16 | 32 | 64;\n/** @ignore */\nexport type IsSigned = { 'true': true; 'false': false };\n/** @ignore */\nexport type RowLike<T extends { [key: string]: DataType }> =\n      ( Iterable<[string, T[keyof T]['TValue'] | null]> )\n    & { [P in keyof T]: T[P]['TValue'] | null }\n    & { get<K extends keyof T>(key: K): T[K]['TValue'] | null; }\n    & { set<K extends keyof T>(key: K, val: T[K]['TValue'] | null): void; }\n    ;\n\n/** @ignore */\nexport type MapLike<K extends DataType = any, V extends DataType = any> =\n      { [P in K['TValue']]: V['TValue'] | null }\n    & ( Map<K['TValue'], V['TValue'] | null> )\n    ;\n\nexport interface DataType<TType extends Type = Type, TChildren extends { [key: string]: DataType } = any> {\n    readonly TType: TType;\n    readonly TArray: any;\n    readonly TValue: any;\n    readonly ArrayType: any;\n    readonly children: Field<TChildren[keyof TChildren]>[];\n}\n\n/**\n * An abstract base class for classes that encapsulate metadata about each of\n * the logical types that Arrow can represent.\n */\nexport abstract class DataType<TType extends Type = Type, TChildren extends { [key: string]: DataType } = any> {\n\n    // @ts-ignore\n    public [Symbol.toStringTag]: string;\n\n    /** @nocollapse */ static            isNull (x: any): x is Null            { return x && x.typeId === Type.Null;            }\n    /** @nocollapse */ static             isInt (x: any): x is Int_            { return x && x.typeId === Type.Int;             }\n    /** @nocollapse */ static           isFloat (x: any): x is Float           { return x && x.typeId === Type.Float;           }\n    /** @nocollapse */ static          isBinary (x: any): x is Binary          { return x && x.typeId === Type.Binary;          }\n    /** @nocollapse */ static            isUtf8 (x: any): x is Utf8            { return x && x.typeId === Type.Utf8;            }\n    /** @nocollapse */ static            isBool (x: any): x is Bool            { return x && x.typeId === Type.Bool;            }\n    /** @nocollapse */ static         isDecimal (x: any): x is Decimal         { return x && x.typeId === Type.Decimal;         }\n    /** @nocollapse */ static            isDate (x: any): x is Date_           { return x && x.typeId === Type.Date;            }\n    /** @nocollapse */ static            isTime (x: any): x is Time_           { return x && x.typeId === Type.Time;            }\n    /** @nocollapse */ static       isTimestamp (x: any): x is Timestamp_      { return x && x.typeId === Type.Timestamp;       }\n    /** @nocollapse */ static        isInterval (x: any): x is Interval_       { return x && x.typeId === Type.Interval;        }\n    /** @nocollapse */ static            isList (x: any): x is List            { return x && x.typeId === Type.List;            }\n    /** @nocollapse */ static          isStruct (x: any): x is Struct          { return x && x.typeId === Type.Struct;          }\n    /** @nocollapse */ static           isUnion (x: any): x is Union_          { return x && x.typeId === Type.Union;           }\n    /** @nocollapse */ static isFixedSizeBinary (x: any): x is FixedSizeBinary { return x && x.typeId === Type.FixedSizeBinary; }\n    /** @nocollapse */ static   isFixedSizeList (x: any): x is FixedSizeList   { return x && x.typeId === Type.FixedSizeList;   }\n    /** @nocollapse */ static             isMap (x: any): x is Map_            { return x && x.typeId === Type.Map;             }\n    /** @nocollapse */ static      isDictionary (x: any): x is Dictionary      { return x && x.typeId === Type.Dictionary;      }\n\n    public get typeId(): TType { return <any> Type.NONE; }\n    public compareTo(other: DataType): other is TypeToDataType<TType> {\n        return comparer.visit(this, other);\n    }\n\n    protected static [Symbol.toStringTag] = ((proto: DataType) => {\n        (<any> proto).children = null;\n        (<any> proto).ArrayType = Array;\n        return proto[Symbol.toStringTag] = 'DataType';\n    })(DataType.prototype);\n}\n\n/** @ignore */\nexport interface Null extends DataType<Type.Null> { TArray: void; TValue: null; }\n/** @ignore */\nexport class Null extends DataType<Type.Null> {\n    public toString() { return `Null`; }\n    public get typeId() { return Type.Null as Type.Null; }\n    protected static [Symbol.toStringTag] = ((proto: Null) => {\n        return proto[Symbol.toStringTag] = 'Null';\n    })(Null.prototype);\n}\n\n/** @ignore */\ntype Ints = Type.Int | Type.Int8 | Type.Int16 | Type.Int32 | Type.Int64 | Type.Uint8 | Type.Uint16 | Type.Uint32 | Type.Uint64;\n/** @ignore */\ntype IType = {\n    [Type.Int   ]: { bitWidth: IntBitWidth; isSigned: true | false; TArray: IntArray;    TValue: number | bigint | Int32Array | Uint32Array; };\n    [Type.Int8  ]: { bitWidth:           8; isSigned: true;         TArray: Int8Array;   TValue: number; };\n    [Type.Int16 ]: { bitWidth:          16; isSigned: true;         TArray: Int16Array;  TValue: number; };\n    [Type.Int32 ]: { bitWidth:          32; isSigned: true;         TArray: Int32Array;  TValue: number; };\n    [Type.Int64 ]: { bitWidth:          64; isSigned: true;         TArray: Int32Array;  TValue: bigint | Int32Array | Uint32Array; };\n    [Type.Uint8 ]: { bitWidth:           8; isSigned: false;        TArray: Uint8Array;  TValue: number; };\n    [Type.Uint16]: { bitWidth:          16; isSigned: false;        TArray: Uint16Array; TValue: number; };\n    [Type.Uint32]: { bitWidth:          32; isSigned: false;        TArray: Uint32Array; TValue: number; };\n    [Type.Uint64]: { bitWidth:          64; isSigned: false;        TArray: Uint32Array; TValue: bigint | Int32Array | Uint32Array; };\n};\n\n/** @ignore */\ninterface Int_<T extends Ints = Ints> extends DataType<T> { TArray: IType[T]['TArray']; TValue: IType[T]['TValue']; }\n/** @ignore */\nclass Int_<T extends Ints = Ints> extends DataType<T> {\n    constructor(public readonly isSigned: IType[T]['isSigned'],\n                public readonly bitWidth: IType[T]['bitWidth']) {\n        super();\n    }\n    public get typeId() { return Type.Int as T; }\n    public get ArrayType(): TypedArrayConstructor<IType[T]['TArray']> {\n        switch (this.bitWidth) {\n            case  8: return this.isSigned ?  Int8Array :  Uint8Array;\n            case 16: return this.isSigned ? Int16Array : Uint16Array;\n            case 32: return this.isSigned ? Int32Array : Uint32Array;\n            case 64: return this.isSigned ? Int32Array : Uint32Array;\n        }\n        throw new Error(`Unrecognized ${this[Symbol.toStringTag]} type`);\n    }\n    public toString() { return `${this.isSigned ? `I` : `Ui`}nt${this.bitWidth}`; }\n    protected static [Symbol.toStringTag] = ((proto: Int_) => {\n        (<any> proto).isSigned = null;\n        (<any> proto).bitWidth = null;\n        return proto[Symbol.toStringTag] = 'Int';\n    })(Int_.prototype);\n}\n\nexport { Int_ as Int };\n\n/** @ignore */\nexport class Int8 extends Int_<Type.Int8> { constructor() { super(true, 8); } }\n/** @ignore */\nexport class Int16 extends Int_<Type.Int16> { constructor() { super(true, 16); } }\n/** @ignore */\nexport class Int32 extends Int_<Type.Int32> { constructor() { super(true, 32); } }\n/** @ignore */\nexport class Int64 extends Int_<Type.Int64> { constructor() { super(true, 64); } }\n/** @ignore */\nexport class Uint8 extends Int_<Type.Uint8> { constructor() { super(false, 8); } }\n/** @ignore */\nexport class Uint16 extends Int_<Type.Uint16> { constructor() { super(false, 16); } }\n/** @ignore */\nexport class Uint32 extends Int_<Type.Uint32> { constructor() { super(false, 32); } }\n/** @ignore */\nexport class Uint64 extends Int_<Type.Uint64> { constructor() { super(false, 64); } }\n\nObject.defineProperty(Int8.prototype, 'ArrayType', { value: Int8Array });\nObject.defineProperty(Int16.prototype, 'ArrayType', { value: Int16Array });\nObject.defineProperty(Int32.prototype, 'ArrayType', { value: Int32Array });\nObject.defineProperty(Int64.prototype, 'ArrayType', { value: Int32Array });\nObject.defineProperty(Uint8.prototype, 'ArrayType', { value: Uint8Array });\nObject.defineProperty(Uint16.prototype, 'ArrayType', { value: Uint16Array });\nObject.defineProperty(Uint32.prototype, 'ArrayType', { value: Uint32Array });\nObject.defineProperty(Uint64.prototype, 'ArrayType', { value: Uint32Array });\n\n/** @ignore */\ntype Floats = Type.Float | Type.Float16 | Type.Float32 | Type.Float64;\n/** @ignore */\ntype FType = {\n    [Type.Float  ]: { precision: Precision;        TArray: FloatArray;    TValue: number; };\n    [Type.Float16]: { precision: Precision.HALF;   TArray: Uint16Array;   TValue: number; };\n    [Type.Float32]: { precision: Precision.SINGLE; TArray: Float32Array;  TValue: number; };\n    [Type.Float64]: { precision: Precision.DOUBLE; TArray: Float64Array;  TValue: number; };\n};\n\n/** @ignore */\nexport interface Float<T extends Floats = Floats> extends DataType<T> { TArray: FType[T]['TArray']; TValue: number; }\n/** @ignore */\nexport class Float<T extends Floats = Floats> extends DataType<T> {\n    constructor(public readonly precision: Precision) {\n        super();\n    }\n    public get typeId() { return Type.Float as T; }\n    public get ArrayType(): TypedArrayConstructor<FType[T]['TArray']> {\n        switch (this.precision) {\n            case Precision.HALF: return Uint16Array;\n            case Precision.SINGLE: return Float32Array;\n            case Precision.DOUBLE: return Float64Array;\n        }\n        throw new Error(`Unrecognized ${this[Symbol.toStringTag]} type`);\n    }\n    public toString() { return `Float${(this.precision << 5) || 16}`; }\n    protected static [Symbol.toStringTag] = ((proto: Float) => {\n        (<any> proto).precision = null;\n        return proto[Symbol.toStringTag] = 'Float';\n    })(Float.prototype);\n}\n\n/** @ignore */\nexport class Float16 extends Float<Type.Float16> { constructor() { super(Precision.HALF); } }\n/** @ignore */\nexport class Float32 extends Float<Type.Float32> { constructor() { super(Precision.SINGLE); } }\n/** @ignore */\nexport class Float64 extends Float<Type.Float64> { constructor() { super(Precision.DOUBLE); } }\n\nObject.defineProperty(Float16.prototype, 'ArrayType', { value: Uint16Array });\nObject.defineProperty(Float32.prototype, 'ArrayType', { value: Float32Array });\nObject.defineProperty(Float64.prototype, 'ArrayType', { value: Float64Array });\n\n/** @ignore */\nexport interface Binary extends DataType<Type.Binary> { TArray: Uint8Array; TValue: Uint8Array; ArrayType: TypedArrayConstructor<Uint8Array>; }\n/** @ignore */\nexport class Binary extends DataType<Type.Binary> {\n    constructor() {\n        super();\n    }\n    public get typeId() { return Type.Binary as Type.Binary; }\n    public toString() { return `Binary`; }\n    protected static [Symbol.toStringTag] = ((proto: Binary) => {\n        (<any> proto).ArrayType = Uint8Array;\n        return proto[Symbol.toStringTag] = 'Binary';\n    })(Binary.prototype);\n}\n\n/** @ignore */\nexport interface Utf8 extends DataType<Type.Utf8> { TArray: Uint8Array; TValue: string; ArrayType: TypedArrayConstructor<Uint8Array>; }\n/** @ignore */\nexport class Utf8 extends DataType<Type.Utf8> {\n    constructor() {\n        super();\n    }\n    public get typeId() { return Type.Utf8 as Type.Utf8; }\n    public toString() { return `Utf8`; }\n    protected static [Symbol.toStringTag] = ((proto: Utf8) => {\n        (<any> proto).ArrayType = Uint8Array;\n        return proto[Symbol.toStringTag] = 'Utf8';\n    })(Utf8.prototype);\n}\n\n/** @ignore */\nexport interface Bool extends DataType<Type.Bool> { TArray: Uint8Array; TValue: boolean; ArrayType: TypedArrayConstructor<Uint8Array>; }\n/** @ignore */\nexport class Bool extends DataType<Type.Bool> {\n    constructor() {\n        super();\n    }\n    public get typeId() { return Type.Bool as Type.Bool; }\n    public toString() { return `Bool`; }\n    protected static [Symbol.toStringTag] = ((proto: Bool) => {\n        (<any> proto).ArrayType = Uint8Array;\n        return proto[Symbol.toStringTag] = 'Bool';\n    })(Bool.prototype);\n}\n\n/** @ignore */\nexport interface Decimal extends DataType<Type.Decimal> { TArray: Uint32Array; TValue: Uint32Array; ArrayType: TypedArrayConstructor<Uint32Array>; }\n/** @ignore */\nexport class Decimal extends DataType<Type.Decimal> {\n    constructor(public readonly scale: number,\n                public readonly precision: number) {\n        super();\n    }\n    public get typeId() { return Type.Decimal as Type.Decimal; }\n    public toString() { return `Decimal[${this.precision}e${this.scale > 0 ? `+` : ``}${this.scale}]`; }\n    protected static [Symbol.toStringTag] = ((proto: Decimal) => {\n        (<any> proto).scale = null;\n        (<any> proto).precision = null;\n        (<any> proto).ArrayType = Uint32Array;\n        return proto[Symbol.toStringTag] = 'Decimal';\n    })(Decimal.prototype);\n}\n\n/** @ignore */\nexport type Dates = Type.Date | Type.DateDay | Type.DateMillisecond;\n/** @ignore */\nexport interface Date_<T extends Dates = Dates> extends DataType<T> { TArray: Int32Array; TValue: Date; ArrayType: TypedArrayConstructor<Int32Array>; }\n/** @ignore */\nexport class Date_<T extends Dates = Dates> extends DataType<T> {\n    constructor(public readonly unit: DateUnit) {\n        super();\n    }\n    public get typeId() { return Type.Date as T; }\n    public toString() { return `Date${(this.unit + 1) * 32}<${DateUnit[this.unit]}>`; }\n    protected static [Symbol.toStringTag] = ((proto: Date_) => {\n        (<any> proto).unit = null;\n        (<any> proto).ArrayType = Int32Array;\n        return proto[Symbol.toStringTag] = 'Date';\n    })(Date_.prototype);\n}\n\n/** @ignore */\nexport class DateDay extends Date_<Type.DateDay> { constructor() { super(DateUnit.DAY); } }\n/** @ignore */\nexport class DateMillisecond extends Date_<Type.DateMillisecond> { constructor() { super(DateUnit.MILLISECOND); } }\n\n/** @ignore */\ntype Times = Type.Time | Type.TimeSecond | Type.TimeMillisecond | Type.TimeMicrosecond | Type.TimeNanosecond;\n/** @ignore */\ntype TimesType = {\n    [Type.Time           ]: { unit: TimeUnit;             TValue: number | Int32Array };\n    [Type.TimeSecond     ]: { unit: TimeUnit.SECOND;      TValue: number;             };\n    [Type.TimeMillisecond]: { unit: TimeUnit.MILLISECOND; TValue: number;             };\n    [Type.TimeMicrosecond]: { unit: TimeUnit.MICROSECOND; TValue: Int32Array;         };\n    [Type.TimeNanosecond ]: { unit: TimeUnit.NANOSECOND;  TValue: Int32Array;         };\n};\n\n/** @ignore */\ninterface Time_<T extends Times = Times> extends DataType<T> { TArray: Int32Array; TValue: TimesType[T]['TValue']; ArrayType: TypedArrayConstructor<Int32Array>; }\n/** @ignore */\nclass Time_<T extends Times = Times> extends DataType<T> {\n    constructor(public readonly unit: TimesType[T]['unit'],\n                public readonly bitWidth: TimeBitWidth) {\n        super();\n    }\n    public get typeId() { return Type.Time as T; }\n    public toString() { return `Time${this.bitWidth}<${TimeUnit[this.unit]}>`; }\n    protected static [Symbol.toStringTag] = ((proto: Time_) => {\n        (<any> proto).unit = null;\n        (<any> proto).bitWidth = null;\n        (<any> proto).ArrayType = Int32Array;\n        return proto[Symbol.toStringTag] = 'Time';\n    })(Time_.prototype);\n}\n\nexport { Time_ as Time };\n\n/** @ignore */\nexport class TimeSecond extends Time_<Type.TimeSecond> { constructor() { super(TimeUnit.SECOND, 32); } }\n/** @ignore */\nexport class TimeMillisecond extends Time_<Type.TimeMillisecond> { constructor() { super(TimeUnit.MILLISECOND, 32); } }\n/** @ignore */\nexport class TimeMicrosecond extends Time_<Type.TimeMicrosecond> { constructor() { super(TimeUnit.MICROSECOND, 64); } }\n/** @ignore */\nexport class TimeNanosecond extends Time_<Type.TimeNanosecond> { constructor() { super(TimeUnit.NANOSECOND, 64); } }\n\n/** @ignore */\ntype Timestamps = Type.Timestamp | Type.TimestampSecond | Type.TimestampMillisecond | Type.TimestampMicrosecond | Type.TimestampNanosecond;\n/** @ignore */\ninterface Timestamp_<T extends Timestamps = Timestamps> extends DataType<T> { TArray: Int32Array; TValue: number; ArrayType: TypedArrayConstructor<Int32Array>; }\n/** @ignore */\nclass Timestamp_<T extends Timestamps = Timestamps> extends DataType<T> {\n    constructor(public readonly unit: TimeUnit,\n                public readonly timezone?: string | null) {\n        super();\n    }\n    public get typeId() { return Type.Timestamp as T; }\n    public toString() { return `Timestamp<${TimeUnit[this.unit]}${this.timezone ? `, ${this.timezone}` : ``}>`; }\n    protected static [Symbol.toStringTag] = ((proto: Timestamp_) => {\n        (<any> proto).unit = null;\n        (<any> proto).timezone = null;\n        (<any> proto).ArrayType = Int32Array;\n        return proto[Symbol.toStringTag] = 'Timestamp';\n    })(Timestamp_.prototype);\n}\n\nexport { Timestamp_ as Timestamp };\n\n/** @ignore */\nexport class TimestampSecond extends Timestamp_<Type.TimestampSecond> { constructor(timezone?: string | null) { super(TimeUnit.SECOND, timezone); } }\n/** @ignore */\nexport class TimestampMillisecond extends Timestamp_<Type.TimestampMillisecond> { constructor(timezone?: string | null) { super(TimeUnit.MILLISECOND, timezone); } }\n/** @ignore */\nexport class TimestampMicrosecond extends Timestamp_<Type.TimestampMicrosecond> { constructor(timezone?: string | null) { super(TimeUnit.MICROSECOND, timezone); } }\n/** @ignore */\nexport class TimestampNanosecond extends Timestamp_<Type.TimestampNanosecond> { constructor(timezone?: string | null) { super(TimeUnit.NANOSECOND, timezone); } }\n\n/** @ignore */\ntype Intervals = Type.Interval | Type.IntervalDayTime | Type.IntervalYearMonth;\n/** @ignore */\ninterface Interval_<T extends Intervals = Intervals> extends DataType<T> { TArray: Int32Array; TValue: Int32Array; ArrayType: TypedArrayConstructor<Int32Array>; }\n/** @ignore */\nclass Interval_<T extends Intervals = Intervals> extends DataType<T> {\n    constructor(public readonly unit: IntervalUnit) {\n        super();\n    }\n    public get typeId() { return Type.Interval as T; }\n    public toString() { return `Interval<${IntervalUnit[this.unit]}>`; }\n    protected static [Symbol.toStringTag] = ((proto: Interval_) => {\n        (<any> proto).unit = null;\n        (<any> proto).ArrayType = Int32Array;\n        return proto[Symbol.toStringTag] = 'Interval';\n    })(Interval_.prototype);\n}\n\nexport { Interval_ as Interval };\n\n/** @ignore */\nexport class IntervalDayTime extends Interval_<Type.IntervalDayTime> { constructor() { super(IntervalUnit.DAY_TIME); } }\n/** @ignore */\nexport class IntervalYearMonth extends Interval_<Type.IntervalYearMonth> { constructor() { super(IntervalUnit.YEAR_MONTH); } }\n\n/** @ignore */\nexport interface List<T extends DataType = any> extends DataType<Type.List, { [0]: T }>  { TArray: IterableArrayLike<T>; TValue: V<T>; }\n/** @ignore */\nexport class List<T extends DataType = any> extends DataType<Type.List, { [0]: T }> {\n    constructor(child: Field<T>) {\n        super();\n        this.children = [child];\n    }\n    public readonly children: Field<T>[];\n    public get typeId() { return Type.List as Type.List; }\n    public toString() { return `List<${this.valueType}>`; }\n    public get valueType(): T { return this.children[0].type as T; }\n    public get valueField(): Field<T> { return this.children[0] as Field<T>; }\n    public get ArrayType(): T['ArrayType'] { return this.valueType.ArrayType; }\n    protected static [Symbol.toStringTag] = ((proto: List) => {\n        (<any> proto).children = null;\n        return proto[Symbol.toStringTag] = 'List';\n    })(List.prototype);\n}\n\n/** @ignore */\nexport interface Struct<T extends { [key: string]: DataType } = any> extends DataType<Type.Struct> { TArray: IterableArrayLike<RowLike<T>>; TValue: RowLike<T>; dataTypes: T; }\n/** @ignore */\nexport class Struct<T extends { [key: string]: DataType } = any> extends DataType<Type.Struct, T> {\n    public readonly children: Field<T[keyof T]>[];\n    constructor(children: Field<T[keyof T]>[]) {\n        super();\n        this.children = children;\n    }\n    public get typeId() { return Type.Struct as Type.Struct; }\n    public toString() { return `Struct<{${this.children.map((f) => `${f.name}:${f.type}`).join(`, `)}}>`; }\n    protected static [Symbol.toStringTag] = ((proto: Struct) => {\n        (<any> proto).children = null;\n        return proto[Symbol.toStringTag] = 'Struct';\n    })(Struct.prototype);\n}\n\n/** @ignore */\ntype Unions = Type.Union | Type.DenseUnion | Type.SparseUnion;\n/** @ignore */\ninterface Union_<T extends Unions = Unions> extends DataType<T> { TArray: Int8Array; TValue: any; ArrayType: TypedArrayConstructor<Int8Array>; }\n/** @ignore */\nclass Union_<T extends Unions = Unions> extends DataType<T> {\n    public readonly mode: UnionMode;\n    public readonly typeIds: Int32Array;\n    public readonly children: Field<any>[];\n    public readonly typeIdToChildIndex: { [key: number]: number };\n    constructor(mode: UnionMode,\n                typeIds: number[] | Int32Array,\n                children: Field<any>[]) {\n        super();\n        this.mode = mode;\n        this.children = children;\n        this.typeIds = typeIds = Int32Array.from(typeIds);\n        this.typeIdToChildIndex = typeIds.reduce((typeIdToChildIndex, typeId, idx) => {\n            return (typeIdToChildIndex[typeId] = idx) && typeIdToChildIndex || typeIdToChildIndex;\n        }, Object.create(null) as { [key: number]: number });\n    }\n    public get typeId() { return Type.Union as T; }\n    public toString() { return `${this[Symbol.toStringTag]}<${\n        this.children.map((x) => `${x.type}`).join(` | `)\n    }>`; }\n    protected static [Symbol.toStringTag] = ((proto: Union_) => {\n        (<any> proto).mode = null;\n        (<any> proto).typeIds = null;\n        (<any> proto).children = null;\n        (<any> proto).typeIdToChildIndex = null;\n        (<any> proto).ArrayType = Int8Array;\n        return proto[Symbol.toStringTag] = 'Union';\n    })(Union_.prototype);\n}\n\nexport { Union_ as Union };\n\n/** @ignore */\nexport class DenseUnion extends Union_<Type.DenseUnion> {\n    constructor(typeIds: number[] | Int32Array, children: Field[]) {\n        super(UnionMode.Dense, typeIds, children);\n    }\n}\n\n/** @ignore */\nexport class SparseUnion extends Union_<Type.SparseUnion> {\n    constructor(typeIds: number[] | Int32Array, children: Field[]) {\n        super(UnionMode.Sparse, typeIds, children);\n    }\n}\n\n/** @ignore */\nexport interface FixedSizeBinary extends DataType<Type.FixedSizeBinary> { TArray: Uint8Array; TValue: Uint8Array; ArrayType: TypedArrayConstructor<Uint8Array>; }\n/** @ignore */\nexport class FixedSizeBinary extends DataType<Type.FixedSizeBinary> {\n    constructor(public readonly byteWidth: number) {\n        super();\n    }\n    public get typeId() { return Type.FixedSizeBinary as Type.FixedSizeBinary; }\n    public toString() { return `FixedSizeBinary[${this.byteWidth}]`; }\n    protected static [Symbol.toStringTag] = ((proto: FixedSizeBinary) => {\n        (<any> proto).byteWidth = null;\n        (<any> proto).ArrayType = Uint8Array;\n        return proto[Symbol.toStringTag] = 'FixedSizeBinary';\n    })(FixedSizeBinary.prototype);\n}\n\n/** @ignore */\nexport interface FixedSizeList<T extends DataType = any> extends DataType<Type.FixedSizeList> { TArray: IterableArrayLike<T['TArray']>; TValue: V<T>; }\n/** @ignore */\nexport class FixedSizeList<T extends DataType = any> extends DataType<Type.FixedSizeList, { [0]: T }> {\n    public readonly children: Field<T>[];\n    constructor(public readonly listSize: number, child: Field<T>) {\n        super();\n        this.children = [child];\n    }\n    public get typeId() { return Type.FixedSizeList as Type.FixedSizeList; }\n    public get valueType(): T { return this.children[0].type as T; }\n    public get valueField(): Field<T> { return this.children[0] as Field<T>; }\n    public get ArrayType(): T['ArrayType'] { return this.valueType.ArrayType; }\n    public toString() { return `FixedSizeList[${this.listSize}]<${this.valueType}>`; }\n    protected static [Symbol.toStringTag] = ((proto: FixedSizeList) => {\n        (<any> proto).children = null;\n        (<any> proto).listSize = null;\n        return proto[Symbol.toStringTag] = 'FixedSizeList';\n    })(FixedSizeList.prototype);\n}\n\n/** @ignore */\nexport interface Map_<TKey extends DataType = any, TValue extends DataType = any> extends DataType<Type.Map> {\n    TArray: IterableArrayLike<Map<TKey['TValue'], TValue['TValue'] | null>>;\n    TChild: Struct<{ key: TKey, value: TValue }>;\n    TValue: MapLike<TKey, TValue>;\n}\n\n/** @ignore */\nexport class Map_<TKey extends DataType = any, TValue extends DataType = any> extends DataType<Type.Map> {\n    constructor(child: Field<Struct<{ key: TKey, value: TValue }>>, keysSorted = false) {\n        super();\n        this.children = [child];\n        this.keysSorted = keysSorted;\n    }\n    public readonly keysSorted: boolean;\n    public readonly children: Field<Struct<{ key: TKey, value: TValue }>>[];\n    public get typeId() { return Type.Map as Type.Map; }\n    public get keyType(): TKey { return this.children[0].type.children[0].type as TKey; }\n    public get valueType(): TValue { return this.children[0].type.children[1].type as TValue; }\n    public toString() { return `Map<{${this.children[0].type.children.map((f) => `${f.name}:${f.type}`).join(`, `)}}>`; }\n    protected static [Symbol.toStringTag] = ((proto: Map_) => {\n        (<any> proto).children = null;\n        (<any> proto).keysSorted = null;\n        return proto[Symbol.toStringTag] = 'Map_';\n    })(Map_.prototype);\n}\n\n/** @ignore */\nconst getId = ((atomicDictionaryId) => () => ++atomicDictionaryId)(-1);\n\n/** @ignore */\nexport type TKeys = Int8 | Int16 | Int32 | Uint8 | Uint16 | Uint32;\n\n/** @ignore */\nexport interface Dictionary<T extends DataType = any, TKey extends TKeys = TKeys> extends DataType<Type.Dictionary> { TArray: TKey['TArray']; TValue: T['TValue']; }\n/** @ignore */\nexport class Dictionary<T extends DataType = any, TKey extends TKeys = TKeys> extends DataType<Type.Dictionary> {\n    public readonly id: number;\n    public readonly indices: TKey;\n    public readonly dictionary: T;\n    public readonly isOrdered: boolean;\n    constructor(dictionary: T, indices: TKey, id?: Long | number | null, isOrdered?: boolean | null) {\n        super();\n        this.indices = indices;\n        this.dictionary = dictionary;\n        this.isOrdered = isOrdered || false;\n        this.id = id == null ? getId() : typeof id === 'number' ? id : id.low;\n    }\n    public get typeId() { return Type.Dictionary as Type.Dictionary; }\n    public get children() { return this.dictionary.children; }\n    public get valueType(): T { return this.dictionary as T; }\n    public get ArrayType(): T['ArrayType'] { return this.dictionary.ArrayType; }\n    public toString() { return `Dictionary<${this.indices}, ${this.dictionary}>`; }\n    protected static [Symbol.toStringTag] = ((proto: Dictionary) => {\n        (<any> proto).id = null;\n        (<any> proto).indices = null;\n        (<any> proto).isOrdered = null;\n        (<any> proto).dictionary = null;\n        return proto[Symbol.toStringTag] = 'Dictionary';\n    })(Dictionary.prototype);\n}\n\n/** @ignore */\nexport interface IterableArrayLike<T = any> extends ArrayLike<T>, Iterable<T> {}\n/** @ignore */\nexport type FloatArray = Uint16Array | Float32Array | Float64Array;\n/** @ignore */\nexport type IntArray = Int8Array | Int16Array | Int32Array | Uint8Array | Uint16Array | Uint32Array;\n\n/** @ignore */\nexport function strideForType(type: DataType) {\n    let t: any = type;\n    switch (type.typeId) {\n        case Type.Decimal: return 4;\n        case Type.Timestamp: return 2;\n        case Type.Date: return 1 + (t as Date_).unit;\n        case Type.Interval: return 1 + (t as Interval_).unit;\n        case Type.Int: return 1 + +((t as Int_).bitWidth > 32);\n        case Type.Time: return 1 + +((t as Time_).bitWidth > 32);\n        case Type.FixedSizeList: return (t as FixedSizeList).listSize;\n        case Type.FixedSizeBinary: return (t as FixedSizeBinary).byteWidth;\n        default: return 1;\n    }\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Vector } from './vector';\nimport { truncateBitmap } from './util/bit';\nimport { popcnt_bit_range } from './util/bit';\nimport { BufferType, UnionMode, Type } from './enum';\nimport { DataType, SparseUnion, DenseUnion, strideForType } from './type';\nimport { toArrayBufferView, toUint8Array, toInt32Array } from './util/buffer';\nimport {\n    Dictionary,\n    Null, Int, Float,\n    Binary, Bool, Utf8, Decimal,\n    Date_, Time, Timestamp, Interval,\n    List, Struct, Union, FixedSizeBinary, FixedSizeList, Map_,\n} from './type';\n\n// When slicing, we do not know the null count of the sliced range without\n// doing some computation. To avoid doing this eagerly, we set the null count\n// to -1 (any negative number will do). When Vector.nullCount is called the\n// first time, the null count will be computed. See ARROW-33\n/** @ignore */ export type kUnknownNullCount = -1;\n/** @ignore */ export const kUnknownNullCount = -1;\n\n/** @ignore */ export type NullBuffer = Uint8Array | null | undefined;\n/** @ignore */ export type TypeIdsBuffer = Int8Array  | ArrayLike<number> | Iterable<number> | undefined;\n/** @ignore */ export type ValueOffsetsBuffer = Int32Array  | ArrayLike<number> | Iterable<number> | undefined;\n/** @ignore */ export type DataBuffer<T extends DataType> = T['TArray'] | ArrayLike<number> | Iterable<number> | undefined;\n\n/** @ignore */\nexport interface Buffers<T extends DataType> {\n      [BufferType.OFFSET]: Int32Array;\n        [BufferType.DATA]: T['TArray'];\n    [BufferType.VALIDITY]: Uint8Array;\n        [BufferType.TYPE]: T['TArray'];\n}\n\n/** @ignore */\nexport interface Data<T extends DataType = DataType> {\n    readonly TType: T['TType'];\n    readonly TArray: T['TArray'];\n    readonly TValue: T['TValue'];\n}\n\n/** @ignore */\nexport class Data<T extends DataType = DataType> {\n\n    public readonly type: T;\n    public readonly length: number;\n    public readonly offset: number;\n    public readonly stride: number;\n    public readonly childData: Data[];\n\n    /**\n     * The dictionary for this Vector, if any. Only used for Dictionary type.\n     */\n    public dictionary?: Vector;\n\n    public readonly values: Buffers<T>[BufferType.DATA];\n    // @ts-ignore\n    public readonly typeIds: Buffers<T>[BufferType.TYPE];\n    // @ts-ignore\n    public readonly nullBitmap: Buffers<T>[BufferType.VALIDITY];\n    // @ts-ignore\n    public readonly valueOffsets: Buffers<T>[BufferType.OFFSET];\n\n    public get typeId(): T['TType'] { return this.type.typeId; }\n    public get ArrayType(): T['ArrayType'] { return this.type.ArrayType; }\n    public get buffers() {\n        return [this.valueOffsets, this.values, this.nullBitmap, this.typeIds] as Buffers<T>;\n    }\n    public get byteLength(): number {\n        let byteLength = 0;\n        let { valueOffsets, values, nullBitmap, typeIds } = this;\n        valueOffsets && (byteLength += valueOffsets.byteLength);\n        values       && (byteLength += values.byteLength);\n        nullBitmap   && (byteLength += nullBitmap.byteLength);\n        typeIds      && (byteLength += typeIds.byteLength);\n        return this.childData.reduce((byteLength, child) => byteLength + child.byteLength, byteLength);\n    }\n\n    protected _nullCount: number | kUnknownNullCount;\n\n    public get nullCount() {\n        let nullCount = this._nullCount;\n        let nullBitmap: Uint8Array | undefined;\n        if (nullCount <= kUnknownNullCount && (nullBitmap = this.nullBitmap)) {\n            this._nullCount = nullCount = this.length - popcnt_bit_range(nullBitmap, this.offset, this.offset + this.length);\n        }\n        return nullCount;\n    }\n\n    constructor(type: T, offset: number, length: number, nullCount?: number, buffers?: Partial<Buffers<T>> | Data<T>, childData?: (Data | Vector)[], dictionary?: Vector) {\n        this.type = type;\n        this.dictionary = dictionary;\n        this.offset = Math.floor(Math.max(offset || 0, 0));\n        this.length = Math.floor(Math.max(length || 0, 0));\n        this._nullCount = Math.floor(Math.max(nullCount || 0, -1));\n        this.childData = (childData || []).map((x) => x instanceof Data ? x : x.data) as Data[];\n        let buffer: Buffers<T>[keyof Buffers<T>];\n        if (buffers instanceof Data) {\n            this.stride = buffers.stride;\n            this.values = buffers.values;\n            this.typeIds = buffers.typeIds;\n            this.nullBitmap = buffers.nullBitmap;\n            this.valueOffsets = buffers.valueOffsets;\n        } else {\n            this.stride = strideForType(type);\n            if (buffers) {\n                (buffer = (buffers as Buffers<T>)[0]) && (this.valueOffsets = buffer);\n                (buffer = (buffers as Buffers<T>)[1]) && (this.values = buffer);\n                (buffer = (buffers as Buffers<T>)[2]) && (this.nullBitmap = buffer);\n                (buffer = (buffers as Buffers<T>)[3]) && (this.typeIds = buffer);\n            }\n        }\n    }\n\n    public clone<R extends DataType>(type: R, offset = this.offset, length = this.length, nullCount = this._nullCount, buffers: Buffers<R> = <any> this, childData: (Data | Vector)[] = this.childData) {\n        return new Data(type, offset, length, nullCount, buffers, childData, this.dictionary);\n    }\n\n    public slice(offset: number, length: number): Data<T> {\n        const { stride, typeId, childData } = this;\n        // +true === 1, +false === 0, so this means\n        // we keep nullCount at 0 if it's already 0,\n        // otherwise set to the invalidated flag -1\n        const nullCount = +(this._nullCount === 0) - 1;\n        const childStride = typeId === 16 /* FixedSizeList */ ? stride : 1;\n        const buffers = this._sliceBuffers(offset, length, stride, typeId);\n        return this.clone<T>(this.type, this.offset + offset, length, nullCount, buffers,\n            // Don't slice children if we have value offsets (the variable-width types)\n            (!childData.length || this.valueOffsets) ? childData : this._sliceChildren(childData, childStride * offset, childStride * length));\n    }\n\n    public _changeLengthAndBackfillNullBitmap(newLength: number): Data<T> {\n        if (this.typeId === Type.Null) {\n            return this.clone(this.type, 0, newLength, 0);\n        }\n        const { length, nullCount } = this;\n        // start initialized with 0s (nulls), then fill from 0 to length with 1s (not null)\n        const bitmap = new Uint8Array(((newLength + 63) & ~63) >> 3).fill(255, 0, length >> 3);\n        // set all the bits in the last byte (up to bit `length - length % 8`) to 1 (not null)\n        bitmap[length >> 3] = (1 << (length - (length & ~7))) - 1;\n        // if we have a nullBitmap, truncate + slice and set it over the pre-filled 1s\n        if (nullCount > 0) {\n            bitmap.set(truncateBitmap(this.offset, length, this.nullBitmap), 0);\n        }\n        const buffers = this.buffers;\n        buffers[BufferType.VALIDITY] = bitmap;\n        return this.clone(this.type, 0, newLength, nullCount + (newLength - length), buffers);\n    }\n\n    protected _sliceBuffers(offset: number, length: number, stride: number, typeId: T['TType']): Buffers<T> {\n        let arr: any, { buffers } = this;\n        // If typeIds exist, slice the typeIds buffer\n        (arr = buffers[BufferType.TYPE]) && (buffers[BufferType.TYPE] = arr.subarray(offset, offset + length));\n        // If offsets exist, only slice the offsets buffer\n        (arr = buffers[BufferType.OFFSET]) && (buffers[BufferType.OFFSET] = arr.subarray(offset, offset + length + 1)) ||\n        // Otherwise if no offsets, slice the data buffer. Don't slice the data vector for Booleans, since the offset goes by bits not bytes\n        (arr = buffers[BufferType.DATA]) && (buffers[BufferType.DATA] = typeId === 6 ? arr : arr.subarray(stride * offset, stride * (offset + length)));\n        return buffers;\n    }\n\n    protected _sliceChildren(childData: Data[], offset: number, length: number): Data[] {\n        return childData.map((child) => child.slice(offset, length));\n    }\n\n    //\n    // Convenience methods for creating Data instances for each of the Arrow Vector types\n    //\n    /** @nocollapse */\n    public static new<T extends DataType>(type: T, offset: number, length: number, nullCount?: number, buffers?: Partial<Buffers<T>> | Data<T>, childData?: (Data | Vector)[], dictionary?: Vector): Data<T> {\n        if (buffers instanceof Data) { buffers = buffers.buffers; } else if (!buffers) { buffers = [] as Partial<Buffers<T>>; }\n        switch (type.typeId) {\n            case Type.Null:            return <unknown> Data.Null(            <unknown> type as Null,            offset, length) as Data<T>;\n            case Type.Int:             return <unknown> Data.Int(             <unknown> type as Int,             offset, length, nullCount || 0, buffers[BufferType.VALIDITY], buffers[BufferType.DATA] || []) as Data<T>;\n            case Type.Dictionary:      return <unknown> Data.Dictionary(      <unknown> type as Dictionary,      offset, length, nullCount || 0, buffers[BufferType.VALIDITY], buffers[BufferType.DATA] || [], dictionary!) as Data<T>;\n            case Type.Float:           return <unknown> Data.Float(           <unknown> type as Float,           offset, length, nullCount || 0, buffers[BufferType.VALIDITY], buffers[BufferType.DATA] || []) as Data<T>;\n            case Type.Bool:            return <unknown> Data.Bool(            <unknown> type as Bool,            offset, length, nullCount || 0, buffers[BufferType.VALIDITY], buffers[BufferType.DATA] || []) as Data<T>;\n            case Type.Decimal:         return <unknown> Data.Decimal(         <unknown> type as Decimal,         offset, length, nullCount || 0, buffers[BufferType.VALIDITY], buffers[BufferType.DATA] || []) as Data<T>;\n            case Type.Date:            return <unknown> Data.Date(            <unknown> type as Date_,           offset, length, nullCount || 0, buffers[BufferType.VALIDITY], buffers[BufferType.DATA] || []) as Data<T>;\n            case Type.Time:            return <unknown> Data.Time(            <unknown> type as Time,            offset, length, nullCount || 0, buffers[BufferType.VALIDITY], buffers[BufferType.DATA] || []) as Data<T>;\n            case Type.Timestamp:       return <unknown> Data.Timestamp(       <unknown> type as Timestamp,       offset, length, nullCount || 0, buffers[BufferType.VALIDITY], buffers[BufferType.DATA] || []) as Data<T>;\n            case Type.Interval:        return <unknown> Data.Interval(        <unknown> type as Interval,        offset, length, nullCount || 0, buffers[BufferType.VALIDITY], buffers[BufferType.DATA] || []) as Data<T>;\n            case Type.FixedSizeBinary: return <unknown> Data.FixedSizeBinary( <unknown> type as FixedSizeBinary, offset, length, nullCount || 0, buffers[BufferType.VALIDITY], buffers[BufferType.DATA] || []) as Data<T>;\n            case Type.Binary:          return <unknown> Data.Binary(          <unknown> type as Binary,          offset, length, nullCount || 0, buffers[BufferType.VALIDITY], buffers[BufferType.OFFSET] || [], buffers[BufferType.DATA] || []) as Data<T>;\n            case Type.Utf8:            return <unknown> Data.Utf8(            <unknown> type as Utf8,            offset, length, nullCount || 0, buffers[BufferType.VALIDITY], buffers[BufferType.OFFSET] || [], buffers[BufferType.DATA] || []) as Data<T>;\n            case Type.List:            return <unknown> Data.List(            <unknown> type as List,            offset, length, nullCount || 0, buffers[BufferType.VALIDITY], buffers[BufferType.OFFSET] || [], (childData || [])[0]) as Data<T>;\n            case Type.FixedSizeList:   return <unknown> Data.FixedSizeList(   <unknown> type as FixedSizeList,   offset, length, nullCount || 0, buffers[BufferType.VALIDITY], (childData || [])[0]) as Data<T>;\n            case Type.Struct:          return <unknown> Data.Struct(          <unknown> type as Struct,          offset, length, nullCount || 0, buffers[BufferType.VALIDITY], childData || []) as Data<T>;\n            case Type.Map:             return <unknown> Data.Map(             <unknown> type as Map_,            offset, length, nullCount || 0, buffers[BufferType.VALIDITY], buffers[BufferType.OFFSET] || [], (childData || [])[0]) as Data<T>;\n            case Type.Union:           return <unknown> Data.Union(           <unknown> type as Union,           offset, length, nullCount || 0, buffers[BufferType.VALIDITY], buffers[BufferType.TYPE] || [], buffers[BufferType.OFFSET] || childData, childData) as Data<T>;\n        }\n        throw new Error(`Unrecognized typeId ${type.typeId}`);\n    }\n\n    /** @nocollapse */\n    public static Null<T extends Null>(type: T, offset: number, length: number) {\n        return new Data(type, offset, length, 0);\n    }\n    /** @nocollapse */\n    public static Int<T extends Int>(type: T, offset: number, length: number, nullCount: number, nullBitmap: NullBuffer, data: DataBuffer<T>) {\n        return new Data(type, offset, length, nullCount, [undefined, toArrayBufferView(type.ArrayType, data), toUint8Array(nullBitmap)]);\n    }\n    /** @nocollapse */\n    public static Dictionary<T extends Dictionary>(type: T, offset: number, length: number, nullCount: number, nullBitmap: NullBuffer, data: DataBuffer<T>, dictionary: Vector<T['dictionary']>) {\n        return new Data(type, offset, length, nullCount, [undefined, toArrayBufferView<T['TArray']>(type.indices.ArrayType, data), toUint8Array(nullBitmap)], [], dictionary);\n    }\n    /** @nocollapse */\n    public static Float<T extends Float>(type: T, offset: number, length: number, nullCount: number, nullBitmap: NullBuffer, data: DataBuffer<T>) {\n        return new Data(type, offset, length, nullCount, [undefined, toArrayBufferView(type.ArrayType, data), toUint8Array(nullBitmap)]);\n    }\n    /** @nocollapse */\n    public static Bool<T extends Bool>(type: T, offset: number, length: number, nullCount: number, nullBitmap: NullBuffer, data: DataBuffer<T>) {\n        return new Data(type, offset, length, nullCount, [undefined, toArrayBufferView(type.ArrayType, data), toUint8Array(nullBitmap)]);\n    }\n    /** @nocollapse */\n    public static Decimal<T extends Decimal>(type: T, offset: number, length: number, nullCount: number, nullBitmap: NullBuffer, data: DataBuffer<T>) {\n        return new Data(type, offset, length, nullCount, [undefined, toArrayBufferView(type.ArrayType, data), toUint8Array(nullBitmap)]);\n    }\n    /** @nocollapse */\n    public static Date<T extends Date_>(type: T, offset: number, length: number, nullCount: number, nullBitmap: NullBuffer, data: DataBuffer<T>) {\n        return new Data(type, offset, length, nullCount, [undefined, toArrayBufferView(type.ArrayType, data), toUint8Array(nullBitmap)]);\n    }\n    /** @nocollapse */\n    public static Time<T extends Time>(type: T, offset: number, length: number, nullCount: number, nullBitmap: NullBuffer, data: DataBuffer<T>) {\n        return new Data(type, offset, length, nullCount, [undefined, toArrayBufferView(type.ArrayType, data), toUint8Array(nullBitmap)]);\n    }\n    /** @nocollapse */\n    public static Timestamp<T extends Timestamp>(type: T, offset: number, length: number, nullCount: number, nullBitmap: NullBuffer, data: DataBuffer<T>) {\n        return new Data(type, offset, length, nullCount, [undefined, toArrayBufferView(type.ArrayType, data), toUint8Array(nullBitmap)]);\n    }\n    /** @nocollapse */\n    public static Interval<T extends Interval>(type: T, offset: number, length: number, nullCount: number, nullBitmap: NullBuffer, data: DataBuffer<T>) {\n        return new Data(type, offset, length, nullCount, [undefined, toArrayBufferView(type.ArrayType, data), toUint8Array(nullBitmap)]);\n    }\n    /** @nocollapse */\n    public static FixedSizeBinary<T extends FixedSizeBinary>(type: T, offset: number, length: number, nullCount: number, nullBitmap: NullBuffer, data: DataBuffer<T>) {\n        return new Data(type, offset, length, nullCount, [undefined, toArrayBufferView(type.ArrayType, data), toUint8Array(nullBitmap)]);\n    }\n    /** @nocollapse */\n    public static Binary<T extends Binary>(type: T, offset: number, length: number, nullCount: number, nullBitmap: NullBuffer, valueOffsets: ValueOffsetsBuffer, data: Uint8Array) {\n        return new Data(type, offset, length, nullCount, [toInt32Array(valueOffsets), toUint8Array(data), toUint8Array(nullBitmap)]);\n    }\n    /** @nocollapse */\n    public static Utf8<T extends Utf8>(type: T, offset: number, length: number, nullCount: number, nullBitmap: NullBuffer, valueOffsets: ValueOffsetsBuffer, data: Uint8Array) {\n        return new Data(type, offset, length, nullCount, [toInt32Array(valueOffsets), toUint8Array(data), toUint8Array(nullBitmap)]);\n    }\n    /** @nocollapse */\n    public static List<T extends List>(type: T, offset: number, length: number, nullCount: number, nullBitmap: NullBuffer, valueOffsets: ValueOffsetsBuffer, child: Data<T['valueType']> | Vector<T['valueType']>) {\n        return new Data(type, offset, length, nullCount, [toInt32Array(valueOffsets), undefined, toUint8Array(nullBitmap)], [child]);\n    }\n    /** @nocollapse */\n    public static FixedSizeList<T extends FixedSizeList>(type: T, offset: number, length: number, nullCount: number, nullBitmap: NullBuffer, child: Data<T['valueType']> | Vector<T['valueType']>) {\n        return new Data(type, offset, length, nullCount, [undefined, undefined, toUint8Array(nullBitmap)], [child]);\n    }\n    /** @nocollapse */\n    public static Struct<T extends Struct>(type: T, offset: number, length: number, nullCount: number, nullBitmap: NullBuffer, children: (Data | Vector)[]) {\n        return new Data(type, offset, length, nullCount, [undefined, undefined, toUint8Array(nullBitmap)], children);\n    }\n    /** @nocollapse */\n    public static Map<T extends Map_>(type: T, offset: number, length: number, nullCount: number, nullBitmap: NullBuffer, valueOffsets: ValueOffsetsBuffer, child: (Data | Vector)) {\n        return new Data(type, offset, length, nullCount, [toInt32Array(valueOffsets), undefined, toUint8Array(nullBitmap)], [child]);\n    }\n    public static Union<T extends SparseUnion>(type: T, offset: number, length: number, nullCount: number, nullBitmap: NullBuffer, typeIds: TypeIdsBuffer, children: (Data | Vector)[], _?: any): Data<T>;\n    public static Union<T extends DenseUnion>(type: T, offset: number, length: number, nullCount: number, nullBitmap: NullBuffer, typeIds: TypeIdsBuffer, valueOffsets: ValueOffsetsBuffer, children: (Data | Vector)[]): Data<T>;\n    public static Union<T extends Union>(type: T, offset: number, length: number, nullCount: number, nullBitmap: NullBuffer, typeIds: TypeIdsBuffer, valueOffsetsOrChildren: ValueOffsetsBuffer | (Data | Vector)[], children?: (Data | Vector)[]): Data<T>;\n    /** @nocollapse */\n    public static Union<T extends Union>(type: T, offset: number, length: number, nullCount: number, nullBitmap: NullBuffer, typeIds: TypeIdsBuffer, valueOffsetsOrChildren: ValueOffsetsBuffer | (Data | Vector)[], children?: (Data | Vector)[]) {\n        const buffers = <unknown> [\n            undefined, undefined,\n            toUint8Array(nullBitmap),\n            toArrayBufferView(type.ArrayType, typeIds)\n        ] as Partial<Buffers<T>>;\n        if (type.mode === UnionMode.Sparse) {\n            return new Data(type, offset, length, nullCount, buffers, valueOffsetsOrChildren as (Data | Vector)[]);\n        }\n        buffers[BufferType.OFFSET] = toInt32Array(<ValueOffsetsBuffer> valueOffsetsOrChildren);\n        return new Data(type, offset, length, nullCount, buffers, children);\n    }\n}\n\n(Data.prototype as any).childData = Object.freeze([]);\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\n/** @ignore */ const undf = void (0);\n\n/** @ignore */\nexport function valueToString(x: any) {\n    if (x === null) { return 'null'; }\n    if (x === undf) { return 'undefined'; }\n    switch (typeof x) {\n        case 'number': return `${x}`;\n        case 'bigint': return `${x}`;\n        case 'string': return `\"${x}\"`;\n    }\n    // If [Symbol.toPrimitive] is implemented (like in BN)\n    // use it instead of JSON.stringify(). This ensures we\n    // print BigInts, Decimals, and Binary in their native\n    // representation\n    if (typeof x[Symbol.toPrimitive] === 'function') {\n        return x[Symbol.toPrimitive]('string');\n    }\n    return ArrayBuffer.isView(x) ? `[${x}]` : JSON.stringify(x);\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { DataType } from '../type';\nimport { valueToString } from '../util/pretty';\nimport { BigIntAvailable } from '../util/compat';\n\n/**\n * Dynamically compile the null values into an `isValid()` function whose\n * implementation is a switch statement. Microbenchmarks in v8 indicate\n * this approach is 25% faster than using an ES6 Map.\n *\n * @example\n * console.log(createIsValidFunction([null, 'N/A', NaN]));\n * `function (x) {\n *     if (x !== x) return false;\n *     switch (x) {\n *         case null:\n *         case \"N/A\":\n *             return false;\n *     }\n *     return true;\n * }`\n *\n * @ignore\n * @param nullValues\n */\nexport function createIsValidFunction<T extends DataType = any, TNull = any>(nullValues?: ReadonlyArray<TNull>) {\n\n    if (!nullValues || nullValues.length <= 0) {\n        // @ts-ignore\n        return function isValid(value: any) { return true; };\n    }\n\n    let fnBody = '';\n    let noNaNs = nullValues.filter((x) => x === x);\n\n    if (noNaNs.length > 0) {\n        fnBody = `\n    switch (x) {${noNaNs.map((x) => `\n        case ${valueToCase(x)}:`).join('')}\n            return false;\n    }`;\n    }\n\n    // NaN doesn't equal anything including itself, so it doesn't work as a\n    // switch case. Instead we must explicitly check for NaN before the switch.\n    if (nullValues.length !== noNaNs.length) {\n        fnBody = `if (x !== x) return false;\\n${fnBody}`;\n    }\n\n    return new Function(`x`, `${fnBody}\\nreturn true;`) as (value: T['TValue'] | TNull) => boolean;\n}\n\n/** @ignore */\nfunction valueToCase(x: any) {\n    if (typeof x !== 'bigint') {\n        return valueToString(x);\n    } else if (BigIntAvailable) {\n        return `${valueToString(x)}n`;\n    }\n    return `\"${valueToString(x)}\"`;\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { memcpy } from '../util/buffer';\nimport { BigIntAvailable, BigInt64Array, BigUint64Array } from '../util/compat';\nimport {\n    TypedArray, TypedArrayConstructor,\n    BigIntArray, BigIntArrayConstructor\n} from '../interfaces';\n\n/** @ignore */ type DataValue<T> = T extends TypedArray ? number : T extends BigIntArray ? WideValue<T> : T;\n/** @ignore */ type WideValue<T extends BigIntArray> = T extends BigIntArray ? bigint | Int32Array | Uint32Array : never;\n/** @ignore */ type ArrayCtor<T extends TypedArray | BigIntArray> =\n    T extends TypedArray  ? TypedArrayConstructor<T>  :\n    T extends BigIntArray ? BigIntArrayConstructor<T> :\n    any;\n\n/** @ignore */\nconst roundLengthUpToNearest64Bytes = (len: number, BPE: number) => ((((len * BPE) + 63) & ~63) || 64) / BPE;\n/** @ignore */\nconst sliceOrExtendArray = <T extends TypedArray | BigIntArray>(arr: T, len = 0) => (\n    arr.length >= len ? arr.subarray(0, len) : memcpy(new (arr.constructor as any)(len), arr, 0)\n) as T;\n\n/** @ignore */\nexport interface BufferBuilder<T extends TypedArray | BigIntArray = any, TValue = DataValue<T>> {\n    readonly offset: number;\n}\n\n/** @ignore */\nexport class BufferBuilder<T extends TypedArray | BigIntArray = any, TValue = DataValue<T>> {\n\n    constructor(buffer: T, stride = 1) {\n        this.buffer = buffer;\n        this.stride = stride;\n        this.BYTES_PER_ELEMENT = buffer.BYTES_PER_ELEMENT;\n        this.ArrayType = buffer.constructor as ArrayCtor<T>;\n        this._resize(this.length = buffer.length / stride | 0);\n    }\n\n    public buffer: T;\n    public length: number;\n    public readonly stride: number;\n    public readonly ArrayType: ArrayCtor<T>;\n    public readonly BYTES_PER_ELEMENT: number;\n\n    public get byteLength() { return this.length * this.stride * this.BYTES_PER_ELEMENT | 0; }\n    public get reservedLength() { return this.buffer.length / this.stride; }\n    public get reservedByteLength() { return this.buffer.byteLength; }\n\n    // @ts-ignore\n    public set(index: number, value: TValue) { return this; }\n    public append(value: TValue) { return this.set(this.length, value); }\n    public reserve(extra: number) {\n        if (extra > 0) {\n            this.length += extra;\n            const stride = this.stride;\n            const length = this.length * stride;\n            const reserved = this.buffer.length;\n            if (length >= reserved) {\n                this._resize(reserved === 0\n                    ? roundLengthUpToNearest64Bytes(length * 1, this.BYTES_PER_ELEMENT)\n                    : roundLengthUpToNearest64Bytes(length * 2, this.BYTES_PER_ELEMENT)\n                );\n            }\n        }\n        return this;\n    }\n    public flush(length = this.length) {\n        length = roundLengthUpToNearest64Bytes(length * this.stride, this.BYTES_PER_ELEMENT);\n        const array = sliceOrExtendArray<T>(this.buffer, length);\n        this.clear();\n        return array;\n    }\n    public clear() {\n        this.length = 0;\n        this._resize(0);\n        return this;\n    }\n    protected _resize(newLength: number) {\n        return this.buffer = <T> memcpy(new this.ArrayType(newLength), this.buffer);\n    }\n}\n\n(BufferBuilder.prototype as any).offset = 0;\n\n/** @ignore */\nexport class DataBufferBuilder<T extends TypedArray> extends BufferBuilder<T, number> {\n    public last() { return this.get(this.length - 1); }\n    public get(index: number) { return this.buffer[index]; }\n    public set(index: number, value: number) {\n        this.reserve(index - this.length + 1);\n        this.buffer[index * this.stride] = value;\n        return this;\n    }\n}\n\n/** @ignore */\nexport class BitmapBufferBuilder extends DataBufferBuilder<Uint8Array> {\n\n    constructor(data = new Uint8Array(0)) { super(data, 1 / 8); }\n\n    public numValid = 0;\n    public get numInvalid() { return this.length - this.numValid; }\n    public get(idx: number) { return this.buffer[idx >> 3] >> idx % 8 & 1; }\n    public set(idx: number, val: number) {\n        const { buffer } = this.reserve(idx - this.length + 1);\n        const byte = idx >> 3, bit = idx % 8, cur = buffer[byte] >> bit & 1;\n        // If `val` is truthy and the current bit is 0, flip it to 1 and increment `numValid`.\n        // If `val` is falsey and the current bit is 1, flip it to 0 and decrement `numValid`.\n        val ? cur === 0 && ((buffer[byte] |=  (1 << bit)), ++this.numValid)\n            : cur === 1 && ((buffer[byte] &= ~(1 << bit)), --this.numValid);\n        return this;\n    }\n    public clear() {\n        this.numValid = 0;\n        return super.clear();\n    }\n}\n\n/** @ignore */\nexport class OffsetsBufferBuilder extends DataBufferBuilder<Int32Array> {\n    constructor(data = new Int32Array(1)) { super(data, 1); }\n    public append(value: number) {\n        return this.set(this.length - 1, value);\n    }\n    public set(index: number, value: number) {\n        const offset = this.length - 1;\n        const buffer = this.reserve(index - offset + 1).buffer;\n        if (offset < index++) {\n            buffer.fill(buffer[offset], offset, index);\n        }\n        buffer[index] = buffer[index - 1] + value;\n        return this;\n    }\n    public flush(length = this.length - 1) {\n        if (length > this.length) {\n            this.set(length - 1, 0);\n        }\n        return super.flush(length + 1);\n    }\n}\n\n/** @ignore */\nexport class WideBufferBuilder<T extends TypedArray, R extends BigIntArray> extends BufferBuilder<T, DataValue<T>> {\n    // @ts-ignore\n    public buffer64: R;\n    // @ts-ignore\n    protected _ArrayType64: BigIntArrayConstructor<R>;\n    public get ArrayType64() {\n        return this._ArrayType64 || (this._ArrayType64 = <BigIntArrayConstructor<R>> (this.buffer instanceof Int32Array ? BigInt64Array : BigUint64Array));\n    }\n    public set(index: number, value: DataValue<T>) {\n        this.reserve(index - this.length + 1);\n        switch (typeof value) {\n            case 'bigint': this.buffer64[index] = value; break;\n            case 'number': this.buffer[index * this.stride] = value; break;\n            default: this.buffer.set(value as TypedArray, index * this.stride);\n        }\n        return this;\n    }\n    protected _resize(newLength: number) {\n        const data = super._resize(newLength);\n        const length = data.byteLength / (this.BYTES_PER_ELEMENT * this.stride);\n        if (BigIntAvailable) {\n            this.buffer64 = new this.ArrayType64(data.buffer, data.byteOffset, length);\n        }\n        return data;\n    }\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Vector } from './vector';\nimport { BufferType } from './enum';\nimport { Data, Buffers } from './data';\nimport { createIsValidFunction } from './builder/valid';\nimport { BuilderType as B, VectorType as V} from './interfaces';\nimport { BufferBuilder, BitmapBufferBuilder, DataBufferBuilder, OffsetsBufferBuilder } from './builder/buffer';\nimport {\n    DataType, strideForType,\n    Float, Int, Decimal, FixedSizeBinary,\n    Date_, Time, Timestamp, Interval,\n    Utf8, Binary, List, Map_\n} from './type';\n\n/**\n * A set of options required to create a `Builder` instance for a given `DataType`.\n * @see {@link Builder}\n */\nexport interface BuilderOptions<T extends DataType = any, TNull = any> {\n    type: T;\n    nullValues?: TNull[] | ReadonlyArray<TNull> | null;\n    children?: { [key: string]: BuilderOptions; } | BuilderOptions[];\n}\n\n/**\n * A set of options to create an Iterable or AsyncIterable `Builder` transform function.\n * @see {@link Builder.throughIterable}\n * @see {@link Builder.throughAsyncIterable}\n */\n\nexport interface IterableBuilderOptions<T extends DataType = any, TNull = any> extends BuilderOptions<T, TNull> {\n    highWaterMark?: number;\n    queueingStrategy?: 'bytes' | 'count';\n    dictionaryHashFunction?: (value: any) => string | number;\n    valueToChildTypeId?: (builder: Builder<T, TNull>, value: any, offset: number) => number;\n}\n\n/**\n * An abstract base class for types that construct Arrow Vectors from arbitrary JavaScript values.\n *\n * A `Builder` is responsible for writing arbitrary JavaScript values\n * to ArrayBuffers and/or child Builders according to the Arrow specification\n * for each DataType, creating or resizing the underlying ArrayBuffers as necessary.\n *\n * The `Builder` for each Arrow `DataType` handles converting and appending\n * values for a given `DataType`. The high-level {@link Builder.new `Builder.new()`} convenience\n * method creates the specific `Builder` subclass for the supplied `DataType`.\n *\n * Once created, `Builder` instances support both appending values to the end\n * of the `Builder`, and random-access writes to specific indices\n * (`Builder.prototype.append(value)` is a convenience method for\n * `builder.set(builder.length, value)`). Appending or setting values beyond the\n * Builder's current length may cause the builder to grow its underlying buffers\n * or child Builders (if applicable) to accommodate the new values.\n *\n * After enough values have been written to a `Builder`, `Builder.prototype.flush()`\n * will commit the values to the underlying ArrayBuffers (or child Builders). The\n * internal Builder state will be reset, and an instance of `Data<T>` is returned.\n * Alternatively, `Builder.prototype.toVector()` will flush the `Builder` and return\n * an instance of `Vector<T>` instead.\n *\n * When there are no more values to write, use `Builder.prototype.finish()` to\n * finalize the `Builder`. This does not reset the internal state, so it is\n * necessary to call `Builder.prototype.flush()` or `toVector()` one last time\n * if there are still values queued to be flushed.\n *\n * Note: calling `Builder.prototype.finish()` is required when using a `DictionaryBuilder`,\n * because this is when it flushes the values that have been enqueued in its internal\n * dictionary's `Builder`, and creates the `dictionaryVector` for the `Dictionary` `DataType`.\n *\n * ```ts\n * import { Builder, Utf8 } from 'apache-arrow';\n *\n * const utf8Builder = Builder.new({\n *     type: new Utf8(),\n *     nullValues: [null, 'n/a']\n * });\n *\n * utf8Builder\n *     .append('hello')\n *     .append('n/a')\n *     .append('world')\n *     .append(null);\n *\n * const utf8Vector = utf8Builder.finish().toVector();\n *\n * console.log(utf8Vector.toJSON());\n * // > [\"hello\", null, \"world\", null]\n * ```\n *\n * @typeparam T The `DataType` of this `Builder`.\n * @typeparam TNull The type(s) of values which will be considered null-value sentinels.\n */\nexport abstract class Builder<T extends DataType = any, TNull = any> {\n\n    /**\n     * Create a `Builder` instance based on the `type` property of the supplied `options` object.\n     * @param {BuilderOptions<T, TNull>} options An object with a required `DataType` instance\n     * and other optional parameters to be passed to the `Builder` subclass for the given `type`.\n     *\n     * @typeparam T The `DataType` of the `Builder` to create.\n     * @typeparam TNull The type(s) of values which will be considered null-value sentinels.\n     * @nocollapse\n     */\n    // @ts-ignore\n    public static new<T extends DataType = any, TNull = any>(options: BuilderOptions<T, TNull>): B<T, TNull> {}\n\n    /** @nocollapse */\n    // @ts-ignore\n    public static throughNode<T extends DataType = any, TNull = any>(options: import('./io/node/builder').BuilderDuplexOptions<T, TNull>): import('stream').Duplex {\n        throw new Error(`\"throughNode\" not available in this environment`);\n    }\n    /** @nocollapse */\n    // @ts-ignore\n    public static throughDOM<T extends DataType = any, TNull = any>(options: import('./io/whatwg/builder').BuilderTransformOptions<T, TNull>): import('./io/whatwg/builder').BuilderTransform<T, TNull> {\n        throw new Error(`\"throughDOM\" not available in this environment`);\n    }\n\n    /**\n     * Transform a synchronous `Iterable` of arbitrary JavaScript values into a\n     * sequence of Arrow Vector<T> following the chunking semantics defined in\n     * the supplied `options` argument.\n     *\n     * This function returns a function that accepts an `Iterable` of values to\n     * transform. When called, this function returns an Iterator of `Vector<T>`.\n     *\n     * The resulting `Iterator<Vector<T>>` yields Vectors based on the\n     * `queueingStrategy` and `highWaterMark` specified in the `options` argument.\n     *\n     * * If `queueingStrategy` is `\"count\"` (or omitted), The `Iterator<Vector<T>>`\n     *   will flush the underlying `Builder` (and yield a new `Vector<T>`) once the\n     *   Builder's `length` reaches or exceeds the supplied `highWaterMark`.\n     * * If `queueingStrategy` is `\"bytes\"`, the `Iterator<Vector<T>>` will flush\n     *   the underlying `Builder` (and yield a new `Vector<T>`) once its `byteLength`\n     *   reaches or exceeds the supplied `highWaterMark`.\n     *\n     * @param {IterableBuilderOptions<T, TNull>} options An object of properties which determine the `Builder` to create and the chunking semantics to use.\n     * @returns A function which accepts a JavaScript `Iterable` of values to\n     *          write, and returns an `Iterator` that yields Vectors according\n     *          to the chunking semantics defined in the `options` argument.\n     * @nocollapse\n     */\n    public static throughIterable<T extends DataType = any, TNull = any>(options: IterableBuilderOptions<T, TNull>) {\n        return throughIterable(options);\n    }\n\n    /**\n     * Transform an `AsyncIterable` of arbitrary JavaScript values into a\n     * sequence of Arrow Vector<T> following the chunking semantics defined in\n     * the supplied `options` argument.\n     *\n     * This function returns a function that accepts an `AsyncIterable` of values to\n     * transform. When called, this function returns an AsyncIterator of `Vector<T>`.\n     *\n     * The resulting `AsyncIterator<Vector<T>>` yields Vectors based on the\n     * `queueingStrategy` and `highWaterMark` specified in the `options` argument.\n     *\n     * * If `queueingStrategy` is `\"count\"` (or omitted), The `AsyncIterator<Vector<T>>`\n     *   will flush the underlying `Builder` (and yield a new `Vector<T>`) once the\n     *   Builder's `length` reaches or exceeds the supplied `highWaterMark`.\n     * * If `queueingStrategy` is `\"bytes\"`, the `AsyncIterator<Vector<T>>` will flush\n     *   the underlying `Builder` (and yield a new `Vector<T>`) once its `byteLength`\n     *   reaches or exceeds the supplied `highWaterMark`.\n     *\n     * @param {IterableBuilderOptions<T, TNull>} options An object of properties which determine the `Builder` to create and the chunking semantics to use.\n     * @returns A function which accepts a JavaScript `AsyncIterable` of values\n     *          to write, and returns an `AsyncIterator` that yields Vectors\n     *          according to the chunking semantics defined in the `options`\n     *          argument.\n     * @nocollapse\n     */\n    public static throughAsyncIterable<T extends DataType = any, TNull = any>(options: IterableBuilderOptions<T, TNull>) {\n        return throughAsyncIterable(options);\n    }\n\n    /**\n     * Construct a builder with the given Arrow DataType with optional null values,\n     * which will be interpreted as \"null\" when set or appended to the `Builder`.\n     * @param {{ type: T, nullValues?: any[] }} options A `BuilderOptions` object used to create this `Builder`.\n     */\n    constructor({ 'type': type, 'nullValues': nulls }: BuilderOptions<T, TNull>) {\n        this.type = type;\n        this.children = [];\n        this.nullValues = nulls;\n        this.stride = strideForType(type);\n        this._nulls = new BitmapBufferBuilder();\n        if (nulls && nulls.length > 0) {\n            this._isValid = createIsValidFunction(nulls);\n        }\n    }\n\n    /**\n     * The Builder's `DataType` instance.\n     * @readonly\n     */\n    public type: T;\n    /**\n     * The number of values written to the `Builder` that haven't been flushed yet.\n     * @readonly\n     */\n    public length = 0;\n    /**\n     * A boolean indicating whether `Builder.prototype.finish()` has been called on this `Builder`.\n     * @readonly\n     */\n    public finished = false;\n    /**\n     * The number of elements in the underlying values TypedArray that\n     * represent a single logical element, determined by this Builder's\n     * `DataType`. This is 1 for most types, but is larger when the `DataType`\n     * is `Int64`, `Uint64`, `Decimal`, `DateMillisecond`, certain variants of\n     * `Interval`, `Time`, or `Timestamp`, `FixedSizeBinary`, and `FixedSizeList`.\n     * @readonly\n     */\n    public readonly stride: number;\n    public readonly children: Builder[];\n    /**\n     * The list of null-value sentinels for this `Builder`. When one of these values\n     * is written to the `Builder` (either via `Builder.prototype.set()` or `Builder.prototype.append()`),\n     * a 1-bit is written to this Builder's underlying null BitmapBufferBuilder.\n     * @readonly\n     */\n    public readonly nullValues?: TNull[] | ReadonlyArray<TNull> | null;\n\n    /**\n     * Flush the `Builder` and return a `Vector<T>`.\n     * @returns {Vector<T>} A `Vector<T>` of the flushed values.\n     */\n    public toVector() { return Vector.new(this.flush()); }\n\n    public get ArrayType() { return this.type.ArrayType; }\n    public get nullCount() { return this._nulls.numInvalid; }\n    public get numChildren() { return this.children.length; }\n\n    /**\n     * @returns The aggregate length (in bytes) of the values that have been written.\n     */\n    public get byteLength(): number {\n        let size = 0;\n        this._offsets && (size += this._offsets.byteLength);\n        this._values && (size += this._values.byteLength);\n        this._nulls && (size += this._nulls.byteLength);\n        this._typeIds && (size += this._typeIds.byteLength);\n        return this.children.reduce((size, child) => size + child.byteLength, size);\n    }\n\n    /**\n     * @returns The aggregate number of rows that have been reserved to write new values.\n     */\n    public get reservedLength(): number {\n        return this._nulls.reservedLength;\n    }\n\n    /**\n     * @returns The aggregate length (in bytes) that has been reserved to write new values.\n     */\n    public get reservedByteLength(): number {\n        let size = 0;\n        this._offsets && (size += this._offsets.reservedByteLength);\n        this._values && (size += this._values.reservedByteLength);\n        this._nulls && (size += this._nulls.reservedByteLength);\n        this._typeIds && (size += this._typeIds.reservedByteLength);\n        return this.children.reduce((size, child) => size + child.reservedByteLength, size);\n    }\n\n    // @ts-ignore\n    protected _offsets: DataBufferBuilder<Int32Array>;\n    public get valueOffsets() { return this._offsets ? this._offsets.buffer : null; }\n\n    // @ts-ignore\n    protected _values: BufferBuilder<T['TArray'], any>;\n    public get values() { return this._values ? this._values.buffer : null; }\n\n    protected _nulls: BitmapBufferBuilder;\n    public get nullBitmap() { return this._nulls ? this._nulls.buffer : null; }\n\n    // @ts-ignore\n    protected _typeIds: DataBufferBuilder<Int8Array>;\n    public get typeIds() { return this._typeIds ? this._typeIds.buffer : null; }\n\n    // @ts-ignore\n    protected _isValid: (value: T['TValue'] | TNull) => boolean;\n    // @ts-ignore\n    protected _setValue: (inst: Builder<T>, index: number, value: T['TValue']) => void;\n\n    /**\n     * Appends a value (or null) to this `Builder`.\n     * This is equivalent to `builder.set(builder.length, value)`.\n     * @param {T['TValue'] | TNull } value The value to append.\n     */\n    public append(value: T['TValue'] | TNull) { return this.set(this.length, value); }\n\n    /**\n     * Validates whether a value is valid (true), or null (false)\n     * @param {T['TValue'] | TNull } value The value to compare against null the value representations\n     */\n    // @ts-ignore\n    public isValid(value: T['TValue'] | TNull): boolean { return this._isValid(value); }\n\n    /**\n     * Write a value (or null-value sentinel) at the supplied index.\n     * If the value matches one of the null-value representations, a 1-bit is\n     * written to the null `BitmapBufferBuilder`. Otherwise, a 0 is written to\n     * the null `BitmapBufferBuilder`, and the value is passed to\n     * `Builder.prototype.setValue()`.\n     * @param {number} index The index of the value to write.\n     * @param {T['TValue'] | TNull } value The value to write at the supplied index.\n     * @returns {this} The updated `Builder` instance.\n     */\n    public set(index: number, value: T['TValue'] | TNull) {\n        if (this.setValid(index, this.isValid(value))) {\n            this.setValue(index, value);\n        }\n        return this;\n    }\n\n    /**\n     * Write a value to the underlying buffers at the supplied index, bypassing\n     * the null-value check. This is a low-level method that\n     * @param {number} index\n     * @param {T['TValue'] | TNull } value\n     */\n    // @ts-ignore\n    public setValue(index: number, value: T['TValue']) { this._setValue(this, index, value); }\n    public setValid(index: number, valid: boolean) {\n        this.length = this._nulls.set(index, +valid).length;\n        return valid;\n    }\n\n    // @ts-ignore\n    public addChild(child: Builder, name = `${this.numChildren}`) {\n        throw new Error(`Cannot append children to non-nested type \"${this.type}\"`);\n    }\n\n    /**\n     * Retrieve the child `Builder` at the supplied `index`, or null if no child\n     * exists at that index.\n     * @param {number} index The index of the child `Builder` to retrieve.\n     * @returns {Builder | null} The child Builder at the supplied index or null.\n     */\n    public getChildAt<R extends DataType = any>(index: number): Builder<R> | null {\n        return this.children[index] || null;\n    }\n\n    /**\n     * Commit all the values that have been written to their underlying\n     * ArrayBuffers, including any child Builders if applicable, and reset\n     * the internal `Builder` state.\n     * @returns A `Data<T>` of the buffers and childData representing the values written.\n     */\n    public flush() {\n\n        const buffers: any = [];\n        const values =  this._values;\n        const offsets =  this._offsets;\n        const typeIds =  this._typeIds;\n        const { length, nullCount } = this;\n\n        if (typeIds) { /* Unions */\n            buffers[BufferType.TYPE] = typeIds.flush(length);\n            // DenseUnions\n            offsets && (buffers[BufferType.OFFSET] = offsets.flush(length));\n        } else if (offsets) { /* Variable-width primitives (Binary, Utf8) and Lists */\n            // Binary, Utf8\n            values && (buffers[BufferType.DATA] = values.flush(offsets.last()));\n            buffers[BufferType.OFFSET] = offsets.flush(length);\n        } else if (values) { /* Fixed-width primitives (Int, Float, Decimal, Time, Timestamp, and Interval) */\n            buffers[BufferType.DATA] = values.flush(length);\n        }\n\n        nullCount > 0 && (buffers[BufferType.VALIDITY] = this._nulls.flush(length));\n\n        const data = Data.new<T>(\n            this.type, 0, length, nullCount, buffers as Buffers<T>,\n            this.children.map((child) => child.flush())) as Data<T>;\n\n        this.clear();\n\n        return data;\n    }\n\n    /**\n     * Finalize this `Builder`, and child builders if applicable.\n     * @returns {this} The finalized `Builder` instance.\n     */\n    public finish() {\n        this.finished = true;\n        this.children.forEach((child) => child.finish());\n        return this;\n    }\n\n    /**\n     * Clear this Builder's internal state, including child Builders if applicable, and reset the length to 0.\n     * @returns {this} The cleared `Builder` instance.\n     */\n    public clear() {\n        this.length = 0;\n        this._offsets && (this._offsets.clear());\n        this._values && (this._values.clear());\n        this._nulls && (this._nulls.clear());\n        this._typeIds && (this._typeIds.clear());\n        this.children.forEach((child) => child.clear());\n        return this;\n    }\n}\n\n(Builder.prototype as any).length = 1;\n(Builder.prototype as any).stride = 1;\n(Builder.prototype as any).children = null;\n(Builder.prototype as any).finished = false;\n(Builder.prototype as any).nullValues = null;\n(Builder.prototype as any)._isValid = () => true;\n\n/** @ignore */\nexport abstract class FixedWidthBuilder<T extends Int | Float | FixedSizeBinary | Date_ | Timestamp | Time | Decimal | Interval = any, TNull = any> extends Builder<T, TNull> {\n    constructor(opts: BuilderOptions<T, TNull>) {\n        super(opts);\n        this._values = new DataBufferBuilder(new this.ArrayType(0), this.stride);\n    }\n    public setValue(index: number, value: T['TValue']) {\n        const values = this._values;\n        values.reserve(index - values.length + 1);\n        return super.setValue(index, value);\n    }\n}\n\n/** @ignore */\nexport abstract class VariableWidthBuilder<T extends Binary | Utf8 | List | Map_, TNull = any> extends Builder<T, TNull> {\n    protected _pendingLength: number = 0;\n    protected _offsets: OffsetsBufferBuilder;\n    protected _pending: Map<number, any> | undefined;\n    constructor(opts: BuilderOptions<T, TNull>) {\n        super(opts);\n        this._offsets = new OffsetsBufferBuilder();\n    }\n    public setValue(index: number, value: T['TValue']) {\n        const pending = this._pending || (this._pending = new Map());\n        const current = pending.get(index);\n        current && (this._pendingLength -= current.length);\n        this._pendingLength += value.length;\n        pending.set(index, value);\n    }\n    public setValid(index: number, isValid: boolean) {\n        if (!super.setValid(index, isValid)) {\n            (this._pending || (this._pending = new Map())).set(index, undefined);\n            return false;\n        }\n        return true;\n    }\n    public clear() {\n        this._pendingLength = 0;\n        this._pending = undefined;\n        return super.clear();\n    }\n    public flush() {\n        this._flush();\n        return super.flush();\n    }\n    public finish() {\n        this._flush();\n        return super.finish();\n    }\n    protected _flush() {\n        const pending = this._pending;\n        const pendingLength = this._pendingLength;\n        this._pendingLength = 0;\n        this._pending = undefined;\n        if (pending && pending.size > 0) {\n            this._flushPending(pending, pendingLength);\n        }\n        return this;\n    }\n    protected abstract _flushPending(pending: Map<number, any>, pendingLength: number): void;\n}\n\n/** @ignore */\ntype ThroughIterable<T extends DataType = any, TNull = any> = (source: Iterable<T['TValue'] | TNull>) => IterableIterator<V<T>>;\n\n/** @ignore */\nfunction throughIterable<T extends DataType = any, TNull = any>(options: IterableBuilderOptions<T, TNull>): ThroughIterable<T, TNull> {\n    const { ['queueingStrategy']: queueingStrategy = 'count' } = options;\n    const { ['highWaterMark']: highWaterMark = queueingStrategy !== 'bytes' ? 1000 : 2 ** 14 } = options;\n    const sizeProperty: 'length' | 'byteLength' = queueingStrategy !== 'bytes' ? 'length' : 'byteLength';\n    return function*(source: Iterable<T['TValue'] | TNull>) {\n        let numChunks = 0;\n        let builder = Builder.new(options);\n        for (const value of source) {\n            if (builder.append(value)[sizeProperty] >= highWaterMark) {\n                ++numChunks && (yield builder.toVector());\n            }\n        }\n        if (builder.finish().length > 0 || numChunks === 0) {\n            yield builder.toVector();\n        }\n    };\n}\n\n/** @ignore */\ntype ThroughAsyncIterable<T extends DataType = any, TNull = any> = (source: Iterable<T['TValue'] | TNull> | AsyncIterable<T['TValue'] | TNull>) => AsyncIterableIterator<V<T>>;\n\n/** @ignore */\nfunction throughAsyncIterable<T extends DataType = any, TNull = any>(options: IterableBuilderOptions<T, TNull>): ThroughAsyncIterable<T, TNull> {\n    const { ['queueingStrategy']: queueingStrategy = 'count' } = options;\n    const { ['highWaterMark']: highWaterMark = queueingStrategy !== 'bytes' ? 1000 : 2 ** 14 } = options;\n    const sizeProperty: 'length' | 'byteLength' = queueingStrategy !== 'bytes' ? 'length' : 'byteLength';\n    return async function* (source: Iterable<T['TValue'] | TNull> | AsyncIterable<T['TValue'] | TNull>) {\n        let numChunks = 0;\n        let builder = Builder.new(options);\n        for await (const value of source) {\n            if (builder.append(value)[sizeProperty] >= highWaterMark) {\n                ++numChunks && (yield builder.toVector());\n            }\n        }\n        if (builder.finish().length > 0 || numChunks === 0) {\n            yield builder.toVector();\n        }\n    };\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Bool } from '../type';\nimport { BitmapBufferBuilder } from './buffer';\nimport { Builder, BuilderOptions } from '../builder';\n\n/** @ignore */\nexport class BoolBuilder<TNull = any> extends Builder<Bool, TNull> {\n    constructor(options: BuilderOptions<Bool, TNull>) {\n        super(options);\n        this._values = new BitmapBufferBuilder();\n    }\n    public setValue(index: number, value: boolean) {\n        this._values.set(index, +value);\n    }\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Null } from '../type';\nimport { Builder } from '../builder';\n\n/** @ignore */\nexport class NullBuilder<TNull = any> extends Builder<Null, TNull> {\n    // @ts-ignore\n    public setValue(index: number, value: null) {}\n    public setValid(index: number, valid: boolean) {\n        this.length = Math.max(index + 1, this.length);\n        return valid;\n    }\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { FixedWidthBuilder } from '../builder';\nimport { Date_, DateDay, DateMillisecond } from '../type';\n\n/** @ignore */\nexport class DateBuilder<T extends Date_ = Date_, TNull = any> extends FixedWidthBuilder<T, TNull> {}\n/** @ignore */\nexport class DateDayBuilder<TNull = any> extends DateBuilder<DateDay, TNull> {}\n/** @ignore */\nexport class DateMillisecondBuilder<TNull = any> extends DateBuilder<DateMillisecond, TNull> {}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Decimal } from '../type';\nimport { FixedWidthBuilder } from '../builder';\n\n/** @ignore */\nexport class DecimalBuilder<TNull = any> extends FixedWidthBuilder<Decimal, TNull> {}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Vector } from '../vector';\nimport { IntBuilder } from './int';\nimport { Dictionary, DataType } from '../type';\nimport { Builder, BuilderOptions } from '../builder';\n\ntype DictionaryHashFunction = (x: any) => string | number;\n\nexport interface DictionaryBuilderOptions<T extends DataType = any, TNull = any> extends BuilderOptions<T, TNull> {\n    dictionaryHashFunction?: DictionaryHashFunction;\n}\n\n/** @ignore */\nexport class DictionaryBuilder<T extends Dictionary, TNull = any> extends Builder<T, TNull> {\n\n    protected _dictionaryOffset: number;\n    protected _dictionary?: Vector<T['dictionary']>;\n    protected _keysToIndices: { [key: string]: number };\n    public readonly indices: IntBuilder<T['indices']>;\n    public readonly dictionary: Builder<T['dictionary']>;\n\n    constructor({ 'type': type, 'nullValues': nulls, 'dictionaryHashFunction': hashFn }: DictionaryBuilderOptions<T, TNull>) {\n        super({ type: new Dictionary(type.dictionary, type.indices, type.id, type.isOrdered) as T });\n        this._nulls = <any> null;\n        this._dictionaryOffset = 0;\n        this._keysToIndices = Object.create(null);\n        this.indices = Builder.new({ 'type': this.type.indices, 'nullValues': nulls }) as IntBuilder<T['indices']>;\n        this.dictionary = Builder.new({ 'type': this.type.dictionary, 'nullValues': null }) as Builder<T['dictionary']>;\n        if (typeof hashFn === 'function') {\n            this.valueToKey = hashFn;\n        }\n    }\n\n    public get values() { return this.indices.values; }\n    public get nullCount() { return this.indices.nullCount; }\n    public get nullBitmap() { return this.indices.nullBitmap; }\n    public get byteLength() { return this.indices.byteLength + this.dictionary.byteLength; }\n    public get reservedLength() { return this.indices.reservedLength + this.dictionary.reservedLength; }\n    public get reservedByteLength() { return this.indices.reservedByteLength + this.dictionary.reservedByteLength; }\n    public isValid(value: T['TValue'] | TNull) { return this.indices.isValid(value); }\n    public setValid(index: number, valid: boolean) {\n        const indices = this.indices;\n        valid = indices.setValid(index, valid);\n        this.length = indices.length;\n        return valid;\n    }\n    public setValue(index: number, value: T['TValue']) {\n        let keysToIndices = this._keysToIndices;\n        let key = this.valueToKey(value);\n        let idx = keysToIndices[key];\n        if (idx === undefined) {\n            keysToIndices[key] = idx = this._dictionaryOffset + this.dictionary.append(value).length - 1;\n        }\n        return this.indices.setValue(index, idx);\n    }\n    public flush() {\n        const type = this.type;\n        const prev = this._dictionary;\n        const curr = this.dictionary.toVector();\n        const data = this.indices.flush().clone(type);\n        data.dictionary = prev ? prev.concat(curr) : curr;\n        this.finished || (this._dictionaryOffset += curr.length);\n        this._dictionary = data.dictionary as Vector<T['dictionary']>;\n        this.clear();\n        return data;\n    }\n    public finish() {\n        this.indices.finish();\n        this.dictionary.finish();\n        this._dictionaryOffset = 0;\n        this._keysToIndices = Object.create(null);\n        return super.finish();\n    }\n    public clear() {\n        this.indices.clear();\n        this.dictionary.clear();\n        return super.clear();\n    }\n    public valueToKey(val: any): string | number {\n        return typeof val === 'string' ? val : `${val}`;\n    }\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { FixedSizeBinary } from '../type';\nimport { FixedWidthBuilder } from '../builder';\n\n/** @ignore */\nexport class FixedSizeBinaryBuilder<TNull = any> extends FixedWidthBuilder<FixedSizeBinary, TNull> {}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nconst f64 = new Float64Array(1);\nconst u32 = new Uint32Array(f64.buffer);\n\n/**\n * Convert uint16 (logically a float16) to a JS float64. Inspired by numpy's `npy_half_to_double`:\n * https://github.com/numpy/numpy/blob/5a5987291dc95376bb098be8d8e5391e89e77a2c/numpy/core/src/npymath/halffloat.c#L29\n * @param h {number} the uint16 to convert\n * @private\n * @ignore\n */\nexport function uint16ToFloat64(h: number) {\n    let expo = (h & 0x7C00) >> 10;\n    let sigf = (h & 0x03FF) / 1024;\n    let sign = (-1) ** ((h & 0x8000) >> 15);\n    switch (expo) {\n        case 0x1F: return sign * (sigf ? NaN : 1 / 0);\n        case 0x00: return sign * (sigf ? 6.103515625e-5 * sigf : 0);\n    }\n    return sign * (2 ** (expo - 15)) * (1 + sigf);\n}\n\n/**\n * Convert a float64 to uint16 (assuming the float64 is logically a float16). Inspired by numpy's `npy_double_to_half`:\n * https://github.com/numpy/numpy/blob/5a5987291dc95376bb098be8d8e5391e89e77a2c/numpy/core/src/npymath/halffloat.c#L43\n * @param d {number} The float64 to convert\n * @private\n * @ignore\n */\nexport function float64ToUint16(d: number) {\n\n    if (d !== d) { return 0x7E00; } // NaN\n\n    f64[0] = d;\n\n    // Magic numbers:\n    // 0x80000000 = 10000000 00000000 00000000 00000000 -- masks the 32nd bit\n    // 0x7ff00000 = 01111111 11110000 00000000 00000000 -- masks the 21st-31st bits\n    // 0x000fffff = 00000000 00001111 11111111 11111111 -- masks the 1st-20th bit\n\n    let sign = (u32[1] & 0x80000000) >> 16 & 0xFFFF;\n    let expo = (u32[1] & 0x7ff00000), sigf = 0x0000;\n\n    if (expo >= 0x40f00000) {\n        //\n        // If exponent overflowed, the float16 is either NaN or Infinity.\n        // Rules to propagate the sign bit: mantissa > 0 ? NaN : +/-Infinity\n        //\n        // Magic numbers:\n        // 0x40F00000 = 01000000 11110000 00000000 00000000 -- 6-bit exponent overflow\n        // 0x7C000000 = 01111100 00000000 00000000 00000000 -- masks the 27th-31st bits\n        //\n        // returns:\n        // qNaN, aka 32256 decimal, 0x7E00 hex, or 01111110 00000000 binary\n        // sNaN, aka 32000 decimal, 0x7D00 hex, or 01111101 00000000 binary\n        // +inf, aka 31744 decimal, 0x7C00 hex, or 01111100 00000000 binary\n        // -inf, aka 64512 decimal, 0xFC00 hex, or 11111100 00000000 binary\n        //\n        // If mantissa is greater than 23 bits, set to +Infinity like numpy\n        if (u32[0] > 0) {\n            expo = 0x7C00;\n        } else {\n            expo = (expo & 0x7C000000) >> 16;\n            sigf = (u32[1] & 0x000fffff) >> 10;\n        }\n    } else if (expo <= 0x3f000000) {\n        //\n        // If exponent underflowed, the float is either signed zero or subnormal.\n        //\n        // Magic numbers:\n        // 0x3F000000 = 00111111 00000000 00000000 00000000 -- 6-bit exponent underflow\n        //\n        sigf = 0x100000 + (u32[1] & 0x000fffff);\n        sigf = 0x100000 + (sigf << ((expo >> 20) - 998)) >> 21;\n        expo = 0;\n    } else {\n        //\n        // No overflow or underflow, rebase the exponent and round the mantissa\n        // Magic numbers:\n        // 0x200 = 00000010 00000000 -- masks off the 10th bit\n        //\n\n        // Ensure the first mantissa bit (the 10th one) is 1 and round\n        expo = (expo - 0x3f000000) >> 10;\n        sigf = ((u32[1] & 0x000fffff) + 0x200) >> 10;\n    }\n\n    return sign | expo | sigf & 0xFFFF;\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { float64ToUint16 } from '../util/math';\nimport { FixedWidthBuilder } from '../builder';\nimport { Float, Float16, Float32, Float64 } from '../type';\n\n/** @ignore */\nexport class FloatBuilder<T extends Float = Float, TNull = any> extends FixedWidthBuilder<T, TNull> {}\n\n/** @ignore */\nexport class Float16Builder<TNull = any> extends FloatBuilder<Float16, TNull> {\n    public setValue(index: number, value: number) {\n        // convert JS float64 to a uint16\n        this._values.set(index, float64ToUint16(value));\n    }\n}\n\n/** @ignore */\nexport class Float32Builder<TNull = any> extends FloatBuilder<Float32, TNull> {\n    public setValue(index: number, value: number) {\n        this._values.set(index, value);\n    }\n}\n\n/** @ignore */\nexport class Float64Builder<TNull = any> extends FloatBuilder<Float64, TNull> {\n    public setValue(index: number, value: number) {\n        this._values.set(index, value);\n    }\n}\n","import setPrototypeOf from \"./setPrototypeOf.js\";\nimport isNativeReflectConstruct from \"./isNativeReflectConstruct.js\";\nexport default function _construct(Parent, args, Class) {\n  if (isNativeReflectConstruct()) {\n    _construct = Reflect.construct.bind();\n  } else {\n    _construct = function _construct(Parent, args, Class) {\n      var a = [null];\n      a.push.apply(a, args);\n      var Constructor = Function.bind.apply(Parent, a);\n      var instance = new Constructor();\n      if (Class) setPrototypeOf(instance, Class.prototype);\n      return instance;\n    };\n  }\n  return _construct.apply(null, arguments);\n}","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { ArrayBufferViewInput, toArrayBufferView } from './buffer';\nimport { TypedArray, TypedArrayConstructor } from '../interfaces';\nimport { BigIntArray, BigIntArrayConstructor } from '../interfaces';\nimport { BigIntAvailable, BigInt64Array, BigUint64Array } from './compat';\n\n/** @ignore */\nexport const isArrowBigNumSymbol = Symbol.for('isArrowBigNum');\n\n/** @ignore */ type BigNumArray = IntArray | UintArray;\n/** @ignore */ type IntArray = Int8Array | Int16Array | Int32Array;\n/** @ignore */ type UintArray = Uint8Array | Uint16Array | Uint32Array | Uint8ClampedArray;\n\n/** @ignore */\nfunction BigNum(this: any, x: any, ...xs: any) {\n    if (xs.length === 0) {\n        return Object.setPrototypeOf(toArrayBufferView(this['TypedArray'], x), this.constructor.prototype);\n    }\n    return Object.setPrototypeOf(new this['TypedArray'](x, ...xs), this.constructor.prototype);\n}\n\nBigNum.prototype[isArrowBigNumSymbol] = true;\nBigNum.prototype.toJSON = function<T extends BN<BigNumArray>>(this: T) { return `\"${bignumToString(this)}\"`; };\nBigNum.prototype.valueOf = function<T extends BN<BigNumArray>>(this: T) { return bignumToNumber(this); };\nBigNum.prototype.toString = function<T extends BN<BigNumArray>>(this: T) { return bignumToString(this); };\nBigNum.prototype[Symbol.toPrimitive] = function<T extends BN<BigNumArray>>(this: T, hint: 'string' | 'number' | 'default' = 'default') {\n    switch (hint) {\n        case 'number': return bignumToNumber(this);\n        case 'string': return bignumToString(this);\n        case 'default': return bignumToBigInt(this);\n    }\n    return bignumToString(this);\n};\n\n/** @ignore */\ntype TypedArrayConstructorArgs =\n    [number | void] |\n    [Iterable<number> | Iterable<bigint>] |\n    [ArrayBufferLike, number | void, number | void] ;\n\n/** @ignore */\nfunction SignedBigNum(this: any, ...args: TypedArrayConstructorArgs) { return BigNum.apply(this, args); }\n/** @ignore */\nfunction UnsignedBigNum(this: any, ...args: TypedArrayConstructorArgs) { return BigNum.apply(this, args); }\n/** @ignore */\nfunction DecimalBigNum(this: any, ...args: TypedArrayConstructorArgs) { return BigNum.apply(this, args); }\n\nObject.setPrototypeOf(SignedBigNum.prototype,   Object.create(Int32Array.prototype));\nObject.setPrototypeOf(UnsignedBigNum.prototype, Object.create(Uint32Array.prototype));\nObject.setPrototypeOf(DecimalBigNum.prototype,  Object.create(Uint32Array.prototype));\nObject.assign(SignedBigNum.prototype,   BigNum.prototype, { 'constructor': SignedBigNum,   'signed': true,  'TypedArray': Int32Array,  'BigIntArray': BigInt64Array  });\nObject.assign(UnsignedBigNum.prototype, BigNum.prototype, { 'constructor': UnsignedBigNum, 'signed': false, 'TypedArray': Uint32Array, 'BigIntArray': BigUint64Array });\nObject.assign(DecimalBigNum.prototype,  BigNum.prototype, { 'constructor': DecimalBigNum,  'signed': true,  'TypedArray': Uint32Array, 'BigIntArray': BigUint64Array });\n\n/** @ignore */\nfunction bignumToNumber<T extends BN<BigNumArray>>(bn: T) {\n    let { buffer, byteOffset, length, 'signed': signed } = bn;\n    let words = new Int32Array(buffer, byteOffset, length);\n    let number = 0, i = 0, n = words.length, hi, lo;\n    while (i < n) {\n        lo = words[i++];\n        hi = words[i++];\n        signed || (hi = hi >>> 0);\n        number += (lo >>> 0) + (hi * (i ** 32));\n    }\n    return number;\n}\n\n/** @ignore */\nexport let bignumToString: { <T extends BN<BigNumArray>>(a: T): string; };\n/** @ignore */\nexport let bignumToBigInt: { <T extends BN<BigNumArray>>(a: T): bigint; };\n\nif (!BigIntAvailable) {\n    bignumToString = decimalToString;\n    bignumToBigInt = <any> bignumToString;\n} else {\n    bignumToBigInt = (<T extends BN<BigNumArray>>(a: T) => a.byteLength === 8 ? new a['BigIntArray'](a.buffer, a.byteOffset, 1)[0] : <any>decimalToString(a));\n    bignumToString = (<T extends BN<BigNumArray>>(a: T) => a.byteLength === 8 ? `${new a['BigIntArray'](a.buffer, a.byteOffset, 1)[0]}` : decimalToString(a));\n}\n\n/** @ignore */\nfunction decimalToString<T extends BN<BigNumArray>>(a: T) {\n    let digits = '';\n    let base64 = new Uint32Array(2);\n    let base32 = new Uint16Array(a.buffer, a.byteOffset, a.byteLength / 2);\n    let checks = new Uint32Array((base32 = new Uint16Array(base32).reverse()).buffer);\n    let i = -1, n = base32.length - 1;\n    do {\n        for (base64[0] = base32[i = 0]; i < n;) {\n            base32[i++] = base64[1] = base64[0] / 10;\n            base64[0] = ((base64[0] - base64[1] * 10) << 16) + base32[i];\n        }\n        base32[i] = base64[1] = base64[0] / 10;\n        base64[0] = base64[0] - base64[1] * 10;\n        digits = `${base64[0]}${digits}`;\n    } while (checks[0] || checks[1] || checks[2] || checks[3]);\n    return digits ? digits : `0`;\n}\n\n/** @ignore */\nexport class BN<T extends BigNumArray> {\n    /** @nocollapse */\n    public static new<T extends BigNumArray>(num: T, isSigned?: boolean): (T & BN<T>) {\n        switch (isSigned) {\n            case true: return new (<any> SignedBigNum)(num) as (T & BN<T>);\n            case false: return new (<any> UnsignedBigNum)(num) as (T & BN<T>);\n        }\n        switch (num.constructor) {\n            case Int8Array:\n            case Int16Array:\n            case Int32Array:\n            case BigInt64Array:\n                return new (<any> SignedBigNum)(num) as (T & BN<T>);\n        }\n        if (num.byteLength === 16) {\n            return new (<any> DecimalBigNum)(num) as (T & BN<T>);\n        }\n        return new (<any> UnsignedBigNum)(num) as (T & BN<T>);\n    }\n    /** @nocollapse */\n    public static signed<T extends IntArray>(num: T): (T & BN<T>) {\n        return new (<any> SignedBigNum)(num) as (T & BN<T>);\n    }\n    /** @nocollapse */\n    public static unsigned<T extends UintArray>(num: T): (T & BN<T>) {\n        return new (<any> UnsignedBigNum)(num) as (T & BN<T>);\n    }\n    /** @nocollapse */\n    public static decimal<T extends UintArray>(num: T): (T & BN<T>) {\n        return new (<any> DecimalBigNum)(num) as (T & BN<T>);\n    }\n    constructor(num: T, isSigned?: boolean) {\n        return BN.new(num, isSigned) as any;\n    }\n}\n\n/** @ignore */\nexport interface BN<T extends BigNumArray> extends TypedArrayLike<T> {\n\n    new<T extends ArrayBufferViewInput>(buffer: T, signed?: boolean): T;\n\n    readonly signed: boolean;\n    readonly TypedArray: TypedArrayConstructor<TypedArray>;\n    readonly BigIntArray: BigIntArrayConstructor<BigIntArray>;\n\n    [Symbol.toStringTag]:\n        'Int8Array'         |\n        'Int16Array'        |\n        'Int32Array'        |\n        'Uint8Array'        |\n        'Uint16Array'       |\n        'Uint32Array'       |\n        'Uint8ClampedArray';\n\n    /**\n     * Convert the bytes to their (positive) decimal representation for printing\n     */\n    toString(): string;\n    /**\n     * Down-convert the bytes to a 53-bit precision integer. Invoked by JS for\n     * arithmetic operators, like `+`. Easy (and unsafe) way to convert BN to\n     * number via `+bn_inst`\n     */\n    valueOf(): number;\n    /**\n     * Return the JSON representation of the bytes. Must be wrapped in double-quotes,\n     * so it's compatible with JSON.stringify().\n     */\n    toJSON(): string;\n    [Symbol.toPrimitive](hint?: any): number | string | bigint;\n}\n\n/** @ignore */\ninterface TypedArrayLike<T extends BigNumArray> {\n\n    readonly length: number;\n    readonly buffer: ArrayBuffer;\n    readonly byteLength: number;\n    readonly byteOffset: number;\n    readonly BYTES_PER_ELEMENT: number;\n\n    includes(searchElement: number, fromIndex?: number | undefined): boolean;\n    copyWithin(target: number, start: number, end?: number | undefined): this;\n    every(callbackfn: (value: number, index: number, array: T) => boolean, thisArg?: any): boolean;\n    fill(value: number, start?: number | undefined, end?: number | undefined): this;\n    filter(callbackfn: (value: number, index: number, array: T) => boolean, thisArg?: any): T;\n    find(predicate: (value: number, index: number, obj: T) => boolean, thisArg?: any): number | undefined;\n    findIndex(predicate: (value: number, index: number, obj: T) => boolean, thisArg?: any): number;\n    forEach(callbackfn: (value: number, index: number, array: T) => void, thisArg?: any): void;\n    indexOf(searchElement: number, fromIndex?: number | undefined): number;\n    join(separator?: string | undefined): string;\n    lastIndexOf(searchElement: number, fromIndex?: number | undefined): number;\n    map(callbackfn: (value: number, index: number, array: T) => number, thisArg?: any): T;\n    reduce(callbackfn: (previousValue: number, currentValue: number, currentIndex: number, array: T) => number): number;\n    reduce(callbackfn: (previousValue: number, currentValue: number, currentIndex: number, array: T) => number, initialValue: number): number;\n    reduce<U>(callbackfn: (previousValue: U, currentValue: number, currentIndex: number, array: T) => U, initialValue: U): U;\n    reduceRight(callbackfn: (previousValue: number, currentValue: number, currentIndex: number, array: T) => number): number;\n    reduceRight(callbackfn: (previousValue: number, currentValue: number, currentIndex: number, array: T) => number, initialValue: number): number;\n    reduceRight<U>(callbackfn: (previousValue: U, currentValue: number, currentIndex: number, array: T) => U, initialValue: U): U;\n    reverse(): T;\n    set(array: ArrayLike<number>, offset?: number | undefined): void;\n    slice(start?: number | undefined, end?: number | undefined): T;\n    some(callbackfn: (value: number, index: number, array: T) => boolean, thisArg?: any): boolean;\n    sort(compareFn?: ((a: number, b: number) => number) | undefined): this;\n    subarray(begin: number, end?: number | undefined): T;\n    toLocaleString(): string;\n    entries(): IterableIterator<[number, number]>;\n    keys(): IterableIterator<number>;\n    values(): IterableIterator<number>;\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { bignumToBigInt } from '../util/bn';\nimport { WideBufferBuilder } from './buffer';\nimport { BigInt64Array } from '../util/compat';\nimport { FixedWidthBuilder, BuilderOptions } from '../builder';\nimport { Int, Int8, Int16, Int32, Int64, Uint8, Uint16, Uint32, Uint64 } from '../type';\n\n/** @ignore */\nexport class IntBuilder<T extends Int = Int, TNull = any> extends FixedWidthBuilder<T, TNull> {\n    public setValue(index: number, value: T['TValue']) {\n        this._values.set(index, value);\n    }\n}\n\n/** @ignore */\nexport class Int8Builder<TNull = any> extends IntBuilder<Int8, TNull> {}\n/** @ignore */\nexport class Int16Builder<TNull = any> extends IntBuilder<Int16, TNull> {}\n/** @ignore */\nexport class Int32Builder<TNull = any> extends IntBuilder<Int32, TNull> {}\n/** @ignore */\nexport class Int64Builder<TNull = any> extends IntBuilder<Int64, TNull> {\n    protected _values: WideBufferBuilder<Int32Array, BigInt64Array>;\n    constructor(options: BuilderOptions<Int64, TNull>) {\n        if (options['nullValues']) {\n            options['nullValues'] = (options['nullValues'] as TNull[]).map(toBigInt);\n        }\n        super(options);\n        this._values = new WideBufferBuilder(new Int32Array(0), 2);\n    }\n    public get values64() { return this._values.buffer64; }\n    public isValid(value: Int32Array | bigint | TNull) { return super.isValid(toBigInt(value)); }\n}\n\n/** @ignore */\nexport class Uint8Builder<TNull = any> extends IntBuilder<Uint8, TNull> {}\n/** @ignore */\nexport class Uint16Builder<TNull = any> extends IntBuilder<Uint16, TNull> {}\n/** @ignore */\nexport class Uint32Builder<TNull = any> extends IntBuilder<Uint32, TNull> {}\n/** @ignore */\nexport class Uint64Builder<TNull = any> extends IntBuilder<Uint64, TNull> {\n    protected _values: WideBufferBuilder<Uint32Array, BigUint64Array>;\n    constructor(options: BuilderOptions<Uint64, TNull>) {\n        if (options['nullValues']) {\n            options['nullValues'] = (options['nullValues'] as TNull[]).map(toBigInt);\n        }\n        super(options);\n        this._values = new WideBufferBuilder(new Uint32Array(0), 2);\n    }\n    public get values64() { return this._values.buffer64; }\n    public isValid(value: Uint32Array | bigint | TNull) { return super.isValid(toBigInt(value)); }\n}\n\nconst toBigInt = ((memo: any) => (value: any) => {\n    if (ArrayBuffer.isView(value)) {\n        memo.buffer = value.buffer;\n        memo.byteOffset = value.byteOffset;\n        memo.byteLength = value.byteLength;\n        value = bignumToBigInt(memo);\n        memo.buffer = null;\n    }\n    return value;\n})({ 'BigIntArray': BigInt64Array });\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { FixedWidthBuilder } from '../builder';\nimport { Time, TimeSecond, TimeMillisecond, TimeMicrosecond, TimeNanosecond } from '../type';\n\n/** @ignore */\nexport class TimeBuilder<T extends Time = Time, TNull = any> extends FixedWidthBuilder<T, TNull> {}\n/** @ignore */\nexport class TimeSecondBuilder<TNull = any> extends TimeBuilder<TimeSecond, TNull> {}\n/** @ignore */\nexport class TimeMillisecondBuilder<TNull = any> extends TimeBuilder<TimeMillisecond, TNull> {}\n/** @ignore */\nexport class TimeMicrosecondBuilder<TNull = any> extends TimeBuilder<TimeMicrosecond, TNull> {}\n/** @ignore */\nexport class TimeNanosecondBuilder<TNull = any> extends TimeBuilder<TimeNanosecond, TNull> {}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { FixedWidthBuilder } from '../builder';\nimport { Timestamp, TimestampSecond, TimestampMillisecond, TimestampMicrosecond, TimestampNanosecond } from '../type';\n\n/** @ignore */\nexport class TimestampBuilder<T extends Timestamp = Timestamp, TNull = any> extends FixedWidthBuilder<T, TNull> {}\n/** @ignore */\nexport class TimestampSecondBuilder<TNull = any> extends TimestampBuilder<TimestampSecond, TNull> {}\n/** @ignore */\nexport class TimestampMillisecondBuilder<TNull = any> extends TimestampBuilder<TimestampMillisecond, TNull> {}\n/** @ignore */\nexport class TimestampMicrosecondBuilder<TNull = any> extends TimestampBuilder<TimestampMicrosecond, TNull> {}\n/** @ignore */\nexport class TimestampNanosecondBuilder<TNull = any> extends TimestampBuilder<TimestampNanosecond, TNull> {}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { FixedWidthBuilder } from '../builder';\nimport { Interval, IntervalDayTime, IntervalYearMonth } from '../type';\n\n/** @ignore */\nexport class IntervalBuilder<T extends Interval = Interval, TNull = any> extends FixedWidthBuilder<T, TNull> {}\n/** @ignore */\nexport class IntervalDayTimeBuilder<TNull = any> extends IntervalBuilder<IntervalDayTime, TNull> {}\n/** @ignore */\nexport class IntervalYearMonthBuilder<TNull = any> extends IntervalBuilder<IntervalYearMonth, TNull> {}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Binary } from '../type';\nimport { toUint8Array } from '../util/buffer';\nimport { BufferBuilder } from './buffer';\nimport { VariableWidthBuilder, BuilderOptions } from '../builder';\n\n/** @ignore */\nexport class BinaryBuilder<TNull = any> extends VariableWidthBuilder<Binary, TNull> {\n    constructor(opts: BuilderOptions<Binary, TNull>) {\n        super(opts);\n        this._values = new BufferBuilder(new Uint8Array(0));\n    }\n    public get byteLength(): number {\n        let size = this._pendingLength + (this.length * 4);\n        this._offsets && (size += this._offsets.byteLength);\n        this._values && (size += this._values.byteLength);\n        this._nulls && (size += this._nulls.byteLength);\n        return size;\n    }\n    public setValue(index: number, value: Uint8Array) {\n        return super.setValue(index, toUint8Array(value));\n    }\n    protected _flushPending(pending: Map<number, Uint8Array | undefined>, pendingLength: number) {\n        const offsets = this._offsets;\n        const data = this._values.reserve(pendingLength).buffer;\n        let index = 0, length = 0, offset = 0, value: Uint8Array | undefined;\n        for ([index, value] of pending) {\n            if (value === undefined) {\n                offsets.set(index, 0);\n            } else {\n                length = value.length;\n                data.set(value, offset);\n                offsets.set(index, length);\n                offset += length;\n            }\n        }\n    }\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Utf8 } from '../type';\nimport { encodeUtf8 } from '../util/utf8';\nimport { BinaryBuilder } from './binary';\nimport { BufferBuilder } from './buffer';\nimport { VariableWidthBuilder, BuilderOptions } from '../builder';\n\n/** @ignore */\nexport class Utf8Builder<TNull = any> extends VariableWidthBuilder<Utf8, TNull> {\n    constructor(opts: BuilderOptions<Utf8, TNull>) {\n        super(opts);\n        this._values = new BufferBuilder(new Uint8Array(0));\n    }\n    public get byteLength(): number {\n        let size = this._pendingLength + (this.length * 4);\n        this._offsets && (size += this._offsets.byteLength);\n        this._values && (size += this._values.byteLength);\n        this._nulls && (size += this._nulls.byteLength);\n        return size;\n    }\n    public setValue(index: number, value: string) {\n        return super.setValue(index, encodeUtf8(value) as any);\n    }\n    // @ts-ignore\n    protected _flushPending(pending: Map<number, Uint8Array | undefined>, pendingLength: number): void {}\n}\n\n(Utf8Builder.prototype as any)._flushPending = (BinaryBuilder.prototype as any)._flushPending;\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Vector } from '../vector';\nimport { DataType } from '../type';\n\n/** @ignore */\nexport class Run<T extends DataType = any, TNull = any> {\n    // @ts-ignore\n    protected _values: ArrayLike<T['TValue'] | TNull>;\n    public get length() { return this._values.length; }\n    public get(index: number) { return this._values[index]; }\n    public clear() { this._values = <any> null; return this; }\n    public bind(values: Vector<T> | ArrayLike<T['TValue'] | TNull>) {\n        if (values instanceof Vector) {\n            return values;\n        }\n        this._values = values;\n        return this as any;\n    }\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Vector } from '../vector';\nimport { StructVector } from './struct';\nimport { valueToString } from '../util/pretty';\nimport { DataType, Struct, RowLike } from '../type';\n\n/** @ignore */ const kParent = Symbol.for('parent');\n/** @ignore */ const kRowIndex = Symbol.for('rowIndex');\n/** @ignore */ const kKeyToIdx = Symbol.for('keyToIdx');\n/** @ignore */ const kIdxToVal = Symbol.for('idxToVal');\n/** @ignore */ const kCustomInspect = Symbol.for('nodejs.util.inspect.custom');\n\nabstract class Row<K extends PropertyKey = any, V = any> implements Map<K, V> {\n\n    public readonly size: number;\n    public readonly [Symbol.toStringTag]: string;\n\n    protected [kRowIndex]: number;\n    protected [kParent]: Vector<Struct>;\n    protected [kKeyToIdx]: Map<K, number>;\n    protected [kIdxToVal]: V[];\n\n    constructor(parent: Vector<Struct>, numKeys: number) {\n        this[kParent] = parent;\n        this.size = numKeys;\n    }\n\n    public abstract keys(): IterableIterator<K>;\n    public abstract values(): IterableIterator<V>;\n    public abstract getKey(idx: number): K;\n    public abstract getIndex(key: K): number;\n    public abstract getValue(idx: number): V;\n    public abstract setValue(idx: number, val: V): void;\n\n    public entries() { return this[Symbol.iterator](); }\n\n    public has(key: K) { return this.get(key) !== undefined; }\n\n    public get(key: K) {\n        let val = undefined;\n        if (key !== null && key !== undefined) {\n            const ktoi = this[kKeyToIdx] || (this[kKeyToIdx] = new Map());\n            let idx = ktoi.get(key);\n            if (idx !== undefined) {\n                const itov = this[kIdxToVal] || (this[kIdxToVal] = new Array(this.size));\n                ((val = itov[idx]) !== undefined) || (itov[idx] = val = this.getValue(idx));\n            } else if ((idx = this.getIndex(key)) > -1) {\n                ktoi.set(key, idx);\n                const itov = this[kIdxToVal] || (this[kIdxToVal] = new Array(this.size));\n                ((val = itov[idx]) !== undefined) || (itov[idx] = val = this.getValue(idx));\n            }\n        }\n        return val;\n    }\n\n    public set(key: K, val: V) {\n        if (key !== null && key !== undefined) {\n            const ktoi = this[kKeyToIdx] || (this[kKeyToIdx] = new Map());\n            let idx = ktoi.get(key);\n            if (idx === undefined) {\n                ktoi.set(key, idx = this.getIndex(key));\n            }\n            if (idx > -1) {\n                const itov = this[kIdxToVal] || (this[kIdxToVal] = new Array(this.size));\n                itov[idx] = <any> this.setValue(idx, val);\n            }\n        }\n        return this;\n    }\n\n    public clear(): void { throw new Error(`Clearing ${this[Symbol.toStringTag]} not supported.`); }\n\n    public delete(_: K): boolean { throw new Error(`Deleting ${this[Symbol.toStringTag]} values not supported.`); }\n\n    public *[Symbol.iterator](): IterableIterator<[K, V]> {\n\n        const ki = this.keys();\n        const vi = this.values();\n        const ktoi = this[kKeyToIdx] || (this[kKeyToIdx] = new Map());\n        const itov = this[kIdxToVal] || (this[kIdxToVal] = new Array(this.size));\n\n        for (let k: K, v: V, i = 0, kr: IteratorResult<K>, vr: IteratorResult<V>;\n            !((kr = ki.next()).done || (vr = vi.next()).done);\n            ++i\n        ) {\n            k = kr.value;\n            v = vr.value;\n            itov[i] = v;\n            ktoi.has(k) || ktoi.set(k, i);\n            yield [k, v];\n        }\n    }\n\n    public forEach(callbackfn: (value: V, key: K, map: Map<K, V>) => void, thisArg?: any): void {\n\n        const ki = this.keys();\n        const vi = this.values();\n        const callback = thisArg === undefined ? callbackfn :\n            (v: V, k: K, m: Map<K, V>) => callbackfn.call(thisArg, v, k, m);\n        const ktoi = this[kKeyToIdx] || (this[kKeyToIdx] = new Map());\n        const itov = this[kIdxToVal] || (this[kIdxToVal] = new Array(this.size));\n\n        for (let k: K, v: V, i = 0, kr: IteratorResult<K>, vr: IteratorResult<V>;\n            !((kr = ki.next()).done || (vr = vi.next()).done);\n            ++i\n        ) {\n            k = kr.value;\n            v = vr.value;\n            itov[i] = v;\n            ktoi.has(k) || ktoi.set(k, i);\n            callback(v, k, this);\n        }\n    }\n\n    public toArray() { return [...this.values()]; }\n    public toJSON() {\n        const obj = {} as any;\n        this.forEach((val, key) => obj[key] = val);\n        return obj;\n    }\n\n    public inspect() { return this.toString(); }\n    public [kCustomInspect]() { return this.toString(); }\n    public toString() {\n        const str: string[] = [];\n        this.forEach((val, key) => {\n            key = valueToString(key);\n            val = valueToString(val);\n            str.push(`${key}: ${val}`);\n        });\n        return `{ ${str.join(', ')} }`;\n    }\n\n    protected static [Symbol.toStringTag] = ((proto: Row) => {\n        Object.defineProperties(proto, {\n            'size': { writable: true, enumerable: false, configurable: false, value: 0 },\n            [kParent]: { writable: true, enumerable: false, configurable: false, value: null },\n            [kRowIndex]: { writable: true, enumerable: false, configurable: false, value: -1 },\n        });\n        return (proto as any)[Symbol.toStringTag] = 'Row';\n    })(Row.prototype);\n}\n\nexport class MapRow<K extends DataType = any, V extends DataType = any> extends Row<K['TValue'], V['TValue'] | null> {\n    constructor(slice: Vector<Struct<{ key: K, value: V }>>) {\n        super(slice, slice.length);\n        return createRowProxy(this);\n    }\n    public keys() {\n        return this[kParent].getChildAt(0)![Symbol.iterator]();\n    }\n    public values() {\n        return this[kParent].getChildAt(1)![Symbol.iterator]();\n    }\n    public getKey(idx: number): K['TValue'] {\n        return this[kParent].getChildAt(0)!.get(idx);\n    }\n    public getIndex(key: K['TValue']): number {\n        return this[kParent].getChildAt(0)!.indexOf(key);\n    }\n    public getValue(index: number): V['TValue'] | null {\n        return this[kParent].getChildAt(1)!.get(index);\n    }\n    public setValue(index: number, value: V['TValue'] | null): void {\n        this[kParent].getChildAt(1)!.set(index, value);\n    }\n}\n\nexport class StructRow<T extends { [key: string]: DataType } = any> extends Row<keyof T, T[keyof T]['TValue'] | null> {\n    constructor(parent: StructVector<T>) {\n        super(parent, parent.type.children.length);\n        return defineRowProxyProperties(this);\n    }\n    public *keys() {\n        for (const field of this[kParent].type.children) {\n            yield field.name as keyof T;\n        }\n    }\n    public *values() {\n        for (const field of this[kParent].type.children) {\n            yield (this as RowLike<T>)[field.name];\n        }\n    }\n    public getKey(idx: number): keyof T {\n        return this[kParent].type.children[idx].name as keyof T;\n    }\n    public getIndex(key: keyof T): number {\n        return this[kParent].type.children.findIndex((f) => f.name === key);\n    }\n    public getValue(index: number): T[keyof T]['TValue'] | null {\n        return this[kParent].getChildAt(index)!.get(this[kRowIndex]);\n    }\n    public setValue(index: number, value: T[keyof T]['TValue'] | null): void {\n        return this[kParent].getChildAt(index)!.set(this[kRowIndex], value);\n    }\n}\n\nObject.setPrototypeOf(Row.prototype, Map.prototype);\n\n/** @ignore */\nconst defineRowProxyProperties = (() => {\n    const desc = { enumerable: true, configurable: false, get: null as any, set: null as any };\n    return <T extends Row>(row: T) => {\n        let idx = -1, ktoi = row[kKeyToIdx] || (row[kKeyToIdx] = new Map());\n        const getter = (key: any) => function(this: T) { return this.get(key); };\n        const setter = (key: any) => function(this: T, val: any) { return this.set(key, val); };\n        for (const key of row.keys()) {\n            ktoi.set(key, ++idx);\n            desc.get = getter(key);\n            desc.set = setter(key);\n            row.hasOwnProperty(key) || (desc.enumerable = true, Object.defineProperty(row, key, desc));\n            row.hasOwnProperty(idx) || (desc.enumerable = false, Object.defineProperty(row, idx, desc));\n        }\n        desc.get = desc.set = null;\n        return row;\n    };\n})();\n\n/** @ignore */\nconst createRowProxy = (() => {\n    if (typeof Proxy === 'undefined') {\n        return defineRowProxyProperties;\n    }\n    const has = Row.prototype.has;\n    const get = Row.prototype.get;\n    const set = Row.prototype.set;\n    const getKey = Row.prototype.getKey;\n    const RowProxyHandler: ProxyHandler<Row> = {\n        isExtensible() { return false; },\n        deleteProperty() { return false; },\n        preventExtensions() { return true; },\n        ownKeys(row: Row) { return [...row.keys()].map((x) => `${x}`); },\n        has(row: Row, key: PropertyKey) {\n            switch (key) {\n                case 'getKey': case 'getIndex': case 'getValue': case 'setValue': case 'toArray': case 'toJSON': case 'inspect':\n                case 'constructor': case 'isPrototypeOf': case 'propertyIsEnumerable': case 'toString': case 'toLocaleString': case 'valueOf':\n                case 'size': case 'has': case 'get': case 'set': case 'clear': case 'delete': case 'keys': case 'values': case 'entries': case 'forEach':\n                case '__proto__': case '__defineGetter__': case '__defineSetter__': case 'hasOwnProperty': case '__lookupGetter__': case '__lookupSetter__':\n                case Symbol.iterator: case Symbol.toStringTag: case kParent: case kRowIndex: case kIdxToVal: case kKeyToIdx: case kCustomInspect:\n                    return true;\n            }\n            if (typeof key === 'number' && !row.has(key)) {\n                key = row.getKey(key);\n            }\n            return row.has(key);\n        },\n        get(row: Row, key: PropertyKey, receiver: any) {\n            switch (key) {\n                case 'getKey': case 'getIndex': case 'getValue': case 'setValue': case 'toArray': case 'toJSON': case 'inspect':\n                case 'constructor': case 'isPrototypeOf': case 'propertyIsEnumerable': case 'toString': case 'toLocaleString': case 'valueOf':\n                case 'size': case 'has': case 'get': case 'set': case 'clear': case 'delete': case 'keys': case 'values': case 'entries': case 'forEach':\n                case '__proto__': case '__defineGetter__': case '__defineSetter__': case 'hasOwnProperty': case '__lookupGetter__': case '__lookupSetter__':\n                case Symbol.iterator: case Symbol.toStringTag: case kParent: case kRowIndex: case kIdxToVal: case kKeyToIdx: case kCustomInspect:\n                    return Reflect.get(row, key, receiver);\n            }\n            if (typeof key === 'number' && !has.call(receiver, key)) {\n                key = getKey.call(receiver, key);\n            }\n            return get.call(receiver, key);\n        },\n        set(row: Row, key: PropertyKey, val: any, receiver: any) {\n            switch (key) {\n                case kParent: case kRowIndex: case kIdxToVal: case kKeyToIdx:\n                    return Reflect.set(row, key, val, receiver);\n                case 'getKey': case 'getIndex': case 'getValue': case 'setValue': case 'toArray': case 'toJSON': case 'inspect':\n                case 'constructor': case 'isPrototypeOf': case 'propertyIsEnumerable': case 'toString': case 'toLocaleString': case 'valueOf':\n                case 'size': case 'has': case 'get': case 'set': case 'clear': case 'delete': case 'keys': case 'values': case 'entries': case 'forEach':\n                case '__proto__': case '__defineGetter__': case '__defineSetter__': case 'hasOwnProperty': case '__lookupGetter__': case '__lookupSetter__':\n                case Symbol.iterator: case Symbol.toStringTag:\n                    return false;\n            }\n            if (typeof key === 'number' && !has.call(receiver, key)) {\n                key = getKey.call(receiver, key);\n            }\n            return has.call(receiver, key) ? !!set.call(receiver, key, val) : false;\n        },\n    };\n    return <T extends Row>(row: T) => new Proxy(row, RowProxyHandler) as T;\n})();\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Vector } from '../vector';\nimport { MapRow, StructRow } from '../vector/row';\nimport { compareArrayLike } from '../util/buffer';\nimport { BigInt, BigIntAvailable } from './compat';\n\n/** @ignore */\ntype RangeLike = { length: number; stride?: number };\n/** @ignore */\ntype ClampThen<T extends RangeLike> = (source: T, index: number) => any;\n/** @ignore */\ntype ClampRangeThen<T extends RangeLike> = (source: T, offset: number, length: number) => any;\n\nexport function clampIndex<T extends RangeLike>(source: T, index: number): number;\nexport function clampIndex<T extends RangeLike, N extends ClampThen<T> = ClampThen<T>>(source: T, index: number, then: N): ReturnType<N>;\n/** @ignore */\nexport function clampIndex<T extends RangeLike, N extends ClampThen<T> = ClampThen<T>>(source: T, index: number, then?: N) {\n    const length = source.length;\n    const adjust = index > -1 ? index : (length + (index % length));\n    return then ? then(source, adjust) : adjust;\n}\n\n/** @ignore */\nlet tmp: number;\nexport function clampRange<T extends RangeLike>(source: T, begin: number | undefined, end: number | undefined): [number, number];\nexport function clampRange<T extends RangeLike, N extends ClampRangeThen<T> = ClampRangeThen<T>>(source: T, begin: number | undefined, end: number | undefined, then: N): ReturnType<N>;\n/** @ignore */\nexport function clampRange<T extends RangeLike, N extends ClampRangeThen<T> = ClampRangeThen<T>>(source: T, begin: number | undefined, end: number | undefined, then?: N) {\n\n    // Adjust args similar to Array.prototype.slice. Normalize begin/end to\n    // clamp between 0 and length, and wrap around on negative indices, e.g.\n    // slice(-1, 5) or slice(5, -1)\n    let { length: len = 0 } = source;\n    let lhs = typeof begin !== 'number' ? 0 : begin;\n    let rhs = typeof end !== 'number' ? len : end;\n    // wrap around on negative start/end positions\n    (lhs < 0) && (lhs = ((lhs % len) + len) % len);\n    (rhs < 0) && (rhs = ((rhs % len) + len) % len);\n    // ensure lhs <= rhs\n    (rhs < lhs) && (tmp = lhs, lhs = rhs, rhs = tmp);\n     // ensure rhs <= length\n    (rhs > len) && (rhs = len);\n\n    return then ? then(source, lhs, rhs) : [lhs, rhs];\n}\n\nconst big0 = BigIntAvailable ? BigInt(0) : 0;\nconst isNaNFast = (value: any) => value !== value;\n\n/** @ignore */\nexport function createElementComparator(search: any) {\n    let typeofSearch = typeof search;\n    // Compare primitives\n    if (typeofSearch !== 'object' || search === null) {\n        // Compare NaN\n        if (isNaNFast(search)) {\n            return isNaNFast;\n        }\n        return typeofSearch !== 'bigint'\n            ? (value: any) => value === search\n            : (value: any) => (big0 + value) === search;\n    }\n    // Compare Dates\n    if (search instanceof Date) {\n        const valueOfSearch = search.valueOf();\n        return (value: any) => value instanceof Date ? (value.valueOf() === valueOfSearch) : false;\n    }\n    // Compare TypedArrays\n    if (ArrayBuffer.isView(search)) {\n        return (value: any) => value ? compareArrayLike(search, value) : false;\n    }\n    // Compare Maps and Rows\n    if (search instanceof Map) { return creatMapComparator(search); }\n    // Compare Array-likes\n    if (Array.isArray(search)) { return createArrayLikeComparator(search); }\n    // Compare Vectors\n    if (search instanceof Vector) { return createVectorComparator(search); }\n    // Compare non-empty Objects\n    return createObjectComparator(search);\n}\n\n/** @ignore */\nfunction createArrayLikeComparator(lhs: ArrayLike<any>) {\n    const comparators = [] as ((x: any) => boolean)[];\n    for (let i = -1, n = lhs.length; ++i < n;) {\n        comparators[i] = createElementComparator(lhs[i]);\n    }\n    return createSubElementsComparator(comparators);\n}\n\n/** @ignore */\nfunction creatMapComparator(lhs: Map<any, any>) {\n    let i = -1;\n    const comparators = [] as ((x: any) => boolean)[];\n    lhs.forEach((v) => comparators[++i] = createElementComparator(v));\n    return createSubElementsComparator(comparators);\n}\n\n/** @ignore */\nfunction createVectorComparator(lhs: Vector<any>) {\n    const comparators = [] as ((x: any) => boolean)[];\n    for (let i = -1, n = lhs.length; ++i < n;) {\n        comparators[i] = createElementComparator(lhs.get(i));\n    }\n    return createSubElementsComparator(comparators);\n}\n\n/** @ignore */\nfunction createObjectComparator(lhs: any) {\n    const keys = Object.keys(lhs);\n    // Only compare non-empty Objects\n    if (keys.length === 0) { return () => false; }\n    const comparators = [] as ((x: any) => boolean)[];\n    for (let i = -1, n = keys.length; ++i < n;) {\n        comparators[i] = createElementComparator(lhs[keys[i]]);\n    }\n    return createSubElementsComparator(comparators, keys);\n}\n\nfunction createSubElementsComparator(comparators: ((x: any) => boolean)[], keys?: Iterable<string>) {\n    return (rhs: any) => {\n        if (!rhs || typeof rhs !== 'object') {\n            return false;\n        }\n        switch (rhs.constructor) {\n            case Array: return compareArray(comparators, rhs);\n            case Map:\n            case MapRow:\n            case StructRow:\n                return compareObject(comparators, rhs, rhs.keys());\n            case Object:\n            case undefined: // support `Object.create(null)` objects\n                return compareObject(comparators, rhs, keys || Object.keys(rhs));\n        }\n        return rhs instanceof Vector ? compareVector(comparators, rhs) : false;\n    };\n}\n\nfunction compareArray(comparators: ((x: any) => boolean)[], arr: any[]) {\n    const n = comparators.length;\n    if (arr.length !== n) { return false; }\n    for (let i = -1; ++i < n;) {\n        if (!(comparators[i](arr[i]))) { return false; }\n    }\n    return true;\n}\n\nfunction compareVector(comparators: ((x: any) => boolean)[], vec: Vector) {\n    const n = comparators.length;\n    if (vec.length !== n) { return false; }\n    for (let i = -1; ++i < n;) {\n        if (!(comparators[i](vec.get(i)))) { return false; }\n    }\n    return true;\n}\n\nfunction compareObject(comparators: ((x: any) => boolean)[], obj: Map<any, any>, keys: Iterable<string>) {\n\n    const lKeyItr = keys[Symbol.iterator]();\n    const rKeyItr = obj instanceof Map ? obj.keys() : Object.keys(obj)[Symbol.iterator]();\n    const rValItr = obj instanceof Map ? obj.values() : Object.values(obj)[Symbol.iterator]();\n\n    let i = 0;\n    let n = comparators.length;\n    let rVal = rValItr.next();\n    let lKey = lKeyItr.next();\n    let rKey = rKeyItr.next();\n\n    for (; i < n && !lKey.done && !rKey.done && !rVal.done;\n         ++i, lKey = lKeyItr.next(), rKey = rKeyItr.next(), rVal = rValItr.next()) {\n        if (lKey.value !== rKey.value || !comparators[i](rVal.value)) {\n            break;\n        }\n    }\n    if (i === n && lKey.done && rKey.done && rVal.done) {\n        return true;\n    }\n    lKeyItr.return && lKeyItr.return();\n    rKeyItr.return && rKeyItr.return();\n    rValItr.return && rValItr.return();\n    return false;\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Data } from '../data';\nimport { Field } from '../schema';\nimport { clampRange } from '../util/vector';\nimport { DataType, Dictionary } from '../type';\nimport { selectChunkArgs } from '../util/args';\nimport { DictionaryVector } from './dictionary';\nimport { AbstractVector, Vector } from '../vector';\nimport { Clonable, Sliceable, Applicative } from '../vector';\n\n/** @ignore */\ntype ChunkedDict<T extends DataType> = T extends Dictionary ? Vector<T['dictionary']> : null | never;\n/** @ignore */\ntype ChunkedKeys<T extends DataType> = T extends Dictionary ? Vector<T['indices']> | Chunked<T['indices']> : null | never;\n\n/** @ignore */\nexport type SearchContinuation<T extends Chunked> = (column: T, chunkIndex: number, valueIndex: number) => any;\n\n/** @ignore */\nexport class Chunked<T extends DataType = any>\n    extends AbstractVector<T>\n    implements Clonable<Chunked<T>>,\n               Sliceable<Chunked<T>>,\n               Applicative<T, Chunked<T>> {\n\n    /** @nocollapse */\n    public static flatten<T extends DataType>(...vectors: (Vector<T> | Vector<T>[])[]) {\n        return selectChunkArgs<Vector<T>>(Vector, vectors);\n    }\n\n    /** @nocollapse */\n    public static concat<T extends DataType>(...vectors: (Vector<T> | Vector<T>[])[]) {\n        const chunks = Chunked.flatten<T>(...vectors);\n        return new Chunked<T>(chunks[0].type, chunks);\n    }\n\n    protected _type: T;\n    protected _length: number;\n    protected _chunks: Vector<T>[];\n    protected _numChildren: number;\n    protected _children?: Chunked[];\n    protected _nullCount: number = -1;\n    protected _chunkOffsets: Uint32Array;\n\n    constructor(type: T, chunks: Vector<T>[] = [], offsets = calculateOffsets(chunks)) {\n        super();\n        this._type = type;\n        this._chunks = chunks;\n        this._chunkOffsets = offsets;\n        this._length = offsets[offsets.length - 1];\n        this._numChildren = (this._type.children || []).length;\n    }\n\n    public get type() { return this._type; }\n    public get length() { return this._length; }\n    public get chunks() { return this._chunks; }\n    public get typeId(): T['TType'] { return this._type.typeId; }\n    public get VectorName() { return `Chunked<${this._type}>`; }\n    public get data(): Data<T> {\n        return this._chunks[0] ? this._chunks[0].data : <any> null;\n    }\n\n    public get ArrayType() { return this._type.ArrayType; }\n    public get numChildren() { return this._numChildren; }\n    public get stride() { return this._chunks[0] ? this._chunks[0].stride : 1; }\n    public get byteLength(): number {\n        return this._chunks.reduce((byteLength, chunk) => byteLength + chunk.byteLength, 0);\n    }\n    public get nullCount() {\n        let nullCount = this._nullCount;\n        if (nullCount < 0) {\n            this._nullCount = nullCount = this._chunks.reduce((x, { nullCount }) => x + nullCount, 0);\n        }\n        return nullCount;\n    }\n\n    protected _indices?: ChunkedKeys<T>;\n    public get indices(): ChunkedKeys<T> | null {\n        if (DataType.isDictionary(this._type)) {\n            if (!this._indices) {\n                const chunks = (<any> this._chunks) as DictionaryVector<T, any>[];\n                this._indices = (chunks.length === 1\n                    ? chunks[0].indices\n                    : Chunked.concat(...chunks.map((x) => x.indices))) as ChunkedKeys<T>;\n            }\n            return this._indices;\n        }\n        return null;\n    }\n    public get dictionary(): ChunkedDict<T> | null {\n        if (DataType.isDictionary(this._type)) {\n            return this._chunks[this._chunks.length - 1].data.dictionary as ChunkedDict<T>;\n        }\n        return null;\n    }\n\n    public *[Symbol.iterator](): IterableIterator<T['TValue'] | null> {\n        for (const chunk of this._chunks) {\n            yield* chunk;\n        }\n    }\n\n    public clone(chunks = this._chunks): Chunked<T> {\n        return new Chunked(this._type, chunks);\n    }\n\n    public concat(...others: Vector<T>[]): Chunked<T> {\n        return this.clone(Chunked.flatten(this, ...others));\n    }\n\n    public slice(begin?: number, end?: number): Chunked<T> {\n        return clampRange(this, begin, end, this._sliceInternal);\n    }\n\n    public getChildAt<R extends DataType = any>(index: number): Chunked<R> | null {\n\n        if (index < 0 || index >= this._numChildren) { return null; }\n\n        let columns = this._children || (this._children = []);\n        let child: Chunked<R>, field: Field<R>, chunks: Vector<R>[];\n\n        if (child = columns[index]) { return child; }\n        if (field = ((this._type.children || [])[index] as Field<R>)) {\n            chunks = this._chunks\n                .map((vector) => vector.getChildAt<R>(index))\n                .filter((vec): vec is Vector<R> => vec != null);\n            if (chunks.length > 0) {\n                return (columns[index] = new Chunked<R>(field.type, chunks));\n            }\n        }\n\n        return null;\n    }\n\n    public search(index: number): [number, number] | null;\n    public search<N extends SearchContinuation<Chunked<T>>>(index: number, then?: N): ReturnType<N>;\n    public search<N extends SearchContinuation<Chunked<T>>>(index: number, then?: N) {\n        let idx = index;\n        // binary search to find the child vector and value indices\n        let offsets = this._chunkOffsets, rhs = offsets.length - 1;\n        // return early if out of bounds, or if there's just one child\n        if (idx < 0            ) { return null; }\n        if (idx >= offsets[rhs]) { return null; }\n        if (rhs <= 1           ) { return then ? then(this, 0, idx) : [0, idx]; }\n        let lhs = 0, pos = 0, mid = 0;\n        do {\n            if (lhs + 1 === rhs) {\n                return then ? then(this, lhs, idx - pos) : [lhs, idx - pos];\n            }\n            mid = lhs + ((rhs - lhs) / 2) | 0;\n            idx >= offsets[mid] ? (lhs = mid) : (rhs = mid);\n        } while (idx < offsets[rhs] && idx >= (pos = offsets[lhs]));\n        return null;\n    }\n\n    public isValid(index: number): boolean {\n        return !!this.search(index, this.isValidInternal);\n    }\n\n    public get(index: number): T['TValue'] | null {\n        return this.search(index, this.getInternal);\n    }\n\n    public set(index: number, value: T['TValue'] | null): void {\n        this.search(index, ({ chunks }, i, j) => chunks[i].set(j, value));\n    }\n\n    public indexOf(element: T['TValue'], offset?: number): number {\n        if (offset && typeof offset === 'number') {\n            return this.search(offset, (self, i, j) => this.indexOfInternal(self, i, j, element))!;\n        }\n        return this.indexOfInternal(this, 0, Math.max(0, offset || 0), element);\n    }\n\n    public toArray(): T['TArray'] {\n        const { chunks } = this;\n        const n = chunks.length;\n        let ArrayType: any = this._type.ArrayType;\n        if (n <= 0) { return new ArrayType(0); }\n        if (n <= 1) { return chunks[0].toArray(); }\n        let len = 0, src = new Array(n);\n        for (let i = -1; ++i < n;) {\n            len += (src[i] = chunks[i].toArray()).length;\n        }\n        if (ArrayType !== src[0].constructor) {\n            ArrayType = src[0].constructor;\n        }\n        let dst = new ArrayType(len);\n        let set: any = ArrayType === Array ? arraySet : typedSet;\n        for (let i = -1, idx = 0; ++i < n;) {\n            idx = set(src[i], dst, idx);\n        }\n        return dst;\n    }\n\n    protected getInternal({ _chunks }: Chunked<T>, i: number, j: number) { return _chunks[i].get(j); }\n    protected isValidInternal({ _chunks }: Chunked<T>, i: number, j: number) { return _chunks[i].isValid(j); }\n    protected indexOfInternal({ _chunks }: Chunked<T>, chunkIndex: number, fromIndex: number, element: T['TValue']) {\n        let i = chunkIndex - 1, n = _chunks.length;\n        let start = fromIndex, offset = 0, found = -1;\n        while (++i < n) {\n            if (~(found = _chunks[i].indexOf(element, start))) {\n                return offset + found;\n            }\n            start = 0;\n            offset += _chunks[i].length;\n        }\n        return -1;\n    }\n\n    protected _sliceInternal(self: Chunked<T>, begin: number, end: number) {\n        const slices: Vector<T>[] = [];\n        const { chunks, _chunkOffsets: chunkOffsets } = self;\n        for (let i = -1, n = chunks.length; ++i < n;) {\n            const chunk = chunks[i];\n            const chunkLength = chunk.length;\n            const chunkOffset = chunkOffsets[i];\n            // If the child is to the right of the slice boundary, we can stop\n            if (chunkOffset >= end) { break; }\n            // If the child is to the left of of the slice boundary, exclude\n            if (begin >= chunkOffset + chunkLength) { continue; }\n            // If the child is between both left and right boundaries, include w/o slicing\n            if (chunkOffset >= begin && (chunkOffset + chunkLength) <= end) {\n                slices.push(chunk);\n                continue;\n            }\n            // If the child overlaps one of the slice boundaries, include that slice\n            const from = Math.max(0, begin - chunkOffset);\n            const to = Math.min(end - chunkOffset, chunkLength);\n            slices.push(chunk.slice(from, to) as Vector<T>);\n        }\n        return self.clone(slices);\n    }\n}\n\n/** @ignore */\nfunction calculateOffsets<T extends DataType>(vectors: Vector<T>[]) {\n    let offsets = new Uint32Array((vectors || []).length + 1);\n    let offset = offsets[0] = 0, length = offsets.length;\n    for (let index = 0; ++index < length;) {\n        offsets[index] = (offset += vectors[index - 1].length);\n    }\n    return offsets;\n}\n\n/** @ignore */\nconst typedSet = (src: TypedArray, dst: TypedArray, offset: number) => {\n    dst.set(src, offset);\n    return (offset + src.length);\n};\n\n/** @ignore */\nconst arraySet = (src: any[], dst: any[], offset: number) => {\n    let idx = offset;\n    for (let i = -1, n = src.length; ++i < n;) {\n        dst[idx++] = src[i];\n    }\n    return idx;\n};\n\n/** @ignore */\ninterface TypedArray extends ArrayBufferView {\n    readonly length: number;\n    readonly [n: number]: number;\n    set(array: ArrayLike<number>, offset?: number): void;\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Data } from './data';\nimport { Field } from './schema';\nimport { DataType } from './type';\nimport { Vector } from './vector';\nimport { Clonable, Sliceable, Applicative } from './vector';\nimport { VectorCtorArgs, VectorType as V } from './interfaces';\nimport { Chunked, SearchContinuation } from './vector/chunked';\n\nexport interface Column<T extends DataType = any> {\n    typeId: T['TType'];\n    concat(...others: Vector<T>[]): Column<T>;\n    slice(begin?: number, end?: number): Column<T>;\n    clone(chunks?: Vector<T>[], offsets?: Uint32Array): Column<T>;\n}\n\nexport class Column<T extends DataType = any>\n    extends Chunked<T>\n    implements Clonable<Column<T>>,\n               Sliceable<Column<T>>,\n               Applicative<T, Column<T>> {\n\n    public static new<T extends DataType>(field: string | Field<T>, ...chunks: (Vector<T> | Vector<T>[])[]): Column<T>;\n    public static new<T extends DataType>(field: string | Field<T>, data: Data<T>, ...args: VectorCtorArgs<V<T>>): Column<T>;\n    /** @nocollapse */\n    public static new<T extends DataType = any>(field: string | Field<T>, data: Data<T> | Vector<T> | (Data<T> | Vector<T>)[], ...rest: any[]) {\n\n        const chunks = Chunked.flatten<T>(\n            Array.isArray(data) ? [...data, ...rest] :\n            data instanceof Vector ? [data, ...rest] :\n            [Vector.new(data, ...rest)]\n        );\n\n        if (typeof field === 'string') {\n            const type = chunks[0].data.type;\n            field = new Field(field, type, true);\n        } else if (!field.nullable && chunks.some(({ nullCount }) => nullCount > 0)) {\n            field = field.clone({ nullable: true });\n        }\n        return new Column(field, chunks);\n    }\n\n    constructor(field: Field<T>, vectors: Vector<T>[] = [], offsets?: Uint32Array) {\n        vectors = Chunked.flatten<T>(...vectors);\n        super(field.type, vectors, offsets);\n        this._field = field;\n        if (vectors.length === 1 && !(this instanceof SingleChunkColumn)) {\n            return new SingleChunkColumn(field, vectors[0], this._chunkOffsets);\n        }\n    }\n\n    protected _field: Field<T>;\n    protected _children?: Column[];\n\n    public get field() { return this._field; }\n    public get name() { return this._field.name; }\n    public get nullable() { return this._field.nullable; }\n    public get metadata() { return this._field.metadata; }\n\n    public clone(chunks = this._chunks) {\n        return new Column(this._field, chunks);\n    }\n\n    public getChildAt<R extends DataType = any>(index: number): Column<R> | null {\n\n        if (index < 0 || index >= this.numChildren) { return null; }\n\n        let columns = this._children || (this._children = []);\n        let column: Column<R>, field: Field<R>, chunks: Vector<R>[];\n\n        if (column = columns[index]) { return column; }\n        if (field = ((this.type.children || [])[index] as Field<R>)) {\n            chunks = this._chunks\n                .map((vector) => vector.getChildAt<R>(index))\n                .filter((vec): vec is Vector<R> => vec != null);\n            if (chunks.length > 0) {\n                return (columns[index] = new Column<R>(field, chunks));\n            }\n        }\n\n        return null;\n    }\n}\n\n/** @ignore */\nclass SingleChunkColumn<T extends DataType = any> extends Column<T> {\n    protected _chunk: Vector<T>;\n    constructor(field: Field<T>, vector: Vector<T>, offsets?: Uint32Array) {\n        super(field, [vector], offsets);\n        this._chunk = vector;\n    }\n    public search(index: number): [number, number] | null;\n    public search<N extends SearchContinuation<Chunked<T>>>(index: number, then?: N): ReturnType<N>;\n    public search<N extends SearchContinuation<Chunked<T>>>(index: number, then?: N) {\n        return then ? then(this, 0, index) : [0, index];\n    }\n    public isValid(index: number): boolean {\n        return this._chunk.isValid(index);\n    }\n    public get(index: number): T['TValue'] | null {\n        return this._chunk.get(index);\n    }\n    public set(index: number, value: T['TValue'] | null): void {\n        this._chunk.set(index, value);\n    }\n    public indexOf(element: T['TValue'], offset?: number): number {\n        return this._chunk.indexOf(element, offset);\n    }\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Data } from '../data';\nimport { Field } from '../schema';\nimport { Column } from '../column';\nimport { Vector } from '../vector';\nimport { DataType } from '../type';\nimport { Chunked } from '../vector/chunked';\n\ntype RecordBatchCtor = typeof import('../recordbatch').RecordBatch;\n\nconst isArray = Array.isArray;\n\n/** @ignore */\nexport const selectArgs = <T>(Ctor: any, vals: any[]) => _selectArgs(Ctor, vals, [], 0) as T[];\n/** @ignore */\nexport const selectColumnArgs = <T extends { [key: string]: DataType }>(args: any[]) => {\n    const [fields, values] = _selectFieldArgs<T>(args, [[], []]);\n    return values.map((x, i) =>\n        x instanceof Column ? Column.new(x.field.clone(fields[i]), x) :\n        x instanceof Vector ? Column.new(fields[i], x) as Column<T[keyof T]> :\n                              Column.new(fields[i], [] as Vector<T[keyof T]>[]));\n};\n\n/** @ignore */\nexport const selectFieldArgs = <T extends { [key: string]: DataType }>(args: any[]) => _selectFieldArgs<T>(args, [[], []]);\n/** @ignore */\nexport const selectChunkArgs = <T>(Ctor: any, vals: any[]) => _selectChunkArgs(Ctor, vals, [], 0) as T[];\n/** @ignore */\nexport const selectVectorChildrenArgs = <T extends Vector>(Ctor: RecordBatchCtor, vals: any[]) => _selectVectorChildrenArgs(Ctor, vals, [], 0) as T[];\n/** @ignore */\nexport const selectColumnChildrenArgs = <T extends Column>(Ctor: RecordBatchCtor, vals: any[]) => _selectColumnChildrenArgs(Ctor, vals, [], 0) as T[];\n\n/** @ignore */\nfunction _selectArgs<T>(Ctor: any, vals: any[], res: T[], idx: number) {\n    let value: any, j = idx;\n    let i = -1, n = vals.length;\n    while (++i < n) {\n        if (isArray(value = vals[i])) {\n            j = _selectArgs(Ctor, value, res, j).length;\n        } else if (value instanceof Ctor) { res[j++] = value; }\n    }\n    return res;\n}\n\n/** @ignore */\nfunction _selectChunkArgs<T>(Ctor: any, vals: any[], res: T[], idx: number) {\n    let value: any, j = idx;\n    let i = -1, n = vals.length;\n    while (++i < n) {\n        if (isArray(value = vals[i])) {\n            j = _selectChunkArgs(Ctor, value, res, j).length;\n        } else if (value instanceof Chunked) {\n            j = _selectChunkArgs(Ctor, value.chunks, res, j).length;\n        } else if (value instanceof Ctor) { res[j++] = value; }\n    }\n    return res;\n}\n\n/** @ignore */\nfunction _selectVectorChildrenArgs<T extends Vector>(Ctor: RecordBatchCtor, vals: any[], res: T[], idx: number) {\n    let value: any, j = idx;\n    let i = -1, n = vals.length;\n    while (++i < n) {\n        if (isArray(value = vals[i])) {\n            j = _selectVectorChildrenArgs(Ctor, value, res, j).length;\n        } else if (value instanceof Ctor) {\n            j = _selectArgs(Vector, value.schema.fields.map((_, i) => value.getChildAt(i)!), res, j).length;\n        } else if (value instanceof Vector) { res[j++] = value as T; }\n    }\n    return res;\n}\n\n/** @ignore */\nfunction _selectColumnChildrenArgs<T extends Column>(Ctor: RecordBatchCtor, vals: any[], res: T[], idx: number) {\n    let value: any, j = idx;\n    let i = -1, n = vals.length;\n    while (++i < n) {\n        if (isArray(value = vals[i])) {\n            j = _selectColumnChildrenArgs(Ctor, value, res, j).length;\n        } else if (value instanceof Ctor) {\n            j = _selectArgs(Column, value.schema.fields.map((f, i) => Column.new(f, value.getChildAt(i)!)), res, j).length;\n        } else if (value instanceof Column) { res[j++] = value as T; }\n    }\n    return res;\n}\n\n/** @ignore */\nconst toKeysAndValues = (xs: [any[], any[]], [k, v]: [any, any], i: number) => (xs[0][i] = k, xs[1][i] = v, xs);\n\n/** @ignore */\nfunction _selectFieldArgs<T extends { [key: string]: DataType }>(vals: any[], ret: [Field<T[keyof T]>[], Vector<T[keyof T]>[]]): [Field<T[keyof T]>[], (T[keyof T] | Vector<T[keyof T]>)[]] {\n    let keys: any[], n: number;\n    switch (n = vals.length) {\n        case 0: return ret;\n        case 1:\n            keys = ret[0];\n            if (!(vals[0])) { return ret; }\n            if (isArray(vals[0])) { return _selectFieldArgs(vals[0], ret); }\n            if (!(vals[0] instanceof Data || vals[0] instanceof Vector || vals[0] instanceof DataType)) {\n                [keys, vals] = Object.entries(vals[0]).reduce(toKeysAndValues, ret);\n            }\n            break;\n        default:\n            !isArray(keys = vals[n - 1])\n                ? (vals = isArray(vals[0]) ? vals[0] : vals, keys = [])\n                : (vals = isArray(vals[0]) ? vals[0] : vals.slice(0, n - 1));\n    }\n\n    let fieldIndex = -1;\n    let valueIndex = -1;\n    let idx = -1, len = vals.length;\n    let field: number | string | Field<T[keyof T]>;\n    let val: Vector<T[keyof T]> | Data<T[keyof T]>;\n    let [fields, values] = ret as [Field<T[keyof T]>[], any[]];\n\n    while (++idx < len) {\n        val = vals[idx];\n        if (val instanceof Column && (values[++valueIndex] = val)) {\n            fields[++fieldIndex] = val.field.clone(keys[idx], val.type, true);\n        } else {\n            ({ [idx]: field = idx } = keys);\n            if (val instanceof DataType && (values[++valueIndex] = val)) {\n                fields[++fieldIndex] = Field.new(field, val as DataType, true) as Field<T[keyof T]>;\n            } else if (val && val.type && (values[++valueIndex] = val)) {\n                val instanceof Data && (values[valueIndex] = val = Vector.new(val) as Vector);\n                fields[++fieldIndex] = Field.new(field, val.type, true) as Field<T[keyof T]>;\n            }\n        }\n    }\n    return ret;\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Data } from './data';\nimport { Vector } from './vector';\nimport { DataType } from './type';\nimport { selectArgs } from './util/args';\nimport { selectFieldArgs } from './util/args';\nimport { instance as comparer } from './visitor/typecomparator';\n\ntype VectorMap = { [key: string]: Vector };\ntype Fields<T extends { [key: string]: DataType }> = (keyof T)[] | Field<T[keyof T]>[];\ntype ChildData<T extends { [key: string]: DataType }> = T[keyof T][] | Data<T[keyof T]>[] | Vector<T[keyof T]>[];\n\nexport class Schema<T extends { [key: string]: DataType } = any> {\n\n    public static from<T extends { [key: string]: DataType } = any>(children: T): Schema<T>;\n    public static from<T extends VectorMap = any>(children: T): Schema<{ [P in keyof T]: T[P]['type'] }>;\n    public static from<T extends { [key: string]: DataType } = any>(children: ChildData<T>, fields?: Fields<T>): Schema<T>;\n    /** @nocollapse */\n    public static from(...args: any[]) {\n        return Schema.new(args[0], args[1]);\n    }\n\n    public static new<T extends { [key: string]: DataType } = any>(children: T): Schema<T>;\n    public static new<T extends VectorMap = any>(children: T): Schema<{ [P in keyof T]: T[P]['type'] }>;\n    public static new<T extends { [key: string]: DataType } = any>(children: ChildData<T>, fields?: Fields<T>): Schema<T>;\n    /** @nocollapse */\n    public static new(...args: any[]) {\n        return new Schema(selectFieldArgs(args)[0]);\n    }\n\n    public readonly fields: Field<T[keyof T]>[];\n    public readonly metadata: Map<string, string>;\n    public readonly dictionaries: Map<number, DataType>;\n\n    constructor(fields: Field[] = [],\n                metadata?: Map<string, string> | null,\n                dictionaries?: Map<number, DataType> | null) {\n        this.fields = (fields || []) as Field<T[keyof T]>[];\n        this.metadata = metadata || new Map();\n        if (!dictionaries) {\n            dictionaries = generateDictionaryMap(fields);\n        }\n        this.dictionaries = dictionaries;\n    }\n    public get [Symbol.toStringTag]() { return 'Schema'; }\n    public toString() {\n        return `Schema<{ ${this.fields.map((f, i) => `${i}: ${f}`).join(', ')} }>`;\n    }\n\n    public compareTo(other?: Schema | null): other is Schema<T> {\n        return comparer.compareSchemas(this, other);\n    }\n\n    public select<K extends keyof T = any>(...columnNames: K[]) {\n        const names = columnNames.reduce((xs, x) => (xs[x] = true) && xs, Object.create(null));\n        return new Schema<{ [P in K]: T[P] }>(this.fields.filter((f) => names[f.name]), this.metadata);\n    }\n    public selectAt<K extends T[keyof T] = any>(...columnIndices: number[]) {\n        return new Schema<{ [key: string]: K }>(columnIndices.map((i) => this.fields[i]).filter(Boolean), this.metadata);\n    }\n\n    public assign<R extends { [key: string]: DataType } = any>(schema: Schema<R>): Schema<T & R>;\n    public assign<R extends { [key: string]: DataType } = any>(...fields: (Field<R[keyof R]> | Field<R[keyof R]>[])[]): Schema<T & R>;\n    public assign<R extends { [key: string]: DataType } = any>(...args: (Schema<R> | Field<R[keyof R]> | Field<R[keyof R]>[])[]) {\n\n        const other = args[0] instanceof Schema ? args[0] as Schema<R>\n            : new Schema<R>(selectArgs<Field<R[keyof R]>>(Field, args));\n\n        const curFields = [...this.fields] as Field[];\n        const metadata = mergeMaps(mergeMaps(new Map(), this.metadata), other.metadata);\n        const newFields = other.fields.filter((f2) => {\n            const i = curFields.findIndex((f) => f.name === f2.name);\n            return ~i ? (curFields[i] = f2.clone({\n                metadata: mergeMaps(mergeMaps(new Map(), curFields[i].metadata), f2.metadata)\n            })) && false : true;\n        }) as Field[];\n\n        const newDictionaries = generateDictionaryMap(newFields, new Map());\n\n        return new Schema<T & R>(\n            [...curFields, ...newFields], metadata,\n            new Map([...this.dictionaries, ...newDictionaries])\n        );\n    }\n}\n\nexport class Field<T extends DataType = any> {\n\n    public static new<T extends DataType = any>(props: { name: string | number, type: T, nullable?: boolean, metadata?: Map<string, string> | null }): Field<T>;\n    public static new<T extends DataType = any>(name: string | number | Field<T>, type: T, nullable?: boolean, metadata?: Map<string, string> | null): Field<T>;\n    /** @nocollapse */\n    public static new<T extends DataType = any>(...args: any[]) {\n        let [name, type, nullable, metadata] = args;\n        if (args[0] && typeof args[0] === 'object') {\n            ({ name } = args[0]);\n            (type === undefined) && (type = args[0].type);\n            (nullable === undefined) && (nullable = args[0].nullable);\n            (metadata === undefined) && (metadata = args[0].metadata);\n        }\n        return new Field<T>(`${name}`, type, nullable, metadata);\n    }\n\n    public readonly type: T;\n    public readonly name: string;\n    public readonly nullable: boolean;\n    public readonly metadata: Map<string, string>;\n\n    constructor(name: string, type: T, nullable = false, metadata?: Map<string, string> | null) {\n        this.name = name;\n        this.type = type;\n        this.nullable = nullable;\n        this.metadata = metadata || new Map();\n    }\n\n    public get typeId() { return this.type.typeId; }\n    public get [Symbol.toStringTag]() { return 'Field'; }\n    public toString() { return `${this.name}: ${this.type}`; }\n    public compareTo(other?: Field | null): other is Field<T> {\n        return comparer.compareField(this, other);\n    }\n    public clone<R extends DataType = T>(props: { name?: string | number, type?: R, nullable?: boolean, metadata?: Map<string, string> | null }): Field<R>;\n    public clone<R extends DataType = T>(name?: string | number | Field<T>, type?: R, nullable?: boolean, metadata?: Map<string, string> | null): Field<R>;\n    public clone<R extends DataType = T>(...args: any[]) {\n        let [name, type, nullable, metadata] = args;\n        (!args[0] || typeof args[0] !== 'object')\n            ? ([name = this.name, type = this.type, nullable = this.nullable, metadata = this.metadata] = args)\n            : ({name = this.name, type = this.type, nullable = this.nullable, metadata = this.metadata} = args[0]);\n        return Field.new<R>(name, type, nullable, metadata);\n    }\n}\n\n/** @ignore */\nfunction mergeMaps<TKey, TVal>(m1?: Map<TKey, TVal> | null, m2?: Map<TKey, TVal> | null): Map<TKey, TVal> {\n    return new Map([...(m1 || new Map()), ...(m2 || new Map())]);\n}\n\n/** @ignore */\nfunction generateDictionaryMap(fields: Field[], dictionaries = new Map<number, DataType>()): Map<number, DataType> {\n\n    for (let i = -1, n = fields.length; ++i < n;) {\n        const field = fields[i];\n        const type = field.type;\n        if (DataType.isDictionary(type)) {\n            if (!dictionaries.has(type.id)) {\n                dictionaries.set(type.id, type.dictionary);\n            } else if (dictionaries.get(type.id) !== type.dictionary) {\n                throw new Error(`Cannot create Schema containing two different dictionaries with the same Id`);\n            }\n        }\n        if (type.children && type.children.length > 0) {\n            generateDictionaryMap(type.children, dictionaries);\n        }\n    }\n\n    return dictionaries;\n}\n\n// Add these here so they're picked up by the externs creator\n// in the build, and closure-compiler doesn't minify them away\n(Schema.prototype as any).fields = null;\n(Schema.prototype as any).metadata = null;\n(Schema.prototype as any).dictionaries = null;\n\n(Field.prototype as any).type = null;\n(Field.prototype as any).name = null;\n(Field.prototype as any).nullable = null;\n(Field.prototype as any).metadata = null;\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Run } from './run';\nimport { Field } from '../schema';\nimport { DataType, List } from '../type';\nimport { OffsetsBufferBuilder } from './buffer';\nimport { Builder, BuilderOptions, VariableWidthBuilder } from '../builder';\n\n/** @ignore */\nexport class ListBuilder<T extends DataType = any, TNull = any> extends VariableWidthBuilder<List<T>, TNull> {\n    protected _run = new Run<T, TNull>();\n    protected _offsets: OffsetsBufferBuilder;\n    constructor(opts: BuilderOptions<List<T>, TNull>) {\n        super(opts);\n        this._offsets = new OffsetsBufferBuilder();\n    }\n    public addChild(child: Builder<T>, name = '0') {\n        if (this.numChildren > 0) {\n            throw new Error('ListBuilder can only have one child.');\n        }\n        this.children[this.numChildren] = child;\n        this.type = new List(new Field(name, child.type, true));\n        return this.numChildren - 1;\n    }\n    public clear() {\n        this._run.clear();\n        return super.clear();\n    }\n    protected _flushPending(pending: Map<number, T['TValue'] | undefined>) {\n        const run = this._run;\n        const offsets = this._offsets;\n        const setValue = this._setValue;\n        let index = 0, value: Uint8Array | undefined;\n        for ([index, value] of pending) {\n            if (value === undefined) {\n                offsets.set(index, 0);\n            } else {\n                offsets.set(index, value.length);\n                setValue(this, index, run.bind(value));\n            }\n        }\n    }\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Run } from './run';\nimport { Field } from '../schema';\nimport { Builder } from '../builder';\nimport { DataType, FixedSizeList } from '../type';\n\n/** @ignore */\nexport class FixedSizeListBuilder<T extends DataType = any, TNull = any> extends Builder<FixedSizeList<T>, TNull> {\n    protected _run = new Run<T, TNull>();\n    public setValue(index: number, value: T['TValue']) {\n        super.setValue(index, this._run.bind(value));\n    }\n    public addChild(child: Builder<T>, name = '0') {\n        if (this.numChildren > 0) {\n            throw new Error('FixedSizeListBuilder can only have one child.');\n        }\n        const childIndex = this.children.push(child);\n        this.type = new FixedSizeList(this.type.listSize, new Field(name, child.type, true));\n        return childIndex;\n    }\n    public clear() {\n        this._run.clear();\n        return super.clear();\n    }\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Field } from '../schema';\nimport { DataType, Map_, Struct } from '../type';\nimport { Builder, VariableWidthBuilder } from '../builder';\n\n/** @ignore */ type MapValue<K extends DataType = any, V extends DataType = any> = Map_<K, V>['TValue'];\n/** @ignore */ type MapValues<K extends DataType = any, V extends DataType = any> = Map<number, MapValue<K, V> | undefined>;\n/** @ignore */ type MapValueExt<K extends DataType = any, V extends DataType = any> = MapValue<K, V> | { [key: string]: V } | { [key: number]: V } ;\n\n/** @ignore */\nexport class MapBuilder<K extends DataType = any, V extends DataType = any, TNull = any> extends VariableWidthBuilder<Map_<K, V>, TNull> {\n\n    protected _pending: MapValues<K, V> | undefined;\n    public set(index: number, value: MapValueExt<K, V> | TNull) {\n        return super.set(index, value as MapValue<K, V> | TNull);\n    }\n\n    public setValue(index: number, value: MapValueExt<K, V>) {\n        value = value instanceof Map ? value : new Map(Object.entries(value));\n        const pending = this._pending || (this._pending = new Map() as MapValues<K, V>);\n        const current = pending.get(index);\n        current && (this._pendingLength -= current.size);\n        this._pendingLength += value.size;\n        pending.set(index, value);\n    }\n\n    public addChild(child: Builder<Struct<{ key: K, value: V }>>, name = `${this.numChildren}`) {\n        if (this.numChildren > 0) {\n            throw new Error('ListBuilder can only have one child.');\n        }\n        this.children[this.numChildren] = child;\n        this.type = new Map_<K, V>(new Field(name, child.type, true), this.type.keysSorted);\n        return this.numChildren - 1;\n    }\n\n    protected _flushPending(pending: MapValues<K, V>) {\n        const offsets = this._offsets;\n        const setValue = this._setValue;\n        pending.forEach((value, index) => {\n            if (value === undefined) {\n                offsets.set(index, 0);\n            } else {\n                offsets.set(index, value.size);\n                setValue(this, index, value);\n            }\n        });\n    }\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Field } from '../schema';\nimport { Builder } from '../builder';\nimport { DataType, Struct } from '../type';\n\n/** @ignore */\nexport class StructBuilder<T extends { [key: string]: DataType } = any, TNull = any> extends Builder<Struct<T>, TNull> {\n    public addChild(child: Builder, name = `${this.numChildren}`) {\n        const childIndex = this.children.push(child);\n        this.type = new Struct([...this.type.children, new Field(name, child.type, true)]);\n        return childIndex;\n    }\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Field } from '../schema';\nimport { DataBufferBuilder } from './buffer';\nimport { Builder, BuilderOptions } from '../builder';\nimport { Union, SparseUnion, DenseUnion } from '../type';\n\nexport interface UnionBuilderOptions<T extends Union = any, TNull = any> extends BuilderOptions<T, TNull> {\n    valueToChildTypeId?: (builder: UnionBuilder<T, TNull>, value: any, offset: number) => number;\n}\n\n/** @ignore */\nexport abstract class UnionBuilder<T extends Union, TNull = any> extends Builder<T, TNull> {\n\n    protected _typeIds: DataBufferBuilder<Int8Array>;\n\n    constructor(options: UnionBuilderOptions<T, TNull>) {\n        super(options);\n        this._typeIds = new DataBufferBuilder(new Int8Array(0), 1);\n        if (typeof options['valueToChildTypeId'] === 'function') {\n            this._valueToChildTypeId = options['valueToChildTypeId'];\n        }\n    }\n\n    public get typeIdToChildIndex() { return this.type.typeIdToChildIndex; }\n\n    public append(value: T['TValue'] | TNull, childTypeId?: number) {\n        return this.set(this.length, value, childTypeId);\n    }\n\n    public set(index: number, value: T['TValue'] | TNull, childTypeId?: number) {\n        if (childTypeId === undefined) {\n            childTypeId = this._valueToChildTypeId(this, value, index);\n        }\n        if (this.setValid(index, this.isValid(value))) {\n            this.setValue(index, value, childTypeId);\n        }\n        return this;\n    }\n\n    // @ts-ignore\n    public setValue(index: number, value: T['TValue'], childTypeId?: number) {\n        this._typeIds.set(index, childTypeId!);\n        super.setValue(index, value);\n    }\n\n    // @ts-ignore\n    public addChild(child: Builder, name = `${this.children.length}`) {\n        const childTypeId = this.children.push(child);\n        const { type: { children, mode, typeIds } } = this;\n        const fields = [...children, new Field(name, child.type)];\n        this.type = <T> new Union(mode, [...typeIds, childTypeId], fields);\n        return childTypeId;\n    }\n\n    /** @ignore */\n    // @ts-ignore\n    protected _valueToChildTypeId(builder: UnionBuilder<T, TNull>, value: any, offset: number): number {\n        throw new Error(`Cannot map UnionBuilder value to child typeId. \\\nPass the \\`childTypeId\\` as the second argument to unionBuilder.append(), \\\nor supply a \\`valueToChildTypeId\\` function as part of the UnionBuilder constructor options.`);\n    }\n}\n\n/** @ignore */\nexport class SparseUnionBuilder<T extends SparseUnion, TNull = any> extends UnionBuilder<T, TNull> {}\n/** @ignore */\nexport class DenseUnionBuilder<T extends DenseUnion, TNull = any> extends UnionBuilder<T, TNull> {\n\n    protected _offsets: DataBufferBuilder<Int32Array>;\n\n    constructor(options: UnionBuilderOptions<T, TNull>) {\n        super(options);\n        this._offsets = new DataBufferBuilder(new Int32Array(0));\n    }\n\n    /** @ignore */\n    public setValue(index: number, value: T['TValue'], childTypeId?: number) {\n        const childIndex = this.type.typeIdToChildIndex[childTypeId!];\n        this._offsets.set(index, this.getChildAt(childIndex)!.length);\n        return super.setValue(index, value, childTypeId);\n    }\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Data } from '../data';\nimport { Field } from '../schema';\nimport { Vector } from '../vector';\nimport { Visitor } from '../visitor';\nimport { encodeUtf8 } from '../util/utf8';\nimport { VectorType } from '../interfaces';\nimport { float64ToUint16 } from '../util/math';\nimport { toArrayBufferView } from '../util/buffer';\nimport { Type, UnionMode, Precision, DateUnit, TimeUnit, IntervalUnit } from '../enum';\nimport {\n    DataType, Dictionary,\n    Bool, Null, Utf8, Binary, Decimal, FixedSizeBinary, List, FixedSizeList, Map_, Struct,\n    Float, Float16, Float32, Float64,\n    Int, Uint8, Uint16, Uint32, Uint64, Int8, Int16, Int32, Int64,\n    Date_, DateDay, DateMillisecond,\n    Interval, IntervalDayTime, IntervalYearMonth,\n    Time, TimeSecond, TimeMillisecond, TimeMicrosecond, TimeNanosecond,\n    Timestamp, TimestampSecond, TimestampMillisecond, TimestampMicrosecond, TimestampNanosecond,\n    Union, DenseUnion, SparseUnion,\n} from '../type';\n\n/** @ignore */\nexport interface SetVisitor extends Visitor {\n    visit<T extends VectorType>(node: T, index: number, value: T['TValue']): void;\n    visitMany<T extends VectorType>(nodes: T[], indices: number[], values: T['TValue'][]): void[];\n    getVisitFn<T extends Type>(node: T): (vector: VectorType<T>, index: number, value: VectorType<T>['TValue']) => void;\n    getVisitFn<T extends DataType>(node: VectorType<T> | Data<T> | T): (vector: VectorType<T>, index: number, value: VectorType<T>['TValue']) => void;\n    visitNull                 <T extends Null>                (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitBool                 <T extends Bool>                (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitInt                  <T extends Int>                 (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitInt8                 <T extends Int8>                (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitInt16                <T extends Int16>               (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitInt32                <T extends Int32>               (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitInt64                <T extends Int64>               (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitUint8                <T extends Uint8>               (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitUint16               <T extends Uint16>              (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitUint32               <T extends Uint32>              (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitUint64               <T extends Uint64>              (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitFloat                <T extends Float>               (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitFloat16              <T extends Float16>             (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitFloat32              <T extends Float32>             (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitFloat64              <T extends Float64>             (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitUtf8                 <T extends Utf8>                (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitBinary               <T extends Binary>              (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitFixedSizeBinary      <T extends FixedSizeBinary>     (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitDate                 <T extends Date_>               (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitDateDay              <T extends DateDay>             (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitDateMillisecond      <T extends DateMillisecond>     (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitTimestamp            <T extends Timestamp>           (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitTimestampSecond      <T extends TimestampSecond>     (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitTimestampMillisecond <T extends TimestampMillisecond>(vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitTimestampMicrosecond <T extends TimestampMicrosecond>(vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitTimestampNanosecond  <T extends TimestampNanosecond> (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitTime                 <T extends Time>                (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitTimeSecond           <T extends TimeSecond>          (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitTimeMillisecond      <T extends TimeMillisecond>     (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitTimeMicrosecond      <T extends TimeMicrosecond>     (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitTimeNanosecond       <T extends TimeNanosecond>      (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitDecimal              <T extends Decimal>             (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitList                 <T extends List>                (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitStruct               <T extends Struct>              (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitUnion                <T extends Union>               (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitDenseUnion           <T extends DenseUnion>          (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitSparseUnion          <T extends SparseUnion>         (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitDictionary           <T extends Dictionary>          (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitInterval             <T extends Interval>            (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitIntervalDayTime      <T extends IntervalDayTime>     (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitIntervalYearMonth    <T extends IntervalYearMonth>   (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitFixedSizeList        <T extends FixedSizeList>       (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitMap                  <T extends Map_>                (vector: VectorType<T>, index: number, value: T['TValue']): void;\n}\n\n/** @ignore */\nexport class SetVisitor extends Visitor {}\n\n/** @ignore */\nconst setEpochMsToDays = (data: Int32Array, index: number, epochMs: number) => { data[index] = (epochMs / 86400000) | 0; };\n/** @ignore */\nconst setEpochMsToMillisecondsLong = (data: Int32Array, index: number, epochMs: number) => {\n    data[index] = (epochMs % 4294967296) | 0;\n    data[index + 1] = (epochMs / 4294967296) | 0;\n};\n/** @ignore */\nconst setEpochMsToMicrosecondsLong = (data: Int32Array, index: number, epochMs: number) => {\n    data[index] = ((epochMs * 1000) % 4294967296) | 0;\n    data[index + 1] = ((epochMs * 1000) / 4294967296) | 0;\n};\n/** @ignore */\nconst setEpochMsToNanosecondsLong = (data: Int32Array, index: number, epochMs: number) => {\n    data[index] = ((epochMs * 1000000) % 4294967296) | 0;\n    data[index + 1] = ((epochMs * 1000000) / 4294967296) | 0;\n};\n\n/** @ignore */\nconst setVariableWidthBytes = (values: Uint8Array, valueOffsets: Int32Array, index: number, value: Uint8Array) => {\n    const { [index]: x, [index + 1]: y } = valueOffsets;\n    if (x != null && y != null) {\n        values.set(value.subarray(0, y - x), x);\n    }\n};\n\n/** @ignore */\nconst setBool = <T extends Bool>({ offset, values }: VectorType<T>, index: number, val: boolean) => {\n    const idx = offset + index;\n    val ? (values[idx >> 3] |=  (1 << (idx % 8)))  // true\n        : (values[idx >> 3] &= ~(1 << (idx % 8))); // false\n\n};\n\n/** @ignore */ type Numeric1X = Int8 | Int16 | Int32 | Uint8 | Uint16 | Uint32 | Float32 | Float64;\n/** @ignore */ type Numeric2X = Int64 | Uint64;\n\n/** @ignore */\nconst setDateDay         = <T extends DateDay>        ({ values         }: VectorType<T>, index: number, value: T['TValue']): void => { setEpochMsToDays(values, index, value.valueOf()); };\n/** @ignore */\nconst setDateMillisecond = <T extends DateMillisecond>({ values         }: VectorType<T>, index: number, value: T['TValue']): void => { setEpochMsToMillisecondsLong(values, index * 2, value.valueOf()); };\n/** @ignore */\nconst setNumeric         = <T extends Numeric1X>      ({ stride, values }: VectorType<T>, index: number, value: T['TValue']): void => { values[stride * index] = value; };\n/** @ignore */\nconst setFloat16         = <T extends Float16>        ({ stride, values }: VectorType<T>, index: number, value: T['TValue']): void => { values[stride * index] = float64ToUint16(value); };\n/** @ignore */\nconst setNumericX2       = <T extends Numeric2X>      (vector: VectorType<T>, index: number, value: T['TValue']): void => {\n    switch (typeof value) {\n        case 'bigint': vector.values64[index] = value; break;\n        case 'number': vector.values[index * vector.stride] = value; break;\n        default:\n            const val = value as T['TArray'];\n            const { stride, ArrayType } = vector;\n            const long = toArrayBufferView<T['TArray']>(ArrayType, val);\n            vector.values.set(long.subarray(0, stride), stride * index);\n    }\n};\n/** @ignore */\nconst setFixedSizeBinary = <T extends FixedSizeBinary>({ stride, values }: VectorType<T>, index: number, value: T['TValue']): void => { values.set(value.subarray(0, stride), stride * index); };\n\n/** @ignore */\nconst setBinary = <T extends Binary>({ values, valueOffsets }: VectorType<T>, index: number, value: T['TValue']) => setVariableWidthBytes(values, valueOffsets, index, value);\n/** @ignore */\nconst setUtf8 = <T extends Utf8>({ values, valueOffsets }: VectorType<T>, index: number, value: T['TValue']) => {\n    setVariableWidthBytes(values, valueOffsets, index, encodeUtf8(value));\n};\n\n/* istanbul ignore next */\n/** @ignore */\nconst setInt = <T extends Int>(vector: VectorType<T>, index: number, value: T['TValue']): void => {\n    vector.type.bitWidth < 64\n        ? setNumeric(vector as VectorType<Numeric1X>, index, value as Numeric1X['TValue'])\n        : setNumericX2(vector as VectorType<Numeric2X>, index, value as Numeric2X['TValue']);\n};\n\n/* istanbul ignore next */\n/** @ignore */\nconst setFloat = <T extends Float>(vector: VectorType<T>, index: number, value: T['TValue']): void => {\n    vector.type.precision !== Precision.HALF\n        ? setNumeric(vector as VectorType<Numeric1X>, index, value)\n        : setFloat16(vector as VectorType<Float16>, index, value);\n};\n\n/* istanbul ignore next */\nconst setDate = <T extends Date_> (vector: VectorType<T>, index: number, value: T['TValue']): void => {\n    vector.type.unit === DateUnit.DAY\n        ? setDateDay(vector as VectorType<DateDay>, index, value)\n        : setDateMillisecond(vector as VectorType<DateMillisecond>, index, value);\n};\n\n/** @ignore */\nconst setTimestampSecond      = <T extends TimestampSecond>     ({ values }: VectorType<T>, index: number, value: T['TValue']): void => setEpochMsToMillisecondsLong(values, index * 2, value / 1000);\n/** @ignore */\nconst setTimestampMillisecond = <T extends TimestampMillisecond>({ values }: VectorType<T>, index: number, value: T['TValue']): void => setEpochMsToMillisecondsLong(values, index * 2, value);\n/** @ignore */\nconst setTimestampMicrosecond = <T extends TimestampMicrosecond>({ values }: VectorType<T>, index: number, value: T['TValue']): void => setEpochMsToMicrosecondsLong(values, index * 2, value);\n/** @ignore */\nconst setTimestampNanosecond  = <T extends TimestampNanosecond> ({ values }: VectorType<T>, index: number, value: T['TValue']): void => setEpochMsToNanosecondsLong(values, index * 2, value);\n/* istanbul ignore next */\n/** @ignore */\nconst setTimestamp            = <T extends Timestamp>(vector: VectorType<T>, index: number, value: T['TValue']): void => {\n    switch (vector.type.unit) {\n        case TimeUnit.SECOND:      return      setTimestampSecond(vector as VectorType<TimestampSecond>, index, value);\n        case TimeUnit.MILLISECOND: return setTimestampMillisecond(vector as VectorType<TimestampMillisecond>, index, value);\n        case TimeUnit.MICROSECOND: return setTimestampMicrosecond(vector as VectorType<TimestampMicrosecond>, index, value);\n        case TimeUnit.NANOSECOND:  return  setTimestampNanosecond(vector as VectorType<TimestampNanosecond>, index, value);\n    }\n};\n\n/** @ignore */\nconst setTimeSecond      = <T extends TimeSecond>     ({ values, stride }: VectorType<T>, index: number, value: T['TValue']): void => { values[stride * index] = value; };\n/** @ignore */\nconst setTimeMillisecond = <T extends TimeMillisecond>({ values, stride }: VectorType<T>, index: number, value: T['TValue']): void => { values[stride * index] = value; };\n/** @ignore */\nconst setTimeMicrosecond = <T extends TimeMicrosecond>({ values         }: VectorType<T>, index: number, value: T['TValue']): void => { values.set(value.subarray(0, 2), 2 * index); };\n/** @ignore */\nconst setTimeNanosecond  = <T extends TimeNanosecond> ({ values         }: VectorType<T>, index: number, value: T['TValue']): void => { values.set(value.subarray(0, 2), 2 * index); };\n/* istanbul ignore next */\n/** @ignore */\nconst setTime            = <T extends Time>(vector: VectorType<T>, index: number, value: T['TValue']): void => {\n    switch (vector.type.unit) {\n        case TimeUnit.SECOND:      return      setTimeSecond(vector as VectorType<TimeSecond>, index, value as TimeSecond['TValue']);\n        case TimeUnit.MILLISECOND: return setTimeMillisecond(vector as VectorType<TimeMillisecond>, index, value as TimeMillisecond['TValue']);\n        case TimeUnit.MICROSECOND: return setTimeMicrosecond(vector as VectorType<TimeMicrosecond>, index, value as TimeMicrosecond['TValue']);\n        case TimeUnit.NANOSECOND:  return  setTimeNanosecond(vector as VectorType<TimeNanosecond>, index, value as TimeNanosecond['TValue']);\n    }\n};\n\n/** @ignore */\nconst setDecimal = <T extends Decimal>({ values }: VectorType<T>, index: number, value: T['TValue']): void => { values.set(value.subarray(0, 4), 4 * index); };\n\n/** @ignore */\nconst setList = <T extends List>(vector: VectorType<T>, index: number, value: T['TValue']): void => {\n    const values = vector.getChildAt(0)!, valueOffsets = vector.valueOffsets;\n    for (let idx = -1, itr = valueOffsets[index], end = valueOffsets[index + 1]; itr < end;) {\n        values.set(itr++, value.get(++idx));\n    }\n};\n\n/** @ignore */\nconst setMap = <T extends Map_>(vector: VectorType<T>, index: number, value: T['TValue']) => {\n    const values = vector.getChildAt(0)!, valueOffsets = vector.valueOffsets;\n    const entries = value instanceof Map ? [...value] : Object.entries(value);\n    for (let idx = -1, itr = valueOffsets[index], end = valueOffsets[index + 1]; itr < end;) {\n        values.set(itr++, entries[++idx]);\n    }\n};\n\n/** @ignore */ const _setStructArrayValue = (o: number, v: any[]) => (c: Vector | null, _: Field, i: number) => c && c.set(o, v[i]);\n/** @ignore */ const _setStructVectorValue = (o: number, v: Vector) => (c: Vector | null, _: Field, i: number) => c && c.set(o, v.get(i));\n/** @ignore */ const _setStructMapValue = (o: number, v: Map<string, any>) => (c: Vector | null, f: Field, _: number) => c && c.set(o, v.get(f.name));\n/** @ignore */ const _setStructObjectValue = (o: number, v: { [key: string]: any }) => (c: Vector | null, f: Field, _: number) => c && c.set(o, v[f.name]);\n/** @ignore */\nconst setStruct = <T extends Struct>(vector: VectorType<T>, index: number, value: T['TValue']) => {\n\n    const setValue = value instanceof Map    ? _setStructMapValue(index, value)    :\n                     value instanceof Vector ? _setStructVectorValue(index, value) :\n                     Array.isArray(value)    ? _setStructArrayValue(index, value)  :\n                                               _setStructObjectValue(index, value) ;\n\n    vector.type.children.forEach((f: Field, i: number) => setValue(vector.getChildAt(i), f, i));\n};\n\n/* istanbul ignore next */\n/** @ignore */\nconst setUnion = <\n    V extends VectorType<Union> | VectorType<DenseUnion> | VectorType<SparseUnion>\n>(vector: V, index: number, value: V['TValue']) => {\n    vector.type.mode === UnionMode.Dense ?\n        setDenseUnion(vector as VectorType<DenseUnion>, index, value) :\n        setSparseUnion(vector as VectorType<SparseUnion>, index, value);\n};\n\n/** @ignore */\nconst setDenseUnion = <T extends DenseUnion>(vector: VectorType<T>, index: number, value: T['TValue']): void => {\n    const childIndex = vector.typeIdToChildIndex[vector.typeIds[index]];\n    const child = vector.getChildAt(childIndex);\n    child && child.set(vector.valueOffsets[index], value);\n};\n\n/** @ignore */\nconst setSparseUnion = <T extends SparseUnion>(vector: VectorType<T>, index: number, value: T['TValue']): void => {\n    const childIndex = vector.typeIdToChildIndex[vector.typeIds[index]];\n    const child = vector.getChildAt(childIndex);\n    child && child.set(index, value);\n};\n\n/** @ignore */\nconst setDictionary = <T extends Dictionary>(vector: VectorType<T>, index: number, value: T['TValue']): void => {\n    const key = vector.getKey(index);\n    if (key !== null) {\n        vector.setValue(key, value);\n    }\n};\n\n/* istanbul ignore next */\n/** @ignore */\nconst setIntervalValue = <T extends Interval>(vector: VectorType<T>, index: number, value: T['TValue']): void => {\n    (vector.type.unit === IntervalUnit.DAY_TIME)\n        ? setIntervalDayTime(vector as VectorType<IntervalDayTime>, index, value)\n        : setIntervalYearMonth(vector as VectorType<IntervalYearMonth>, index, value);\n};\n\n/** @ignore */\nconst setIntervalDayTime = <T extends IntervalDayTime>({ values }: VectorType<T>, index: number, value: T['TValue']): void => { values.set(value.subarray(0, 2), 2 * index); };\n/** @ignore */\nconst setIntervalYearMonth = <T extends IntervalYearMonth>({ values }: VectorType<T>, index: number, value: T['TValue']): void => { values[index] = (value[0] * 12) + (value[1] % 12); };\n\n/** @ignore */\nconst setFixedSizeList = <T extends FixedSizeList>(vector: VectorType<T>, index: number, value: T['TValue']): void => {\n    const child = vector.getChildAt(0)!, { stride } = vector;\n    for (let idx = -1, offset = index * stride; ++idx < stride;) {\n        child.set(offset + idx, value.get(idx));\n    }\n};\n\nSetVisitor.prototype.visitBool                 =                 setBool;\nSetVisitor.prototype.visitInt                  =                  setInt;\nSetVisitor.prototype.visitInt8                 =              setNumeric;\nSetVisitor.prototype.visitInt16                =              setNumeric;\nSetVisitor.prototype.visitInt32                =              setNumeric;\nSetVisitor.prototype.visitInt64                =            setNumericX2;\nSetVisitor.prototype.visitUint8                =              setNumeric;\nSetVisitor.prototype.visitUint16               =              setNumeric;\nSetVisitor.prototype.visitUint32               =              setNumeric;\nSetVisitor.prototype.visitUint64               =            setNumericX2;\nSetVisitor.prototype.visitFloat                =                setFloat;\nSetVisitor.prototype.visitFloat16              =              setFloat16;\nSetVisitor.prototype.visitFloat32              =              setNumeric;\nSetVisitor.prototype.visitFloat64              =              setNumeric;\nSetVisitor.prototype.visitUtf8                 =                 setUtf8;\nSetVisitor.prototype.visitBinary               =               setBinary;\nSetVisitor.prototype.visitFixedSizeBinary      =      setFixedSizeBinary;\nSetVisitor.prototype.visitDate                 =                 setDate;\nSetVisitor.prototype.visitDateDay              =              setDateDay;\nSetVisitor.prototype.visitDateMillisecond      =      setDateMillisecond;\nSetVisitor.prototype.visitTimestamp            =            setTimestamp;\nSetVisitor.prototype.visitTimestampSecond      =      setTimestampSecond;\nSetVisitor.prototype.visitTimestampMillisecond = setTimestampMillisecond;\nSetVisitor.prototype.visitTimestampMicrosecond = setTimestampMicrosecond;\nSetVisitor.prototype.visitTimestampNanosecond  =  setTimestampNanosecond;\nSetVisitor.prototype.visitTime                 =                 setTime;\nSetVisitor.prototype.visitTimeSecond           =           setTimeSecond;\nSetVisitor.prototype.visitTimeMillisecond      =      setTimeMillisecond;\nSetVisitor.prototype.visitTimeMicrosecond      =      setTimeMicrosecond;\nSetVisitor.prototype.visitTimeNanosecond       =       setTimeNanosecond;\nSetVisitor.prototype.visitDecimal              =              setDecimal;\nSetVisitor.prototype.visitList                 =                 setList;\nSetVisitor.prototype.visitStruct               =               setStruct;\nSetVisitor.prototype.visitUnion                =                setUnion;\nSetVisitor.prototype.visitDenseUnion           =           setDenseUnion;\nSetVisitor.prototype.visitSparseUnion          =          setSparseUnion;\nSetVisitor.prototype.visitDictionary           =           setDictionary;\nSetVisitor.prototype.visitInterval             =        setIntervalValue;\nSetVisitor.prototype.visitIntervalDayTime      =      setIntervalDayTime;\nSetVisitor.prototype.visitIntervalYearMonth    =    setIntervalYearMonth;\nSetVisitor.prototype.visitFixedSizeList        =        setFixedSizeList;\nSetVisitor.prototype.visitMap                  =                  setMap;\n\n/** @ignore */\nexport const instance = new SetVisitor();\n","// automatically generated by the FlatBuffers compiler, do not modify\n\nimport { flatbuffers } from 'flatbuffers';\nimport * as NS7624605610262437867 from './Schema';\n/**\n * ----------------------------------------------------------------------\n * Arrow File metadata\n *\n *\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class Footer {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns Footer\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): Footer {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param Footer= obj\n         * @returns Footer\n         */\n        static getRootAsFooter(bb: flatbuffers.ByteBuffer, obj?: Footer): Footer {\n            return (obj || new Footer).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n\n        /**\n         * @returns org.apache.arrow.flatbuf.MetadataVersion\n         */\n        version(): NS7624605610262437867.org.apache.arrow.flatbuf.MetadataVersion {\n            let offset = this.bb!.__offset(this.bb_pos, 4);\n            return offset ? /**  */ (this.bb!.readInt16(this.bb_pos + offset)) : NS7624605610262437867.org.apache.arrow.flatbuf.MetadataVersion.V1;\n        }\n\n        /**\n         * @param org.apache.arrow.flatbuf.Schema= obj\n         * @returns org.apache.arrow.flatbuf.Schema|null\n         */\n        schema(obj?: NS7624605610262437867.org.apache.arrow.flatbuf.Schema): NS7624605610262437867.org.apache.arrow.flatbuf.Schema | null {\n            let offset = this.bb!.__offset(this.bb_pos, 6);\n            return offset ? (obj || new NS7624605610262437867.org.apache.arrow.flatbuf.Schema).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;\n        }\n\n        /**\n         * @param number index\n         * @param org.apache.arrow.flatbuf.Block= obj\n         * @returns org.apache.arrow.flatbuf.Block\n         */\n        dictionaries(index: number, obj?: org.apache.arrow.flatbuf.Block): org.apache.arrow.flatbuf.Block | null {\n            let offset = this.bb!.__offset(this.bb_pos, 8);\n            return offset ? (obj || new org.apache.arrow.flatbuf.Block).__init(this.bb!.__vector(this.bb_pos + offset) + index * 24, this.bb!) : null;\n        }\n\n        /**\n         * @returns number\n         */\n        dictionariesLength(): number {\n            let offset = this.bb!.__offset(this.bb_pos, 8);\n            return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n        }\n\n        /**\n         * @param number index\n         * @param org.apache.arrow.flatbuf.Block= obj\n         * @returns org.apache.arrow.flatbuf.Block\n         */\n        recordBatches(index: number, obj?: org.apache.arrow.flatbuf.Block): org.apache.arrow.flatbuf.Block | null {\n            let offset = this.bb!.__offset(this.bb_pos, 10);\n            return offset ? (obj || new org.apache.arrow.flatbuf.Block).__init(this.bb!.__vector(this.bb_pos + offset) + index * 24, this.bb!) : null;\n        }\n\n        /**\n         * @returns number\n         */\n        recordBatchesLength(): number {\n            let offset = this.bb!.__offset(this.bb_pos, 10);\n            return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         */\n        static startFooter(builder: flatbuffers.Builder) {\n            builder.startObject(4);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param org.apache.arrow.flatbuf.MetadataVersion version\n         */\n        static addVersion(builder: flatbuffers.Builder, version: NS7624605610262437867.org.apache.arrow.flatbuf.MetadataVersion) {\n            builder.addFieldInt16(0, version, NS7624605610262437867.org.apache.arrow.flatbuf.MetadataVersion.V1);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Offset schemaOffset\n         */\n        static addSchema(builder: flatbuffers.Builder, schemaOffset: flatbuffers.Offset) {\n            builder.addFieldOffset(1, schemaOffset, 0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Offset dictionariesOffset\n         */\n        static addDictionaries(builder: flatbuffers.Builder, dictionariesOffset: flatbuffers.Offset) {\n            builder.addFieldOffset(2, dictionariesOffset, 0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param number numElems\n         */\n        static startDictionariesVector(builder: flatbuffers.Builder, numElems: number) {\n            builder.startVector(24, numElems, 8);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Offset recordBatchesOffset\n         */\n        static addRecordBatches(builder: flatbuffers.Builder, recordBatchesOffset: flatbuffers.Offset) {\n            builder.addFieldOffset(3, recordBatchesOffset, 0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param number numElems\n         */\n        static startRecordBatchesVector(builder: flatbuffers.Builder, numElems: number) {\n            builder.startVector(24, numElems, 8);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @returns flatbuffers.Offset\n         */\n        static endFooter(builder: flatbuffers.Builder): flatbuffers.Offset {\n            let offset = builder.endObject();\n            return offset;\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Offset offset\n         */\n        static finishFooterBuffer(builder: flatbuffers.Builder, offset: flatbuffers.Offset) {\n            builder.finish(offset);\n        }\n\n        static createFooter(builder: flatbuffers.Builder, version: NS7624605610262437867.org.apache.arrow.flatbuf.MetadataVersion, schemaOffset: flatbuffers.Offset, dictionariesOffset: flatbuffers.Offset, recordBatchesOffset: flatbuffers.Offset): flatbuffers.Offset {\n            Footer.startFooter(builder);\n            Footer.addVersion(builder, version);\n            Footer.addSchema(builder, schemaOffset);\n            Footer.addDictionaries(builder, dictionariesOffset);\n            Footer.addRecordBatches(builder, recordBatchesOffset);\n            return Footer.endFooter(builder);\n        }\n    }\n}\n/**\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class Block {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns Block\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): Block {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * Index to the start of the RecordBlock (note this is past the Message header)\n         *\n         * @returns flatbuffers.Long\n         */\n        offset(): flatbuffers.Long {\n            return this.bb!.readInt64(this.bb_pos);\n        }\n\n        /**\n         * Length of the metadata\n         *\n         * @returns number\n         */\n        metaDataLength(): number {\n            return this.bb!.readInt32(this.bb_pos + 8);\n        }\n\n        /**\n         * Length of the data (this is aligned so there can be a gap between this and\n         * the metatdata).\n         *\n         * @returns flatbuffers.Long\n         */\n        bodyLength(): flatbuffers.Long {\n            return this.bb!.readInt64(this.bb_pos + 16);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Long offset\n         * @param number metaDataLength\n         * @param flatbuffers.Long bodyLength\n         * @returns flatbuffers.Offset\n         */\n        static createBlock(builder: flatbuffers.Builder, offset: flatbuffers.Long, metaDataLength: number, bodyLength: flatbuffers.Long): flatbuffers.Offset {\n            builder.prep(8, 24);\n            builder.writeInt64(bodyLength);\n            builder.pad(4);\n            builder.writeInt32(metaDataLength);\n            builder.writeInt64(offset);\n            return builder.offset();\n        }\n\n    }\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Data } from '../data';\nimport { Type } from '../enum';\nimport { DataType } from '../type';\nimport { Visitor } from '../visitor';\nimport { VectorType, BuilderCtor } from '../interfaces';\nimport { BinaryBuilder } from '../builder/binary';\nimport { BoolBuilder } from '../builder/bool';\nimport { DateBuilder, DateDayBuilder, DateMillisecondBuilder } from '../builder/date';\nimport { DecimalBuilder } from '../builder/decimal';\nimport { DictionaryBuilder } from '../builder/dictionary';\nimport { FixedSizeBinaryBuilder } from '../builder/fixedsizebinary';\nimport { FixedSizeListBuilder } from '../builder/fixedsizelist';\nimport { FloatBuilder, Float16Builder, Float32Builder, Float64Builder } from '../builder/float';\nimport { IntervalBuilder, IntervalDayTimeBuilder, IntervalYearMonthBuilder } from '../builder/interval';\nimport { IntBuilder, Int8Builder, Int16Builder, Int32Builder, Int64Builder, Uint8Builder, Uint16Builder, Uint32Builder, Uint64Builder } from '../builder/int';\nimport { ListBuilder } from '../builder/list';\nimport { MapBuilder } from '../builder/map';\nimport { NullBuilder } from '../builder/null';\nimport { StructBuilder } from '../builder/struct';\nimport { TimestampBuilder, TimestampSecondBuilder, TimestampMillisecondBuilder, TimestampMicrosecondBuilder, TimestampNanosecondBuilder } from '../builder/timestamp';\nimport { TimeBuilder, TimeSecondBuilder, TimeMillisecondBuilder, TimeMicrosecondBuilder, TimeNanosecondBuilder } from '../builder/time';\nimport { UnionBuilder, DenseUnionBuilder, SparseUnionBuilder } from '../builder/union';\nimport { Utf8Builder } from '../builder/utf8';\n\n/** @ignore */\nexport interface GetBuilderCtor extends Visitor {\n    visit<T extends Type>(type: T): BuilderCtor<T>;\n    visitMany<T extends Type>(types: T[]): BuilderCtor<T>[];\n    getVisitFn<T extends Type>(type: T): () => BuilderCtor<T>;\n    getVisitFn<T extends DataType>(node: VectorType<T> | Data<T> | T): () => BuilderCtor<T>;\n}\n\n/** @ignore */\nexport class GetBuilderCtor extends Visitor {\n    public visitNull                 () { return NullBuilder;                 }\n    public visitBool                 () { return BoolBuilder;                 }\n    public visitInt                  () { return IntBuilder;                  }\n    public visitInt8                 () { return Int8Builder;                 }\n    public visitInt16                () { return Int16Builder;                }\n    public visitInt32                () { return Int32Builder;                }\n    public visitInt64                () { return Int64Builder;                }\n    public visitUint8                () { return Uint8Builder;                }\n    public visitUint16               () { return Uint16Builder;               }\n    public visitUint32               () { return Uint32Builder;               }\n    public visitUint64               () { return Uint64Builder;               }\n    public visitFloat                () { return FloatBuilder;                }\n    public visitFloat16              () { return Float16Builder;              }\n    public visitFloat32              () { return Float32Builder;              }\n    public visitFloat64              () { return Float64Builder;              }\n    public visitUtf8                 () { return Utf8Builder;                 }\n    public visitBinary               () { return BinaryBuilder;               }\n    public visitFixedSizeBinary      () { return FixedSizeBinaryBuilder;      }\n    public visitDate                 () { return DateBuilder;                 }\n    public visitDateDay              () { return DateDayBuilder;              }\n    public visitDateMillisecond      () { return DateMillisecondBuilder;      }\n    public visitTimestamp            () { return TimestampBuilder;            }\n    public visitTimestampSecond      () { return TimestampSecondBuilder;      }\n    public visitTimestampMillisecond () { return TimestampMillisecondBuilder; }\n    public visitTimestampMicrosecond () { return TimestampMicrosecondBuilder; }\n    public visitTimestampNanosecond  () { return TimestampNanosecondBuilder;  }\n    public visitTime                 () { return TimeBuilder;                 }\n    public visitTimeSecond           () { return TimeSecondBuilder;           }\n    public visitTimeMillisecond      () { return TimeMillisecondBuilder;      }\n    public visitTimeMicrosecond      () { return TimeMicrosecondBuilder;      }\n    public visitTimeNanosecond       () { return TimeNanosecondBuilder;       }\n    public visitDecimal              () { return DecimalBuilder;              }\n    public visitList                 () { return ListBuilder;                 }\n    public visitStruct               () { return StructBuilder;               }\n    public visitUnion                () { return UnionBuilder;                }\n    public visitDenseUnion           () { return DenseUnionBuilder;           }\n    public visitSparseUnion          () { return SparseUnionBuilder;          }\n    public visitDictionary           () { return DictionaryBuilder;           }\n    public visitInterval             () { return IntervalBuilder;             }\n    public visitIntervalDayTime      () { return IntervalDayTimeBuilder;      }\n    public visitIntervalYearMonth    () { return IntervalYearMonthBuilder;    }\n    public visitFixedSizeList        () { return FixedSizeListBuilder;        }\n    public visitMap                  () { return MapBuilder;                  }\n}\n\n/** @ignore */\nexport const instance = new GetBuilderCtor();\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\n/** @ignore */\nexport { Builder, BuilderOptions } from '../builder';\nexport { BoolBuilder } from './bool';\nexport { NullBuilder } from './null';\nexport { DateBuilder, DateDayBuilder, DateMillisecondBuilder } from './date';\nexport { DecimalBuilder } from './decimal';\nexport { DictionaryBuilder } from './dictionary';\nexport { FixedSizeBinaryBuilder } from './fixedsizebinary';\nexport { FloatBuilder, Float16Builder, Float32Builder, Float64Builder } from './float';\nexport { IntBuilder, Int8Builder, Int16Builder, Int32Builder, Int64Builder, Uint8Builder, Uint16Builder, Uint32Builder, Uint64Builder } from './int';\nexport { TimeBuilder, TimeSecondBuilder, TimeMillisecondBuilder, TimeMicrosecondBuilder, TimeNanosecondBuilder } from './time';\nexport { TimestampBuilder, TimestampSecondBuilder, TimestampMillisecondBuilder, TimestampMicrosecondBuilder, TimestampNanosecondBuilder } from './timestamp';\nexport { IntervalBuilder, IntervalDayTimeBuilder, IntervalYearMonthBuilder } from './interval';\nexport { Utf8Builder } from './utf8';\nexport { BinaryBuilder } from './binary';\nexport { ListBuilder } from './list';\nexport { FixedSizeListBuilder } from './fixedsizelist';\nexport { MapBuilder } from './map';\nexport { StructBuilder } from './struct';\nexport { UnionBuilder, SparseUnionBuilder, DenseUnionBuilder } from './union';\n\nimport { Type } from '../enum';\nimport { Field } from '../schema';\nimport { DataType } from '../type';\nimport { Utf8Builder } from './utf8';\nimport { BuilderType as B } from '../interfaces';\nimport { Builder, BuilderOptions } from '../builder';\nimport { instance as setVisitor } from '../visitor/set';\nimport { instance as getBuilderConstructor } from '../visitor/builderctor';\n\n/** @nocollapse */\nBuilder.new = newBuilder;\n\nfunction newBuilder<T extends DataType = any, TNull = any>(options: BuilderOptions<T, TNull>): B<T, TNull> {\n\n    const type = options.type;\n    const builder = new (getBuilderConstructor.getVisitFn<T>(type)())(options) as Builder<T, TNull>;\n\n    if (type.children && type.children.length > 0) {\n\n        const children = options['children'] || [] as BuilderOptions[];\n        const defaultOptions = { 'nullValues': options['nullValues'] };\n        const getChildOptions = Array.isArray(children)\n            ? ((_: Field, i: number) => children[i] || defaultOptions)\n            : (({ name }: Field) => children[name] || defaultOptions);\n\n        type.children.forEach((field, index) => {\n            const { type } = field;\n            const opts = getChildOptions(field, index);\n            builder.children.push(newBuilder({ ...opts, type }));\n        });\n    }\n\n    return builder as B<T, TNull>;\n}\n\n(Object.keys(Type) as any[])\n    .map((T: any) => Type[T] as any)\n    .filter((T: any): T is Type => typeof T === 'number' && T !== Type.NONE)\n    .forEach((typeId) => {\n        const BuilderCtor = getBuilderConstructor.visit(typeId);\n        BuilderCtor.prototype._setValue = setVisitor.getVisitFn(typeId);\n    });\n\n(Utf8Builder.prototype as any)._setValue = setVisitor.visitBinary;\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\n/* tslint:disable:class-name */\n\nimport * as File_ from '../../fb/File';\nimport { flatbuffers } from 'flatbuffers';\n\nimport Long = flatbuffers.Long;\nimport Builder = flatbuffers.Builder;\nimport ByteBuffer = flatbuffers.ByteBuffer;\nimport _Block = File_.org.apache.arrow.flatbuf.Block;\nimport _Footer = File_.org.apache.arrow.flatbuf.Footer;\n\nimport { Schema } from '../../schema';\nimport { MetadataVersion } from '../../enum';\nimport { toUint8Array } from '../../util/buffer';\nimport { ArrayBufferViewInput } from '../../util/buffer';\n\n/** @ignore */\nclass Footer_ {\n\n    /** @nocollapse */\n    public static decode(buf: ArrayBufferViewInput) {\n        buf = new ByteBuffer(toUint8Array(buf));\n        const footer = _Footer.getRootAsFooter(buf);\n        const schema = Schema.decode(footer.schema()!);\n        return new OffHeapFooter(schema, footer) as Footer_;\n    }\n\n    /** @nocollapse */\n    public static encode(footer: Footer_) {\n\n        const b: Builder = new Builder();\n        const schemaOffset = Schema.encode(b, footer.schema);\n\n        _Footer.startRecordBatchesVector(b, footer.numRecordBatches);\n        [...footer.recordBatches()].slice().reverse().forEach((rb) => FileBlock.encode(b, rb));\n        const recordBatchesOffset = b.endVector();\n\n        _Footer.startDictionariesVector(b, footer.numDictionaries);\n        [...footer.dictionaryBatches()].slice().reverse().forEach((db) => FileBlock.encode(b, db));\n\n        const dictionaryBatchesOffset = b.endVector();\n\n        _Footer.startFooter(b);\n        _Footer.addSchema(b, schemaOffset);\n        _Footer.addVersion(b, MetadataVersion.V4);\n        _Footer.addRecordBatches(b, recordBatchesOffset);\n        _Footer.addDictionaries(b, dictionaryBatchesOffset);\n        _Footer.finishFooterBuffer(b, _Footer.endFooter(b));\n\n        return b.asUint8Array();\n    }\n\n    // @ts-ignore\n    protected _recordBatches: FileBlock[];\n    // @ts-ignore\n    protected _dictionaryBatches: FileBlock[];\n    public get numRecordBatches() { return this._recordBatches.length; }\n    public get numDictionaries() { return this._dictionaryBatches.length; }\n\n    constructor(public schema: Schema,\n                public version: MetadataVersion = MetadataVersion.V4,\n                recordBatches?: FileBlock[], dictionaryBatches?: FileBlock[]) {\n        recordBatches && (this._recordBatches = recordBatches);\n        dictionaryBatches && (this._dictionaryBatches = dictionaryBatches);\n    }\n\n    public *recordBatches(): Iterable<FileBlock> {\n        for (let block, i = -1, n = this.numRecordBatches; ++i < n;) {\n            if (block = this.getRecordBatch(i)) { yield block; }\n        }\n    }\n\n    public *dictionaryBatches(): Iterable<FileBlock> {\n        for (let block, i = -1, n = this.numDictionaries; ++i < n;) {\n            if (block = this.getDictionaryBatch(i)) { yield block; }\n        }\n    }\n\n    public getRecordBatch(index: number) {\n        return index >= 0\n            && index < this.numRecordBatches\n            && this._recordBatches[index] || null;\n    }\n\n    public getDictionaryBatch(index: number) {\n        return index >= 0\n            && index < this.numDictionaries\n            && this._dictionaryBatches[index] || null;\n    }\n}\n\nexport { Footer_ as Footer };\n\n/** @ignore */\nclass OffHeapFooter extends Footer_ {\n\n    public get numRecordBatches() { return this._footer.recordBatchesLength(); }\n    public get numDictionaries() { return this._footer.dictionariesLength(); }\n\n    constructor(schema: Schema, protected _footer: _Footer) {\n        super(schema, _footer.version());\n    }\n\n    public getRecordBatch(index: number) {\n        if (index >= 0 && index < this.numRecordBatches) {\n            const fileBlock = this._footer.recordBatches(index);\n            if (fileBlock) { return FileBlock.decode(fileBlock); }\n        }\n        return null;\n    }\n\n    public getDictionaryBatch(index: number) {\n        if (index >= 0 && index < this.numDictionaries) {\n            const fileBlock = this._footer.dictionaries(index);\n            if (fileBlock) { return FileBlock.decode(fileBlock); }\n        }\n        return null;\n    }\n}\n\n/** @ignore */\nexport class FileBlock {\n\n    /** @nocollapse */\n    public static decode(block: _Block) {\n        return new FileBlock(block.metaDataLength(), block.bodyLength(), block.offset());\n    }\n\n    /** @nocollapse */\n    public static encode(b: Builder, fileBlock: FileBlock) {\n        const { metaDataLength } = fileBlock;\n        const offset = new Long(fileBlock.offset, 0);\n        const bodyLength = new Long(fileBlock.bodyLength, 0);\n        return _Block.createBlock(b, offset, metaDataLength, bodyLength);\n    }\n\n    public offset: number;\n    public bodyLength: number;\n    public metaDataLength: number;\n\n    constructor(metaDataLength: number, bodyLength: Long | number, offset: Long | number) {\n        this.metaDataLength = metaDataLength;\n        this.offset = typeof offset === 'number' ? offset : offset.low;\n        this.bodyLength = typeof bodyLength === 'number' ? bodyLength : bodyLength.low;\n    }\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport streamAdapters from './adapters';\nimport { decodeUtf8 } from '../util/utf8';\nimport { ITERATOR_DONE, Readable, Writable, AsyncQueue } from './interfaces';\nimport { toUint8Array, joinUint8Arrays, ArrayBufferViewInput } from '../util/buffer';\n\nimport {\n    isPromise, isFetchResponse,\n    isIterable, isAsyncIterable,\n    isReadableDOMStream, isReadableNodeStream\n} from '../util/compat';\n\n/** @ignore */\nexport type WritableSink<T> = Writable<T> | WritableStream<T> | NodeJS.WritableStream | null;\n/** @ignore */\nexport type ReadableSource<T> = Readable<T> | PromiseLike<T> | AsyncIterable<T> | ReadableStream<T> | NodeJS.ReadableStream | null;\n\n/** @ignore */\nexport class AsyncByteQueue<T extends ArrayBufferViewInput = Uint8Array> extends AsyncQueue<Uint8Array, T> {\n    public write(value: ArrayBufferViewInput | Uint8Array) {\n        if ((value = toUint8Array(value)).byteLength > 0) {\n            return super.write(value as T);\n        }\n    }\n    public toString(sync: true): string;\n    public toString(sync?: false): Promise<string>;\n    public toString(sync = false) {\n        return sync\n            ? decodeUtf8(this.toUint8Array(true))\n            : this.toUint8Array(false).then(decodeUtf8);\n    }\n    public toUint8Array(sync: true): Uint8Array;\n    public toUint8Array(sync?: false): Promise<Uint8Array>;\n    public toUint8Array(sync = false) {\n        return sync ? joinUint8Arrays(this._values as any[])[0] : (async () => {\n            let buffers = [], byteLength = 0;\n            for await (const chunk of this) {\n                buffers.push(chunk);\n                byteLength += chunk.byteLength;\n            }\n            return joinUint8Arrays(buffers, byteLength)[0];\n        })();\n    }\n}\n\n/** @ignore */\nexport class ByteStream implements IterableIterator<Uint8Array> {\n    // @ts-ignore\n    private source: ByteStreamSource<Uint8Array>;\n    constructor(source?: Iterable<ArrayBufferViewInput> | ArrayBufferViewInput) {\n        if (source) {\n            this.source = new ByteStreamSource(streamAdapters.fromIterable(source));\n        }\n    }\n    [Symbol.iterator]() { return this; }\n    public next(value?: any) { return this.source.next(value); }\n    public throw(value?: any) { return this.source.throw(value); }\n    public return(value?: any) { return this.source.return(value); }\n    public peek(size?: number | null) { return this.source.peek(size); }\n    public read(size?: number | null) { return this.source.read(size); }\n}\n\n/** @ignore */\nexport class AsyncByteStream implements Readable<Uint8Array>, AsyncIterableIterator<Uint8Array> {\n    // @ts-ignore\n    private source: AsyncByteStreamSource<Uint8Array>;\n    constructor(source?: PromiseLike<ArrayBufferViewInput> | Response | ReadableStream<ArrayBufferViewInput> | NodeJS.ReadableStream | AsyncIterable<ArrayBufferViewInput> | Iterable<ArrayBufferViewInput>) {\n        if (source instanceof AsyncByteStream) {\n            this.source = (source as AsyncByteStream).source;\n        } else if (source instanceof AsyncByteQueue) {\n            this.source = new AsyncByteStreamSource(streamAdapters.fromAsyncIterable(source));\n        } else if (isReadableNodeStream(source)) {\n            this.source = new AsyncByteStreamSource(streamAdapters.fromNodeStream(source));\n        } else if (isReadableDOMStream<ArrayBufferViewInput>(source)) {\n            this.source = new AsyncByteStreamSource(streamAdapters.fromDOMStream(source));\n        } else if (isFetchResponse(source)) {\n            this.source = new AsyncByteStreamSource(streamAdapters.fromDOMStream(source.body!));\n        } else if (isIterable<ArrayBufferViewInput>(source)) {\n            this.source = new AsyncByteStreamSource(streamAdapters.fromIterable(source));\n        } else if (isPromise<ArrayBufferViewInput>(source)) {\n            this.source = new AsyncByteStreamSource(streamAdapters.fromAsyncIterable(source));\n        } else if (isAsyncIterable<ArrayBufferViewInput>(source)) {\n            this.source = new AsyncByteStreamSource(streamAdapters.fromAsyncIterable(source));\n        }\n    }\n    [Symbol.asyncIterator]() { return this; }\n    public next(value?: any) { return this.source.next(value); }\n    public throw(value?: any) { return this.source.throw(value); }\n    public return(value?: any) { return this.source.return(value); }\n    public get closed(): Promise<void> { return this.source.closed; }\n    public cancel(reason?: any) { return this.source.cancel(reason); }\n    public peek(size?: number | null) { return this.source.peek(size); }\n    public read(size?: number | null) { return this.source.read(size); }\n}\n\n/** @ignore */\ninterface ByteStreamSourceIterator<T> extends IterableIterator<T> {\n    next(value?: { cmd: 'peek' | 'read', size?: number | null }): IteratorResult<T>;\n}\n\n/** @ignore */\ninterface AsyncByteStreamSourceIterator<T> extends AsyncIterableIterator<T> {\n    next(value?: { cmd: 'peek' | 'read', size?: number | null }): Promise<IteratorResult<T>>;\n}\n\n/** @ignore */\nclass ByteStreamSource<T> {\n    constructor(protected source: ByteStreamSourceIterator<T>) {}\n    public cancel(reason?: any) { this.return(reason); }\n    public peek(size?: number | null): T | null { return this.next(size, 'peek').value; }\n    public read(size?: number | null): T | null { return this.next(size, 'read').value; }\n    public next(size?: number | null, cmd: 'peek' | 'read' = 'read') { return this.source.next({ cmd, size }); }\n    public throw(value?: any) { return Object.create((this.source.throw && this.source.throw(value)) || ITERATOR_DONE); }\n    public return(value?: any) { return Object.create((this.source.return && this.source.return(value)) || ITERATOR_DONE); }\n}\n\n/** @ignore */\nclass AsyncByteStreamSource<T> implements Readable<T> {\n\n    private _closedPromise: Promise<void>;\n    private _closedPromiseResolve?: (value?: any) => void;\n    constructor (protected source: ByteStreamSourceIterator<T> | AsyncByteStreamSourceIterator<T>) {\n        this._closedPromise = new Promise((r) => this._closedPromiseResolve = r);\n    }\n    public async cancel(reason?: any) { await this.return(reason); }\n    public get closed(): Promise<void> { return this._closedPromise; }\n    public async read(size?: number | null): Promise<T | null> { return (await this.next(size, 'read')).value; }\n    public async peek(size?: number | null): Promise<T | null> { return (await this.next(size, 'peek')).value; }\n    public async next(size?: number | null, cmd: 'peek' | 'read' = 'read') { return (await this.source.next({ cmd, size })); }\n    public async throw(value?: any) {\n        const result = (this.source.throw && await this.source.throw(value)) || ITERATOR_DONE;\n        this._closedPromiseResolve && this._closedPromiseResolve();\n        this._closedPromiseResolve = undefined;\n        return Object.create(result);\n    }\n    public async return(value?: any) {\n        const result = (this.source.return && await this.source.return(value)) || ITERATOR_DONE;\n        this._closedPromiseResolve && this._closedPromiseResolve();\n        this._closedPromiseResolve = undefined;\n        return Object.create(result);\n    }\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { FileHandle } from './interfaces';\nimport { ByteStream, AsyncByteStream } from './stream';\nimport { ArrayBufferViewInput, toUint8Array } from '../util/buffer';\n\n/** @ignore */\nexport class RandomAccessFile extends ByteStream {\n    public size: number;\n    public position: number = 0;\n    protected buffer: Uint8Array | null;\n    constructor(buffer: ArrayBufferViewInput, byteLength?: number) {\n        super();\n        this.buffer = toUint8Array(buffer);\n        this.size = typeof byteLength === 'undefined' ? this.buffer.byteLength : byteLength;\n    }\n    public readInt32(position: number) {\n        const { buffer, byteOffset } = this.readAt(position, 4);\n        return new DataView(buffer, byteOffset).getInt32(0, true);\n    }\n    public seek(position: number) {\n        this.position = Math.min(position, this.size);\n        return position < this.size;\n    }\n    public read(nBytes?: number | null) {\n        const { buffer, size, position } = this;\n        if (buffer && position < size) {\n            if (typeof nBytes !== 'number') { nBytes = Infinity; }\n            this.position = Math.min(size,\n                 position + Math.min(size - position, nBytes));\n            return buffer.subarray(position, this.position);\n        }\n        return null;\n    }\n    public readAt(position: number, nBytes: number) {\n        const buf = this.buffer;\n        const end = Math.min(this.size, position + nBytes);\n        return buf ? buf.subarray(position, end) : new Uint8Array(nBytes);\n    }\n    public close() { this.buffer && (this.buffer = null); }\n    public throw(value?: any) { this.close(); return { done: true, value }; }\n    public return(value?: any) { this.close(); return { done: true, value }; }\n}\n\n/** @ignore */\nexport class AsyncRandomAccessFile extends AsyncByteStream {\n    // @ts-ignore\n    public size: number;\n    public position: number = 0;\n    public _pending?: Promise<void>;\n    protected _handle: FileHandle | null;\n    constructor(file: FileHandle, byteLength?: number) {\n        super();\n        this._handle = file;\n        if (typeof byteLength === 'number') {\n            this.size = byteLength;\n        } else {\n            this._pending = (async () => {\n                this.size = (await file.stat()).size;\n                delete this._pending;\n            })();\n        }\n    }\n    public async readInt32(position: number) {\n        const { buffer, byteOffset } = await this.readAt(position, 4);\n        return new DataView(buffer, byteOffset).getInt32(0, true);\n    }\n    public async seek(position: number) {\n        this._pending && await this._pending;\n        this.position = Math.min(position, this.size);\n        return position < this.size;\n    }\n    public async read(nBytes?: number | null) {\n        this._pending && await this._pending;\n        const { _handle: file, size, position } = this;\n        if (file && position < size) {\n            if (typeof nBytes !== 'number') { nBytes = Infinity; }\n            let pos = position, offset = 0, bytesRead = 0;\n            let end = Math.min(size, pos + Math.min(size - pos, nBytes));\n            let buffer = new Uint8Array(Math.max(0, (this.position = end) - pos));\n            while ((pos += bytesRead) < end && (offset += bytesRead) < buffer.byteLength) {\n                ({ bytesRead } = await file.read(buffer, offset, buffer.byteLength - offset, pos));\n            }\n            return buffer;\n        }\n        return null;\n    }\n    public async readAt(position: number, nBytes: number) {\n        this._pending && await this._pending;\n        const { _handle: file, size } = this;\n        if (file && (position + nBytes) < size) {\n            const end = Math.min(size, position + nBytes);\n            const buffer = new Uint8Array(end - position);\n            return (await file.read(buffer, 0, nBytes, position)).buffer;\n        }\n        return new Uint8Array(nBytes);\n    }\n    public async close() { const f = this._handle; this._handle = null; f && await f.close(); }\n    public async throw(value?: any) { await this.close(); return { done: true, value }; }\n    public async return(value?: any) { await this.close(); return { done: true, value }; }\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\n/** @ignore */\nconst carryBit16 = 1 << 16;\n\n/** @ignore */\nfunction intAsHex(value: number): string {\n    if (value < 0) {\n        value = 0xFFFFFFFF + value + 1;\n    }\n    return `0x${value.toString(16)}`;\n}\n\n/** @ignore */\nconst kInt32DecimalDigits = 8;\n/** @ignore */\nconst kPowersOfTen = [1,\n                      10,\n                      100,\n                      1000,\n                      10000,\n                      100000,\n                      1000000,\n                      10000000,\n                      100000000];\n\n/** @ignore */\nexport class BaseInt64 {\n    constructor (protected buffer: Uint32Array) {}\n\n    public high(): number { return this.buffer[1]; }\n    public low (): number { return this.buffer[0]; }\n\n    protected _times(other: BaseInt64) {\n        // Break the left and right numbers into 16 bit chunks\n        // so that we can multiply them without overflow.\n        const L = new Uint32Array([\n            this.buffer[1] >>> 16,\n            this.buffer[1] & 0xFFFF,\n            this.buffer[0] >>> 16,\n            this.buffer[0] & 0xFFFF\n        ]);\n\n        const R = new Uint32Array([\n            other.buffer[1] >>> 16,\n            other.buffer[1] & 0xFFFF,\n            other.buffer[0] >>> 16,\n            other.buffer[0] & 0xFFFF\n        ]);\n\n        let product = L[3] * R[3];\n        this.buffer[0] = product & 0xFFFF;\n\n        let sum = product >>> 16;\n\n        product = L[2] * R[3];\n        sum += product;\n\n        product = (L[3] * R[2]) >>> 0;\n        sum += product;\n\n        this.buffer[0] += sum << 16;\n\n        this.buffer[1] = (sum >>> 0 < product ? carryBit16 : 0);\n\n        this.buffer[1] += sum >>> 16;\n        this.buffer[1] += L[1] * R[3] + L[2] * R[2] + L[3] * R[1];\n        this.buffer[1] += (L[0] * R[3] + L[1] * R[2] + L[2] * R[1] + L[3] * R[0]) << 16;\n\n        return this;\n      }\n\n    protected _plus(other: BaseInt64) {\n        const sum = (this.buffer[0] + other.buffer[0]) >>> 0;\n        this.buffer[1] += other.buffer[1];\n        if (sum < (this.buffer[0] >>> 0)) {\n          ++this.buffer[1];\n        }\n        this.buffer[0] = sum;\n    }\n\n    public lessThan(other: BaseInt64): boolean {\n        return this.buffer[1] < other.buffer[1] ||\n            (this.buffer[1] === other.buffer[1] && this.buffer[0] < other.buffer[0]);\n    }\n\n    public equals(other: BaseInt64): boolean {\n        return this.buffer[1] === other.buffer[1] && this.buffer[0] == other.buffer[0];\n    }\n\n    public greaterThan(other: BaseInt64): boolean {\n        return other.lessThan(this);\n    }\n\n    public hex(): string {\n        return `${intAsHex(this.buffer[1])} ${intAsHex(this.buffer[0])}`;\n    }\n}\n\n/** @ignore */\nexport class Uint64 extends BaseInt64 {\n    public times(other: Uint64): Uint64 {\n        this._times(other);\n        return this;\n    }\n\n    public plus(other: Uint64): Uint64 {\n        this._plus(other);\n        return this;\n    }\n\n    /** @nocollapse */\n    public static from(val: any, out_buffer = new Uint32Array(2)): Uint64 {\n        return Uint64.fromString(\n            typeof(val) === 'string' ? val : val.toString(),\n            out_buffer\n        );\n    }\n\n    /** @nocollapse */\n    public static fromNumber(num: number, out_buffer = new Uint32Array(2)): Uint64 {\n        // Always parse numbers as strings - pulling out high and low bits\n        // directly seems to lose precision sometimes\n        // For example:\n        //     > -4613034156400212000 >>> 0\n        //     721782784\n        // The correct lower 32-bits are 721782752\n        return Uint64.fromString(num.toString(), out_buffer);\n    }\n\n    /** @nocollapse */\n    public static fromString(str: string, out_buffer = new Uint32Array(2)): Uint64 {\n        const length = str.length;\n\n        let out = new Uint64(out_buffer);\n        for (let posn = 0; posn < length;) {\n            const group = kInt32DecimalDigits < length - posn ?\n                          kInt32DecimalDigits : length - posn;\n            const chunk = new Uint64(new Uint32Array([parseInt(str.substr(posn, group), 10), 0]));\n            const multiple = new Uint64(new Uint32Array([kPowersOfTen[group], 0]));\n\n            out.times(multiple);\n            out.plus(chunk);\n\n            posn += group;\n        }\n\n        return out;\n    }\n\n    /** @nocollapse */\n    public static convertArray(values: (string|number)[]): Uint32Array {\n        const data = new Uint32Array(values.length * 2);\n        for (let i = -1, n = values.length; ++i < n;) {\n            Uint64.from(values[i], new Uint32Array(data.buffer, data.byteOffset + 2 * i * 4, 2));\n        }\n        return data;\n    }\n\n    /** @nocollapse */\n    public static multiply(left: Uint64, right: Uint64): Uint64 {\n        let rtrn = new Uint64(new Uint32Array(left.buffer));\n        return rtrn.times(right);\n    }\n\n    /** @nocollapse */\n    public static add(left: Uint64, right: Uint64): Uint64 {\n        let rtrn = new Uint64(new Uint32Array(left.buffer));\n        return rtrn.plus(right);\n    }\n}\n\n/** @ignore */\nexport class Int64 extends BaseInt64 {\n    public negate(): Int64 {\n        this.buffer[0] = ~this.buffer[0] + 1;\n        this.buffer[1] = ~this.buffer[1];\n\n        if (this.buffer[0] == 0) { ++this.buffer[1]; }\n        return this;\n    }\n\n    public times(other: Int64): Int64 {\n        this._times(other);\n        return this;\n    }\n\n    public plus(other: Int64): Int64 {\n        this._plus(other);\n        return this;\n    }\n\n    public lessThan(other: Int64): boolean {\n        // force high bytes to be signed\n        const this_high = this.buffer[1] << 0;\n        const other_high = other.buffer[1] << 0;\n        return this_high < other_high ||\n            (this_high === other_high && this.buffer[0] < other.buffer[0]);\n    }\n\n    /** @nocollapse */\n    public static from(val: any, out_buffer = new Uint32Array(2)): Int64 {\n        return Int64.fromString(\n            typeof(val) === 'string' ? val : val.toString(),\n            out_buffer\n        );\n    }\n\n    /** @nocollapse */\n    public static fromNumber(num: number, out_buffer = new Uint32Array(2)): Int64 {\n        // Always parse numbers as strings - pulling out high and low bits\n        // directly seems to lose precision sometimes\n        // For example:\n        //     > -4613034156400212000 >>> 0\n        //     721782784\n        // The correct lower 32-bits are 721782752\n        return Int64.fromString(num.toString(), out_buffer);\n    }\n\n    /** @nocollapse */\n    public static fromString(str: string, out_buffer = new Uint32Array(2)): Int64 {\n        // TODO: Assert that out_buffer is 0 and length = 2\n        const negate = str.startsWith('-');\n        const length = str.length;\n\n        let out = new Int64(out_buffer);\n        for (let posn = negate ? 1 : 0; posn < length;) {\n            const group = kInt32DecimalDigits < length - posn ?\n                          kInt32DecimalDigits : length - posn;\n            const chunk = new Int64(new Uint32Array([parseInt(str.substr(posn, group), 10), 0]));\n            const multiple = new Int64(new Uint32Array([kPowersOfTen[group], 0]));\n\n            out.times(multiple);\n            out.plus(chunk);\n\n            posn += group;\n        }\n        return negate ? out.negate() : out;\n    }\n\n    /** @nocollapse */\n    public static convertArray(values: (string|number)[]): Uint32Array {\n        const data = new Uint32Array(values.length * 2);\n        for (let i = -1, n = values.length; ++i < n;) {\n            Int64.from(values[i], new Uint32Array(data.buffer, data.byteOffset + 2 * i * 4, 2));\n        }\n        return data;\n    }\n\n    /** @nocollapse */\n    public static multiply(left: Int64, right: Int64): Int64 {\n        let rtrn = new Int64(new Uint32Array(left.buffer));\n        return rtrn.times(right);\n    }\n\n    /** @nocollapse */\n    public static add(left: Int64, right: Int64): Int64 {\n        let rtrn = new Int64(new Uint32Array(left.buffer));\n        return rtrn.plus(right);\n    }\n}\n\n/** @ignore */\nexport class Int128 {\n    constructor (private buffer: Uint32Array) {\n        // buffer[3] MSB (high)\n        // buffer[2]\n        // buffer[1]\n        // buffer[0] LSB (low)\n    }\n\n    public high(): Int64 {\n        return new Int64(new Uint32Array(this.buffer.buffer, this.buffer.byteOffset + 8, 2));\n    }\n\n    public low(): Int64 {\n        return new Int64(new Uint32Array(this.buffer.buffer, this.buffer.byteOffset, 2));\n    }\n\n    public negate(): Int128 {\n        this.buffer[0] = ~this.buffer[0] + 1;\n        this.buffer[1] = ~this.buffer[1];\n        this.buffer[2] = ~this.buffer[2];\n        this.buffer[3] = ~this.buffer[3];\n\n        if (this.buffer[0] == 0) { ++this.buffer[1]; }\n        if (this.buffer[1] == 0) { ++this.buffer[2]; }\n        if (this.buffer[2] == 0) { ++this.buffer[3]; }\n        return this;\n    }\n\n    public times(other: Int128): Int128 {\n        // Break the left and right numbers into 32 bit chunks\n        // so that we can multiply them without overflow.\n        const L0 = new Uint64(new Uint32Array([this.buffer[3],  0]));\n        const L1 = new Uint64(new Uint32Array([this.buffer[2],  0]));\n        const L2 = new Uint64(new Uint32Array([this.buffer[1],  0]));\n        const L3 = new Uint64(new Uint32Array([this.buffer[0],  0]));\n\n        const R0 = new Uint64(new Uint32Array([other.buffer[3], 0]));\n        const R1 = new Uint64(new Uint32Array([other.buffer[2], 0]));\n        const R2 = new Uint64(new Uint32Array([other.buffer[1], 0]));\n        const R3 = new Uint64(new Uint32Array([other.buffer[0], 0]));\n\n        let product = Uint64.multiply(L3, R3);\n        this.buffer[0] = product.low();\n\n        let sum = new Uint64(new Uint32Array([product.high(), 0]));\n\n        product = Uint64.multiply(L2, R3);\n        sum.plus(product);\n\n        product = Uint64.multiply(L3, R2);\n        sum.plus(product);\n\n        this.buffer[1] = sum.low();\n\n        this.buffer[3] = (sum.lessThan(product) ? 1 : 0);\n\n        this.buffer[2] = sum.high();\n        let high = new Uint64(new Uint32Array(this.buffer.buffer, this.buffer.byteOffset + 8, 2));\n\n        high.plus(Uint64.multiply(L1, R3))\n            .plus(Uint64.multiply(L2, R2))\n            .plus(Uint64.multiply(L3, R1));\n        this.buffer[3] += Uint64.multiply(L0, R3)\n                        .plus(Uint64.multiply(L1, R2))\n                        .plus(Uint64.multiply(L2, R1))\n                        .plus(Uint64.multiply(L3, R0)).low();\n\n        return this;\n    }\n\n    public plus(other: Int128): Int128 {\n        let sums = new Uint32Array(4);\n        sums[3] = (this.buffer[3] + other.buffer[3]) >>> 0;\n        sums[2] = (this.buffer[2] + other.buffer[2]) >>> 0;\n        sums[1] = (this.buffer[1] + other.buffer[1]) >>> 0;\n        sums[0] = (this.buffer[0] + other.buffer[0]) >>> 0;\n\n        if (sums[0] < (this.buffer[0] >>> 0)) {\n            ++sums[1];\n        }\n        if (sums[1] < (this.buffer[1] >>> 0)) {\n            ++sums[2];\n        }\n        if (sums[2] < (this.buffer[2] >>> 0)) {\n            ++sums[3];\n        }\n\n        this.buffer[3] = sums[3];\n        this.buffer[2] = sums[2];\n        this.buffer[1] = sums[1];\n        this.buffer[0] = sums[0];\n\n        return this;\n    }\n\n    public hex(): string {\n        return `${intAsHex(this.buffer[3])} ${intAsHex(this.buffer[2])} ${intAsHex(this.buffer[1])} ${intAsHex(this.buffer[0])}`;\n    }\n\n    /** @nocollapse */\n    public static multiply(left: Int128, right: Int128): Int128 {\n        let rtrn = new Int128(new Uint32Array(left.buffer));\n        return rtrn.times(right);\n    }\n\n    /** @nocollapse */\n    public static add(left: Int128, right: Int128): Int128 {\n        let rtrn = new Int128(new Uint32Array(left.buffer));\n        return rtrn.plus(right);\n    }\n\n    /** @nocollapse */\n    public static from(val: any, out_buffer = new Uint32Array(4)): Int128 {\n        return Int128.fromString(\n            typeof(val) === 'string' ? val : val.toString(),\n            out_buffer\n        );\n    }\n\n    /** @nocollapse */\n    public static fromNumber(num: number, out_buffer = new Uint32Array(4)): Int128 {\n        // Always parse numbers as strings - pulling out high and low bits\n        // directly seems to lose precision sometimes\n        // For example:\n        //     > -4613034156400212000 >>> 0\n        //     721782784\n        // The correct lower 32-bits are 721782752\n        return Int128.fromString(num.toString(), out_buffer);\n    }\n\n    /** @nocollapse */\n    public static fromString(str: string, out_buffer = new Uint32Array(4)): Int128 {\n        // TODO: Assert that out_buffer is 0 and length = 4\n        const negate = str.startsWith('-');\n        const length = str.length;\n\n        let out = new Int128(out_buffer);\n        for (let posn = negate ? 1 : 0; posn < length;) {\n            const group = kInt32DecimalDigits < length - posn ?\n                          kInt32DecimalDigits : length - posn;\n            const chunk = new Int128(new Uint32Array([parseInt(str.substr(posn, group), 10), 0, 0, 0]));\n            const multiple = new Int128(new Uint32Array([kPowersOfTen[group], 0, 0, 0]));\n\n            out.times(multiple);\n            out.plus(chunk);\n\n            posn += group;\n        }\n\n        return negate ? out.negate() : out;\n    }\n\n    /** @nocollapse */\n    public static convertArray(values: (string|number)[]): Uint32Array {\n        // TODO: Distinguish between string and number at compile-time\n        const data = new Uint32Array(values.length * 4);\n        for (let i = -1, n = values.length; ++i < n;) {\n            Int128.from(values[i], new Uint32Array(data.buffer, data.byteOffset + 4 * 4 * i, 4));\n        }\n        return data;\n    }\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Data } from '../data';\nimport * as type from '../type';\nimport { Field } from '../schema';\nimport { Vector } from '../vector';\nimport { DataType } from '../type';\nimport { Visitor } from '../visitor';\nimport { packBools } from '../util/bit';\nimport { encodeUtf8 } from '../util/utf8';\nimport { Int64, Int128 } from '../util/int';\nimport { UnionMode, DateUnit } from '../enum';\nimport { toArrayBufferView } from '../util/buffer';\nimport { BufferRegion, FieldNode } from '../ipc/metadata/message';\n\n/** @ignore */\nexport interface VectorLoader extends Visitor {\n    visit<T extends DataType>(node: Field<T> | T): Data<T>;\n    visitMany<T extends DataType>(nodes: (Field<T> | T)[]): Data<T>[];\n}\n\n/** @ignore */\nexport class VectorLoader extends Visitor {\n    private bytes: Uint8Array;\n    private nodes: FieldNode[];\n    private nodesIndex: number = -1;\n    private buffers: BufferRegion[];\n    private buffersIndex: number = -1;\n    private dictionaries: Map<number, Vector<any>>;\n    constructor(bytes: Uint8Array, nodes: FieldNode[], buffers: BufferRegion[], dictionaries: Map<number, Vector<any>>) {\n        super();\n        this.bytes = bytes;\n        this.nodes = nodes;\n        this.buffers = buffers;\n        this.dictionaries = dictionaries;\n    }\n\n    public visit<T extends DataType>(node: Field<T> | T): Data<T> {\n        return super.visit(node instanceof Field ? node.type : node);\n    }\n\n    public visitNull            <T extends type.Null>            (type: T, { length,           } = this.nextFieldNode()) { return            Data.Null(type, 0, length);                                                                                                                                 }\n    public visitBool            <T extends type.Bool>            (type: T, { length, nullCount } = this.nextFieldNode()) { return            Data.Bool(type, 0, length, nullCount, this.readNullBitmap(type, nullCount), this.readData(type));                                                           }\n    public visitInt             <T extends type.Int>             (type: T, { length, nullCount } = this.nextFieldNode()) { return             Data.Int(type, 0, length, nullCount, this.readNullBitmap(type, nullCount), this.readData(type));                                                           }\n    public visitFloat           <T extends type.Float>           (type: T, { length, nullCount } = this.nextFieldNode()) { return           Data.Float(type, 0, length, nullCount, this.readNullBitmap(type, nullCount), this.readData(type));                                                           }\n    public visitUtf8            <T extends type.Utf8>            (type: T, { length, nullCount } = this.nextFieldNode()) { return            Data.Utf8(type, 0, length, nullCount, this.readNullBitmap(type, nullCount), this.readOffsets(type), this.readData(type));                                   }\n    public visitBinary          <T extends type.Binary>          (type: T, { length, nullCount } = this.nextFieldNode()) { return          Data.Binary(type, 0, length, nullCount, this.readNullBitmap(type, nullCount), this.readOffsets(type), this.readData(type));                                   }\n    public visitFixedSizeBinary <T extends type.FixedSizeBinary> (type: T, { length, nullCount } = this.nextFieldNode()) { return Data.FixedSizeBinary(type, 0, length, nullCount, this.readNullBitmap(type, nullCount), this.readData(type));                                                           }\n    public visitDate            <T extends type.Date_>           (type: T, { length, nullCount } = this.nextFieldNode()) { return            Data.Date(type, 0, length, nullCount, this.readNullBitmap(type, nullCount), this.readData(type));                                                           }\n    public visitTimestamp       <T extends type.Timestamp>       (type: T, { length, nullCount } = this.nextFieldNode()) { return       Data.Timestamp(type, 0, length, nullCount, this.readNullBitmap(type, nullCount), this.readData(type));                                                           }\n    public visitTime            <T extends type.Time>            (type: T, { length, nullCount } = this.nextFieldNode()) { return            Data.Time(type, 0, length, nullCount, this.readNullBitmap(type, nullCount), this.readData(type));                                                           }\n    public visitDecimal         <T extends type.Decimal>         (type: T, { length, nullCount } = this.nextFieldNode()) { return         Data.Decimal(type, 0, length, nullCount, this.readNullBitmap(type, nullCount), this.readData(type));                                                           }\n    public visitList            <T extends type.List>            (type: T, { length, nullCount } = this.nextFieldNode()) { return            Data.List(type, 0, length, nullCount, this.readNullBitmap(type, nullCount), this.readOffsets(type), this.visit(type.children[0]));                          }\n    public visitStruct          <T extends type.Struct>          (type: T, { length, nullCount } = this.nextFieldNode()) { return          Data.Struct(type, 0, length, nullCount, this.readNullBitmap(type, nullCount), this.visitMany(type.children));                                                 }\n    public visitUnion           <T extends type.Union>           (type: T                                              ) { return type.mode === UnionMode.Sparse ? this.visitSparseUnion(type as type.SparseUnion) : this.visitDenseUnion(type as type.DenseUnion);                                      }\n    public visitDenseUnion      <T extends type.DenseUnion>      (type: T, { length, nullCount } = this.nextFieldNode()) { return           Data.Union(type, 0, length, nullCount, this.readNullBitmap(type, nullCount), this.readTypeIds(type), this.readOffsets(type), this.visitMany(type.children)); }\n    public visitSparseUnion     <T extends type.SparseUnion>     (type: T, { length, nullCount } = this.nextFieldNode()) { return           Data.Union(type, 0, length, nullCount, this.readNullBitmap(type, nullCount), this.readTypeIds(type), this.visitMany(type.children));                         }\n    public visitDictionary      <T extends type.Dictionary>      (type: T, { length, nullCount } = this.nextFieldNode()) { return      Data.Dictionary(type, 0, length, nullCount, this.readNullBitmap(type, nullCount), this.readData(type.indices), this.readDictionary(type));                        }\n    public visitInterval        <T extends type.Interval>        (type: T, { length, nullCount } = this.nextFieldNode()) { return        Data.Interval(type, 0, length, nullCount, this.readNullBitmap(type, nullCount), this.readData(type));                                                           }\n    public visitFixedSizeList   <T extends type.FixedSizeList>   (type: T, { length, nullCount } = this.nextFieldNode()) { return   Data.FixedSizeList(type, 0, length, nullCount, this.readNullBitmap(type, nullCount), this.visit(type.children[0]));                                                  }\n    public visitMap             <T extends type.Map_>            (type: T, { length, nullCount } = this.nextFieldNode()) { return             Data.Map(type, 0, length, nullCount, this.readNullBitmap(type, nullCount), this.readOffsets(type), this.visit(type.children[0]));                          }\n\n    protected nextFieldNode() { return this.nodes[++this.nodesIndex]; }\n    protected nextBufferRange() { return this.buffers[++this.buffersIndex]; }\n    protected readNullBitmap<T extends DataType>(type: T, nullCount: number, buffer = this.nextBufferRange()) {\n        return nullCount > 0 && this.readData(type, buffer) || new Uint8Array(0);\n    }\n    protected readOffsets<T extends DataType>(type: T, buffer?: BufferRegion) { return this.readData(type, buffer); }\n    protected readTypeIds<T extends DataType>(type: T, buffer?: BufferRegion) { return this.readData(type, buffer); }\n    protected readData<T extends DataType>(_type: T, { length, offset } = this.nextBufferRange()) {\n        return this.bytes.subarray(offset, offset + length);\n    }\n    protected readDictionary<T extends type.Dictionary>(type: T): Vector<T['dictionary']> {\n        return this.dictionaries.get(type.id)!;\n    }\n}\n\n/** @ignore */\nexport class JSONVectorLoader extends VectorLoader {\n    private sources: any[][];\n    constructor(sources: any[][], nodes: FieldNode[], buffers: BufferRegion[], dictionaries: Map<number, Vector<any>>) {\n        super(new Uint8Array(0), nodes, buffers, dictionaries);\n        this.sources = sources;\n    }\n    protected readNullBitmap<T extends DataType>(_type: T, nullCount: number, { offset } = this.nextBufferRange()) {\n        return nullCount <= 0 ? new Uint8Array(0) : packBools(this.sources[offset]);\n    }\n    protected readOffsets<T extends DataType>(_type: T, { offset } = this.nextBufferRange()) {\n        return toArrayBufferView(Uint8Array, toArrayBufferView(Int32Array, this.sources[offset]));\n    }\n    protected readTypeIds<T extends DataType>(type: T, { offset } = this.nextBufferRange()) {\n        return toArrayBufferView(Uint8Array, toArrayBufferView(type.ArrayType, this.sources[offset]));\n    }\n    protected readData<T extends DataType>(type: T, { offset } = this.nextBufferRange()) {\n        const { sources } = this;\n        if (DataType.isTimestamp(type)) {\n            return toArrayBufferView(Uint8Array, Int64.convertArray(sources[offset] as string[]));\n        } else if ((DataType.isInt(type) || DataType.isTime(type)) && type.bitWidth === 64) {\n            return toArrayBufferView(Uint8Array, Int64.convertArray(sources[offset] as string[]));\n        } else if (DataType.isDate(type) && type.unit === DateUnit.MILLISECOND) {\n            return toArrayBufferView(Uint8Array, Int64.convertArray(sources[offset] as string[]));\n        } else if (DataType.isDecimal(type)) {\n            return toArrayBufferView(Uint8Array, Int128.convertArray(sources[offset] as string[]));\n        } else if (DataType.isBinary(type) || DataType.isFixedSizeBinary(type)) {\n            return binaryDataFromJSON(sources[offset] as string[]);\n        } else if (DataType.isBool(type)) {\n            return packBools(sources[offset] as number[]);\n        } else if (DataType.isUtf8(type)) {\n            return encodeUtf8((sources[offset] as string[]).join(''));\n        }\n        return toArrayBufferView(Uint8Array, toArrayBufferView(type.ArrayType, sources[offset].map((x) => +x)));\n    }\n}\n\n/** @ignore */\nfunction binaryDataFromJSON(values: string[]) {\n    // \"DATA\": [\"49BC7D5B6C47D2\",\"3F5FB6D9322026\"]\n    // There are definitely more efficient ways to do this... but it gets the\n    // job done.\n    const joined = values.join('');\n    const data = new Uint8Array(joined.length / 2);\n    for (let i = 0; i < joined.length; i += 2) {\n        data[i >> 1] = parseInt(joined.substr(i, 2), 16);\n    }\n    return data;\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { flatbuffers } from 'flatbuffers';\nimport Long = flatbuffers.Long;\nimport Builder = flatbuffers.Builder;\nimport * as Schema_ from '../fb/Schema';\n\nimport * as type from '../type';\nimport { Visitor } from '../visitor';\n\nimport Null = Schema_.org.apache.arrow.flatbuf.Null;\nimport Int = Schema_.org.apache.arrow.flatbuf.Int;\nimport FloatingPoint = Schema_.org.apache.arrow.flatbuf.FloatingPoint;\nimport Binary = Schema_.org.apache.arrow.flatbuf.Binary;\nimport Bool = Schema_.org.apache.arrow.flatbuf.Bool;\nimport Utf8 = Schema_.org.apache.arrow.flatbuf.Utf8;\nimport Decimal = Schema_.org.apache.arrow.flatbuf.Decimal;\nimport Date = Schema_.org.apache.arrow.flatbuf.Date;\nimport Time = Schema_.org.apache.arrow.flatbuf.Time;\nimport Timestamp = Schema_.org.apache.arrow.flatbuf.Timestamp;\nimport Interval = Schema_.org.apache.arrow.flatbuf.Interval;\nimport List = Schema_.org.apache.arrow.flatbuf.List;\nimport Struct = Schema_.org.apache.arrow.flatbuf.Struct_;\nimport Union = Schema_.org.apache.arrow.flatbuf.Union;\nimport DictionaryEncoding = Schema_.org.apache.arrow.flatbuf.DictionaryEncoding;\nimport FixedSizeBinary = Schema_.org.apache.arrow.flatbuf.FixedSizeBinary;\nimport FixedSizeList = Schema_.org.apache.arrow.flatbuf.FixedSizeList;\nimport Map_ = Schema_.org.apache.arrow.flatbuf.Map;\n\n/** @ignore */\nexport interface TypeAssembler extends Visitor {\n    visit<T extends type.DataType>(node: T, builder: Builder): number | undefined;\n}\n\n/** @ignore */\nexport class TypeAssembler extends Visitor {\n    public visit<T extends type.DataType>(node: T, builder: Builder): number | undefined {\n        return (node == null || builder == null) ? undefined : super.visit(node, builder);\n    }\n    public visitNull<T extends type.Null>(_node: T, b: Builder) {\n        Null.startNull(b);\n        return Null.endNull(b);\n    }\n    public visitInt<T extends type.Int>(node: T, b: Builder) {\n        Int.startInt(b);\n        Int.addBitWidth(b, node.bitWidth);\n        Int.addIsSigned(b, node.isSigned);\n        return Int.endInt(b);\n    }\n    public visitFloat<T extends type.Float>(node: T, b: Builder) {\n        FloatingPoint.startFloatingPoint(b);\n        FloatingPoint.addPrecision(b, node.precision);\n        return FloatingPoint.endFloatingPoint(b);\n    }\n    public visitBinary<T extends type.Binary>(_node: T, b: Builder) {\n        Binary.startBinary(b);\n        return Binary.endBinary(b);\n    }\n    public visitBool<T extends type.Bool>(_node: T, b: Builder) {\n        Bool.startBool(b);\n        return Bool.endBool(b);\n    }\n    public visitUtf8<T extends type.Utf8>(_node: T, b: Builder) {\n        Utf8.startUtf8(b);\n        return Utf8.endUtf8(b);\n    }\n    public visitDecimal<T extends type.Decimal>(node: T, b: Builder) {\n        Decimal.startDecimal(b);\n        Decimal.addScale(b, node.scale);\n        Decimal.addPrecision(b, node.precision);\n        return Decimal.endDecimal(b);\n    }\n    public visitDate<T extends type.Date_>(node: T, b: Builder) {\n        Date.startDate(b);\n        Date.addUnit(b, node.unit);\n        return Date.endDate(b);\n    }\n    public visitTime<T extends type.Time>(node: T, b: Builder) {\n        Time.startTime(b);\n        Time.addUnit(b, node.unit);\n        Time.addBitWidth(b, node.bitWidth);\n        return Time.endTime(b);\n    }\n    public visitTimestamp<T extends type.Timestamp>(node: T, b: Builder) {\n        const timezone = (node.timezone && b.createString(node.timezone)) || undefined;\n        Timestamp.startTimestamp(b);\n        Timestamp.addUnit(b, node.unit);\n        if (timezone !== undefined) {\n            Timestamp.addTimezone(b, timezone);\n        }\n        return Timestamp.endTimestamp(b);\n    }\n    public visitInterval<T extends type.Interval>(node: T, b: Builder) {\n        Interval.startInterval(b);\n        Interval.addUnit(b, node.unit);\n        return Interval.endInterval(b);\n    }\n    public visitList<T extends type.List>(_node: T, b: Builder) {\n        List.startList(b);\n        return List.endList(b);\n    }\n    public visitStruct<T extends type.Struct>(_node: T, b: Builder) {\n        Struct.startStruct_(b);\n        return Struct.endStruct_(b);\n    }\n    public visitUnion<T extends type.Union>(node: T, b: Builder) {\n        Union.startTypeIdsVector(b, node.typeIds.length);\n        const typeIds = Union.createTypeIdsVector(b, node.typeIds);\n        Union.startUnion(b);\n        Union.addMode(b, node.mode);\n        Union.addTypeIds(b, typeIds);\n        return Union.endUnion(b);\n    }\n    public visitDictionary<T extends type.Dictionary>(node: T, b: Builder) {\n        const indexType = this.visit(node.indices, b);\n        DictionaryEncoding.startDictionaryEncoding(b);\n        DictionaryEncoding.addId(b, new Long(node.id, 0));\n        DictionaryEncoding.addIsOrdered(b, node.isOrdered);\n        if (indexType !== undefined) {\n            DictionaryEncoding.addIndexType(b, indexType);\n        }\n        return DictionaryEncoding.endDictionaryEncoding(b);\n    }\n    public visitFixedSizeBinary<T extends type.FixedSizeBinary>(node: T, b: Builder) {\n        FixedSizeBinary.startFixedSizeBinary(b);\n        FixedSizeBinary.addByteWidth(b, node.byteWidth);\n        return FixedSizeBinary.endFixedSizeBinary(b);\n    }\n    public visitFixedSizeList<T extends type.FixedSizeList>(node: T, b: Builder) {\n        FixedSizeList.startFixedSizeList(b);\n        FixedSizeList.addListSize(b, node.listSize);\n        return FixedSizeList.endFixedSizeList(b);\n    }\n    public visitMap<T extends type.Map_>(node: T, b: Builder) {\n        Map_.startMap(b);\n        Map_.addKeysSorted(b, node.keysSorted);\n        return Map_.endMap(b);\n    }\n}\n\n/** @ignore */\nexport const instance = new TypeAssembler();\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Schema, Field } from '../../schema';\nimport {\n    DataType, Dictionary, TimeBitWidth,\n    Utf8, Binary, Decimal, FixedSizeBinary,\n    List, FixedSizeList, Map_, Struct, Union,\n    Bool, Null, Int, Float, Date_, Time, Interval, Timestamp, IntBitWidth, Int32, TKeys,\n} from '../../type';\n\nimport { DictionaryBatch, RecordBatch, FieldNode, BufferRegion } from './message';\nimport { TimeUnit, Precision, IntervalUnit, UnionMode, DateUnit } from '../../enum';\n\n/** @ignore */\nexport function schemaFromJSON(_schema: any, dictionaries: Map<number, DataType> = new Map()) {\n    return new Schema(\n        schemaFieldsFromJSON(_schema, dictionaries),\n        customMetadataFromJSON(_schema['customMetadata']),\n        dictionaries\n    );\n}\n\n/** @ignore */\nexport function recordBatchFromJSON(b: any) {\n    return new RecordBatch(\n        b['count'],\n        fieldNodesFromJSON(b['columns']),\n        buffersFromJSON(b['columns'])\n    );\n}\n\n/** @ignore */\nexport function dictionaryBatchFromJSON(b: any) {\n    return new DictionaryBatch(\n        recordBatchFromJSON(b['data']),\n        b['id'], b['isDelta']\n    );\n}\n\n/** @ignore */\nfunction schemaFieldsFromJSON(_schema: any, dictionaries?: Map<number, DataType>) {\n    return (_schema['fields'] || []).filter(Boolean).map((f: any) => Field.fromJSON(f, dictionaries));\n}\n\n/** @ignore */\nfunction fieldChildrenFromJSON(_field: any, dictionaries?: Map<number, DataType>): Field[] {\n    return (_field['children'] || []).filter(Boolean).map((f: any) => Field.fromJSON(f, dictionaries));\n}\n\n/** @ignore */\nfunction fieldNodesFromJSON(xs: any[]): FieldNode[] {\n    return (xs || []).reduce<FieldNode[]>((fieldNodes, column: any) => [\n        ...fieldNodes,\n        new FieldNode(\n            column['count'],\n            nullCountFromJSON(column['VALIDITY'])\n        ),\n        ...fieldNodesFromJSON(column['children'])\n    ], [] as FieldNode[]);\n}\n\n/** @ignore */\nfunction buffersFromJSON(xs: any[], buffers: BufferRegion[] = []): BufferRegion[] {\n    for (let i = -1, n = (xs || []).length; ++i < n;) {\n        const column = xs[i];\n        column['VALIDITY'] && buffers.push(new BufferRegion(buffers.length, column['VALIDITY'].length));\n        column['TYPE'] && buffers.push(new BufferRegion(buffers.length, column['TYPE'].length));\n        column['OFFSET'] && buffers.push(new BufferRegion(buffers.length, column['OFFSET'].length));\n        column['DATA'] && buffers.push(new BufferRegion(buffers.length, column['DATA'].length));\n        buffers = buffersFromJSON(column['children'], buffers);\n    }\n    return buffers;\n}\n\n/** @ignore */\nfunction nullCountFromJSON(validity: number[]) {\n    return (validity || []).reduce((sum, val) => sum + +(val === 0), 0);\n}\n\n/** @ignore */\nexport function fieldFromJSON(_field: any, dictionaries?: Map<number, DataType>) {\n\n    let id: number;\n    let keys: TKeys | null;\n    let field: Field | void;\n    let dictMeta: any;\n    let type: DataType<any>;\n    let dictType: Dictionary;\n\n    // If no dictionary encoding\n    if (!dictionaries || !(dictMeta = _field['dictionary'])) {\n        type = typeFromJSON(_field, fieldChildrenFromJSON(_field, dictionaries));\n        field = new Field(_field['name'], type, _field['nullable'], customMetadataFromJSON(_field['customMetadata']));\n    }\n    // tslint:disable\n    // If dictionary encoded and the first time we've seen this dictionary id, decode\n    // the data type and child fields, then wrap in a Dictionary type and insert the\n    // data type into the dictionary types map.\n    else if (!dictionaries.has(id = dictMeta['id'])) {\n        // a dictionary index defaults to signed 32 bit int if unspecified\n        keys = (keys = dictMeta['indexType']) ? indexTypeFromJSON(keys) as TKeys : new Int32();\n        dictionaries.set(id, type = typeFromJSON(_field, fieldChildrenFromJSON(_field, dictionaries)));\n        dictType = new Dictionary(type, keys, id, dictMeta['isOrdered']);\n        field = new Field(_field['name'], dictType, _field['nullable'], customMetadataFromJSON(_field['customMetadata']));\n    }\n    // If dictionary encoded, and have already seen this dictionary Id in the schema, then reuse the\n    // data type and wrap in a new Dictionary type and field.\n    else {\n        // a dictionary index defaults to signed 32 bit int if unspecified\n        keys = (keys = dictMeta['indexType']) ? indexTypeFromJSON(keys) as TKeys : new Int32();\n        dictType = new Dictionary(dictionaries.get(id)!, keys, id, dictMeta['isOrdered']);\n        field = new Field(_field['name'], dictType, _field['nullable'], customMetadataFromJSON(_field['customMetadata']));\n    }\n    return field || null;\n}\n\n/** @ignore */\nfunction customMetadataFromJSON(_metadata?: object) {\n    return new Map<string, string>(Object.entries(_metadata || {}));\n}\n\n/** @ignore */\nfunction indexTypeFromJSON(_type: any) {\n    return new Int(_type['isSigned'], _type['bitWidth']);\n}\n\n/** @ignore */\nfunction typeFromJSON(f: any, children?: Field[]): DataType<any> {\n\n    const typeId = f['type']['name'];\n\n    switch (typeId) {\n        case 'NONE':   return new Null();\n        case 'null':   return new Null();\n        case 'binary': return new Binary();\n        case 'utf8':   return new Utf8();\n        case 'bool':   return new Bool();\n        case 'list':   return new List((children || [])[0]);\n        case 'struct': return new Struct(children || []);\n        case 'struct_': return new Struct(children || []);\n    }\n\n    switch (typeId) {\n        case 'int': {\n            const t = f['type'];\n            return new Int(t['isSigned'], t['bitWidth'] as IntBitWidth);\n        }\n        case 'floatingpoint': {\n            const t = f['type'];\n            return new Float(Precision[t['precision']] as any);\n        }\n        case 'decimal': {\n            const t = f['type'];\n            return new Decimal(t['scale'], t['precision']);\n        }\n        case 'date': {\n            const t = f['type'];\n            return new Date_(DateUnit[t['unit']] as any);\n        }\n        case 'time': {\n            const t = f['type'];\n            return new Time(TimeUnit[t['unit']] as any, t['bitWidth'] as TimeBitWidth);\n        }\n        case 'timestamp': {\n            const t = f['type'];\n            return new Timestamp(TimeUnit[t['unit']] as any, t['timezone']);\n        }\n        case 'interval': {\n            const t = f['type'];\n            return new Interval(IntervalUnit[t['unit']] as any);\n        }\n        case 'union': {\n            const t = f['type'];\n            return new Union(UnionMode[t['mode']] as any, (t['typeIds'] || []), children || []);\n        }\n        case 'fixedsizebinary': {\n            const t = f['type'];\n            return new FixedSizeBinary(t['byteWidth']);\n        }\n        case 'fixedsizelist': {\n            const t = f['type'];\n            return new FixedSizeList(t['listSize'], (children || [])[0]);\n        }\n        case 'map': {\n            const t = f['type'];\n            return new Map_((children || [])[0], t['keysSorted']);\n        }\n    }\n    throw new Error(`Unrecognized type: \"${typeId}\"`);\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { flatbuffers } from 'flatbuffers';\nimport * as Schema_ from '../../fb/Schema';\nimport * as Message_ from '../../fb/Message';\n\nimport { Schema, Field } from '../../schema';\nimport { toUint8Array } from '../../util/buffer';\nimport { ArrayBufferViewInput } from '../../util/buffer';\nimport { MessageHeader, MetadataVersion } from '../../enum';\nimport { instance as typeAssembler } from '../../visitor/typeassembler';\nimport { fieldFromJSON, schemaFromJSON, recordBatchFromJSON, dictionaryBatchFromJSON } from './json';\n\nimport Long = flatbuffers.Long;\nimport Builder = flatbuffers.Builder;\nimport ByteBuffer = flatbuffers.ByteBuffer;\nimport _Int = Schema_.org.apache.arrow.flatbuf.Int;\nimport Type = Schema_.org.apache.arrow.flatbuf.Type;\nimport _Field = Schema_.org.apache.arrow.flatbuf.Field;\nimport _Schema = Schema_.org.apache.arrow.flatbuf.Schema;\nimport _Buffer = Schema_.org.apache.arrow.flatbuf.Buffer;\nimport _Message = Message_.org.apache.arrow.flatbuf.Message;\nimport _KeyValue = Schema_.org.apache.arrow.flatbuf.KeyValue;\nimport _FieldNode = Message_.org.apache.arrow.flatbuf.FieldNode;\nimport _Endianness = Schema_.org.apache.arrow.flatbuf.Endianness;\nimport _RecordBatch = Message_.org.apache.arrow.flatbuf.RecordBatch;\nimport _DictionaryBatch = Message_.org.apache.arrow.flatbuf.DictionaryBatch;\nimport _DictionaryEncoding = Schema_.org.apache.arrow.flatbuf.DictionaryEncoding;\n\nimport {\n    DataType, Dictionary, TimeBitWidth,\n    Utf8, Binary, Decimal, FixedSizeBinary,\n    List, FixedSizeList, Map_, Struct, Union,\n    Bool, Null, Int, Float, Date_, Time, Interval, Timestamp, IntBitWidth, Int32, TKeys,\n} from '../../type';\n\n/**\n * @ignore\n * @private\n **/\nexport class Message<T extends MessageHeader = any> {\n\n    /** @nocollapse */\n    public static fromJSON<T extends MessageHeader>(msg: any, headerType: T): Message<T> {\n        const message = new Message(0, MetadataVersion.V4, headerType);\n        message._createHeader = messageHeaderFromJSON(msg, headerType);\n        return message;\n    }\n\n    /** @nocollapse */\n    public static decode(buf: ArrayBufferViewInput) {\n        buf = new ByteBuffer(toUint8Array(buf));\n        const _message = _Message.getRootAsMessage(buf);\n        const bodyLength: Long = _message.bodyLength()!;\n        const version: MetadataVersion = _message.version();\n        const headerType: MessageHeader = _message.headerType();\n        const message = new Message(bodyLength, version, headerType);\n        message._createHeader = decodeMessageHeader(_message, headerType);\n        return message;\n    }\n\n    /** @nocollapse */\n    public static encode<T extends MessageHeader>(message: Message<T>) {\n        let b = new Builder(), headerOffset = -1;\n        if (message.isSchema()) {\n            headerOffset = Schema.encode(b, message.header() as Schema);\n        } else if (message.isRecordBatch()) {\n            headerOffset = RecordBatch.encode(b, message.header() as RecordBatch);\n        } else if (message.isDictionaryBatch()) {\n            headerOffset = DictionaryBatch.encode(b, message.header() as DictionaryBatch);\n        }\n        _Message.startMessage(b);\n        _Message.addVersion(b, MetadataVersion.V4);\n        _Message.addHeader(b, headerOffset);\n        _Message.addHeaderType(b, message.headerType);\n        _Message.addBodyLength(b, new Long(message.bodyLength, 0));\n        _Message.finishMessageBuffer(b, _Message.endMessage(b));\n        return b.asUint8Array();\n    }\n\n    /** @nocollapse */\n    public static from(header: Schema | RecordBatch | DictionaryBatch, bodyLength = 0) {\n        if (header instanceof Schema) {\n            return new Message(0, MetadataVersion.V4, MessageHeader.Schema, header);\n        }\n        if (header instanceof RecordBatch) {\n            return new Message(bodyLength, MetadataVersion.V4, MessageHeader.RecordBatch, header);\n        }\n        if (header instanceof DictionaryBatch) {\n            return new Message(bodyLength, MetadataVersion.V4, MessageHeader.DictionaryBatch, header);\n        }\n        throw new Error(`Unrecognized Message header: ${header}`);\n    }\n\n    // @ts-ignore\n    public body: Uint8Array;\n    protected _headerType: T;\n    protected _bodyLength: number;\n    protected _version: MetadataVersion;\n    public get type() { return this.headerType; }\n    public get version() { return this._version; }\n    public get headerType() { return this._headerType; }\n    public get bodyLength() { return this._bodyLength; }\n    // @ts-ignore\n    protected _createHeader: MessageHeaderDecoder;\n    public header() { return this._createHeader<T>(); }\n    public isSchema(): this is Message<MessageHeader.Schema> { return this.headerType === MessageHeader.Schema; }\n    public isRecordBatch(): this is Message<MessageHeader.RecordBatch> { return this.headerType === MessageHeader.RecordBatch; }\n    public isDictionaryBatch(): this is Message<MessageHeader.DictionaryBatch> { return this.headerType === MessageHeader.DictionaryBatch; }\n\n    constructor(bodyLength: Long | number, version: MetadataVersion, headerType: T, header?: any) {\n        this._version = version;\n        this._headerType = headerType;\n        this.body = new Uint8Array(0);\n        header && (this._createHeader = () => header);\n        this._bodyLength = typeof bodyLength === 'number' ? bodyLength : bodyLength.low;\n    }\n}\n\n/**\n * @ignore\n * @private\n **/\nexport class RecordBatch {\n    protected _length: number;\n    protected _nodes: FieldNode[];\n    protected _buffers: BufferRegion[];\n    public get nodes() { return this._nodes; }\n    public get length() { return this._length; }\n    public get buffers() { return this._buffers; }\n    constructor(length: Long | number, nodes: FieldNode[], buffers: BufferRegion[]) {\n        this._nodes = nodes;\n        this._buffers = buffers;\n        this._length = typeof length === 'number' ? length : length.low;\n    }\n}\n\n/**\n * @ignore\n * @private\n **/\nexport class DictionaryBatch {\n\n    protected _id: number;\n    protected _isDelta: boolean;\n    protected _data: RecordBatch;\n    public get id() { return this._id; }\n    public get data() { return this._data; }\n    public get isDelta() { return this._isDelta; }\n    public get length(): number { return this.data.length; }\n    public get nodes(): FieldNode[] { return this.data.nodes; }\n    public get buffers(): BufferRegion[] { return this.data.buffers; }\n\n    constructor(data: RecordBatch, id: Long | number, isDelta: boolean = false) {\n        this._data = data;\n        this._isDelta = isDelta;\n        this._id = typeof id === 'number' ? id : id.low;\n    }\n}\n\n/**\n * @ignore\n * @private\n **/\nexport class BufferRegion {\n    public offset: number;\n    public length: number;\n    constructor(offset: Long | number, length: Long | number) {\n        this.offset = typeof offset === 'number' ? offset : offset.low;\n        this.length = typeof length === 'number' ? length : length.low;\n    }\n}\n\n/**\n * @ignore\n * @private\n **/\nexport class FieldNode {\n    public length: number;\n    public nullCount: number;\n    constructor(length: Long | number, nullCount: Long | number) {\n        this.length = typeof length === 'number' ? length : length.low;\n        this.nullCount = typeof nullCount === 'number' ? nullCount : nullCount.low;\n    }\n}\n\n/** @ignore */\nfunction messageHeaderFromJSON(message: any, type: MessageHeader) {\n    return (() => {\n        switch (type) {\n            case MessageHeader.Schema: return Schema.fromJSON(message);\n            case MessageHeader.RecordBatch: return RecordBatch.fromJSON(message);\n            case MessageHeader.DictionaryBatch: return DictionaryBatch.fromJSON(message);\n        }\n        throw new Error(`Unrecognized Message type: { name: ${MessageHeader[type]}, type: ${type} }`);\n    }) as MessageHeaderDecoder;\n}\n\n/** @ignore */\nfunction decodeMessageHeader(message: _Message, type: MessageHeader) {\n    return (() => {\n        switch (type) {\n            case MessageHeader.Schema: return Schema.decode(message.header(new _Schema())!);\n            case MessageHeader.RecordBatch: return RecordBatch.decode(message.header(new _RecordBatch())!, message.version());\n            case MessageHeader.DictionaryBatch: return DictionaryBatch.decode(message.header(new _DictionaryBatch())!, message.version());\n        }\n        throw new Error(`Unrecognized Message type: { name: ${MessageHeader[type]}, type: ${type} }`);\n    }) as MessageHeaderDecoder;\n}\n\nField['encode'] = encodeField;\nField['decode'] = decodeField;\nField['fromJSON'] = fieldFromJSON;\n\nSchema['encode'] = encodeSchema;\nSchema['decode'] = decodeSchema;\nSchema['fromJSON'] = schemaFromJSON;\n\nRecordBatch['encode'] = encodeRecordBatch;\nRecordBatch['decode'] = decodeRecordBatch;\nRecordBatch['fromJSON'] = recordBatchFromJSON;\n\nDictionaryBatch['encode'] = encodeDictionaryBatch;\nDictionaryBatch['decode'] = decodeDictionaryBatch;\nDictionaryBatch['fromJSON'] = dictionaryBatchFromJSON;\n\nFieldNode['encode'] = encodeFieldNode;\nFieldNode['decode'] = decodeFieldNode;\n\nBufferRegion['encode'] = encodeBufferRegion;\nBufferRegion['decode'] = decodeBufferRegion;\n\ndeclare module '../../schema' {\n    namespace Field {\n        export { encodeField as encode };\n        export { decodeField as decode };\n        export { fieldFromJSON as fromJSON };\n    }\n    namespace Schema {\n        export { encodeSchema as encode };\n        export { decodeSchema as decode };\n        export { schemaFromJSON as fromJSON };\n    }\n}\n\ndeclare module './message' {\n    namespace RecordBatch {\n        export { encodeRecordBatch as encode };\n        export { decodeRecordBatch as decode };\n        export { recordBatchFromJSON as fromJSON };\n    }\n    namespace DictionaryBatch {\n        export { encodeDictionaryBatch as encode };\n        export { decodeDictionaryBatch as decode };\n        export { dictionaryBatchFromJSON as fromJSON };\n    }\n    namespace FieldNode {\n        export { encodeFieldNode as encode };\n        export { decodeFieldNode as decode };\n    }\n    namespace BufferRegion {\n        export { encodeBufferRegion as encode };\n        export { decodeBufferRegion as decode };\n    }\n}\n\n/** @ignore */\nfunction decodeSchema(_schema: _Schema, dictionaries: Map<number, DataType> = new Map()) {\n    const fields = decodeSchemaFields(_schema, dictionaries);\n    return new Schema(fields, decodeCustomMetadata(_schema), dictionaries);\n}\n\n/** @ignore */\nfunction decodeRecordBatch(batch: _RecordBatch, version = MetadataVersion.V4) {\n    return new RecordBatch(batch.length(), decodeFieldNodes(batch), decodeBuffers(batch, version));\n}\n\n/** @ignore */\nfunction decodeDictionaryBatch(batch: _DictionaryBatch, version = MetadataVersion.V4) {\n    return new DictionaryBatch(RecordBatch.decode(batch.data()!, version), batch.id(), batch.isDelta());\n}\n\n/** @ignore */\nfunction decodeBufferRegion(b: _Buffer) {\n    return new BufferRegion(b.offset(), b.length());\n}\n\n/** @ignore */\nfunction decodeFieldNode(f: _FieldNode) {\n    return new FieldNode(f.length(), f.nullCount());\n}\n\n/** @ignore */\nfunction decodeFieldNodes(batch: _RecordBatch) {\n    const nodes = [] as FieldNode[];\n    for (let f, i = -1, j = -1, n = batch.nodesLength(); ++i < n;) {\n        if (f = batch.nodes(i)) {\n            nodes[++j] = FieldNode.decode(f);\n        }\n    }\n    return nodes;\n}\n\n/** @ignore */\nfunction decodeBuffers(batch: _RecordBatch, version: MetadataVersion) {\n    const bufferRegions = [] as BufferRegion[];\n    for (let b, i = -1, j = -1, n = batch.buffersLength(); ++i < n;) {\n        if (b = batch.buffers(i)) {\n        // If this Arrow buffer was written before version 4,\n        // advance the buffer's bb_pos 8 bytes to skip past\n        // the now-removed page_id field\n        if (version < MetadataVersion.V4) {\n                b.bb_pos += (8 * (i + 1));\n            }\n            bufferRegions[++j] = BufferRegion.decode(b);\n        }\n    }\n    return bufferRegions;\n}\n\n/** @ignore */\nfunction decodeSchemaFields(schema: _Schema, dictionaries?: Map<number, DataType>) {\n    const fields = [] as Field[];\n    for (let f, i = -1, j = -1, n = schema.fieldsLength(); ++i < n;) {\n        if (f = schema.fields(i)) {\n            fields[++j] = Field.decode(f, dictionaries);\n        }\n    }\n    return fields;\n}\n\n/** @ignore */\nfunction decodeFieldChildren(field: _Field, dictionaries?: Map<number, DataType>): Field[] {\n    const children = [] as Field[];\n    for (let f, i = -1, j = -1, n = field.childrenLength(); ++i < n;) {\n        if (f = field.children(i)) {\n            children[++j] = Field.decode(f, dictionaries);\n        }\n    }\n    return children;\n}\n\n/** @ignore */\nfunction decodeField(f: _Field, dictionaries?: Map<number, DataType>) {\n\n    let id: number;\n    let field: Field | void;\n    let type: DataType<any>;\n    let keys: _Int | TKeys | null;\n    let dictType: Dictionary;\n    let dictMeta: _DictionaryEncoding | null;\n\n    // If no dictionary encoding\n    if (!dictionaries || !(dictMeta = f.dictionary())) {\n        type = decodeFieldType(f, decodeFieldChildren(f, dictionaries));\n        field = new Field(f.name()!, type, f.nullable(), decodeCustomMetadata(f));\n    }\n    // tslint:disable\n    // If dictionary encoded and the first time we've seen this dictionary id, decode\n    // the data type and child fields, then wrap in a Dictionary type and insert the\n    // data type into the dictionary types map.\n    else if (!dictionaries.has(id = dictMeta.id().low)) {\n        // a dictionary index defaults to signed 32 bit int if unspecified\n        keys = (keys = dictMeta.indexType()) ? decodeIndexType(keys) as TKeys : new Int32();\n        dictionaries.set(id, type = decodeFieldType(f, decodeFieldChildren(f, dictionaries)));\n        dictType = new Dictionary(type, keys, id, dictMeta.isOrdered());\n        field = new Field(f.name()!, dictType, f.nullable(), decodeCustomMetadata(f));\n    }\n    // If dictionary encoded, and have already seen this dictionary Id in the schema, then reuse the\n    // data type and wrap in a new Dictionary type and field.\n    else {\n        // a dictionary index defaults to signed 32 bit int if unspecified\n        keys = (keys = dictMeta.indexType()) ? decodeIndexType(keys) as TKeys : new Int32();\n        dictType = new Dictionary(dictionaries.get(id)!, keys, id, dictMeta.isOrdered());\n        field = new Field(f.name()!, dictType, f.nullable(), decodeCustomMetadata(f));\n    }\n    return field || null;\n}\n\n/** @ignore */\nfunction decodeCustomMetadata(parent?: _Schema | _Field | null) {\n    const data = new Map<string, string>();\n    if (parent) {\n        for (let entry, key, i = -1, n = parent.customMetadataLength() | 0; ++i < n;) {\n            if ((entry = parent.customMetadata(i)) && (key = entry.key()) != null) {\n                data.set(key, entry.value()!);\n            }\n        }\n    }\n    return data;\n}\n\n/** @ignore */\nfunction decodeIndexType(_type: _Int) {\n    return new Int(_type.isSigned(), _type.bitWidth() as IntBitWidth);\n}\n\n/** @ignore */\nfunction decodeFieldType(f: _Field, children?: Field[]): DataType<any> {\n\n    const typeId = f.typeType();\n\n    switch (typeId) {\n        case Type.NONE:    return new Null();\n        case Type.Null:    return new Null();\n        case Type.Binary:  return new Binary();\n        case Type.Utf8:    return new Utf8();\n        case Type.Bool:    return new Bool();\n        case Type.List:    return new List((children || [])[0]);\n        case Type.Struct_: return new Struct(children || []);\n    }\n\n    switch (typeId) {\n        case Type.Int: {\n            const t = f.type(new Schema_.org.apache.arrow.flatbuf.Int())!;\n            return new Int(t.isSigned(), t.bitWidth());\n        }\n        case Type.FloatingPoint: {\n            const t = f.type(new Schema_.org.apache.arrow.flatbuf.FloatingPoint())!;\n            return new Float(t.precision());\n        }\n        case Type.Decimal: {\n            const t = f.type(new Schema_.org.apache.arrow.flatbuf.Decimal())!;\n            return new Decimal(t.scale(), t.precision());\n        }\n        case Type.Date: {\n            const t = f.type(new Schema_.org.apache.arrow.flatbuf.Date())!;\n            return new Date_(t.unit());\n        }\n        case Type.Time: {\n            const t = f.type(new Schema_.org.apache.arrow.flatbuf.Time())!;\n            return new Time(t.unit(), t.bitWidth() as TimeBitWidth);\n        }\n        case Type.Timestamp: {\n            const t = f.type(new Schema_.org.apache.arrow.flatbuf.Timestamp())!;\n            return new Timestamp(t.unit(), t.timezone());\n        }\n        case Type.Interval: {\n            const t = f.type(new Schema_.org.apache.arrow.flatbuf.Interval())!;\n            return new Interval(t.unit());\n        }\n        case Type.Union: {\n            const t = f.type(new Schema_.org.apache.arrow.flatbuf.Union())!;\n            return new Union(t.mode(), t.typeIdsArray() || [], children || []);\n        }\n        case Type.FixedSizeBinary: {\n            const t = f.type(new Schema_.org.apache.arrow.flatbuf.FixedSizeBinary())!;\n            return new FixedSizeBinary(t.byteWidth());\n        }\n        case Type.FixedSizeList: {\n            const t = f.type(new Schema_.org.apache.arrow.flatbuf.FixedSizeList())!;\n            return new FixedSizeList(t.listSize(), (children || [])[0]);\n        }\n        case Type.Map: {\n            const t = f.type(new Schema_.org.apache.arrow.flatbuf.Map())!;\n            return new Map_((children || [])[0], t.keysSorted());\n        }\n    }\n    throw new Error(`Unrecognized type: \"${Type[typeId]}\" (${typeId})`);\n}\n\n/** @ignore */\nfunction encodeSchema(b: Builder, schema: Schema) {\n\n    const fieldOffsets = schema.fields.map((f) => Field.encode(b, f));\n\n    _Schema.startFieldsVector(b, fieldOffsets.length);\n\n    const fieldsVectorOffset = _Schema.createFieldsVector(b, fieldOffsets);\n\n    const metadataOffset = !(schema.metadata && schema.metadata.size > 0) ? -1 :\n        _Schema.createCustomMetadataVector(b, [...schema.metadata].map(([k, v]) => {\n            const key = b.createString(`${k}`);\n            const val = b.createString(`${v}`);\n            _KeyValue.startKeyValue(b);\n            _KeyValue.addKey(b, key);\n            _KeyValue.addValue(b, val);\n            return _KeyValue.endKeyValue(b);\n        }));\n\n    _Schema.startSchema(b);\n    _Schema.addFields(b, fieldsVectorOffset);\n    _Schema.addEndianness(b, platformIsLittleEndian ? _Endianness.Little : _Endianness.Big);\n\n    if (metadataOffset !== -1) { _Schema.addCustomMetadata(b, metadataOffset); }\n\n    return _Schema.endSchema(b);\n}\n\n/** @ignore */\nfunction encodeField(b: Builder, field: Field) {\n\n    let nameOffset = -1;\n    let typeOffset = -1;\n    let dictionaryOffset = -1;\n\n    let type = field.type;\n    let typeId: Type = <any> field.typeId;\n\n    if (!DataType.isDictionary(type)) {\n        typeOffset = typeAssembler.visit(type, b)!;\n    } else {\n        typeId = type.dictionary.typeId;\n        dictionaryOffset = typeAssembler.visit(type, b)!;\n        typeOffset = typeAssembler.visit(type.dictionary, b)!;\n    }\n\n    const childOffsets = (type.children || []).map((f: Field) => Field.encode(b, f));\n    const childrenVectorOffset = _Field.createChildrenVector(b, childOffsets);\n\n    const metadataOffset = !(field.metadata && field.metadata.size > 0) ? -1 :\n        _Field.createCustomMetadataVector(b, [...field.metadata].map(([k, v]) => {\n            const key = b.createString(`${k}`);\n            const val = b.createString(`${v}`);\n            _KeyValue.startKeyValue(b);\n            _KeyValue.addKey(b, key);\n            _KeyValue.addValue(b, val);\n            return _KeyValue.endKeyValue(b);\n        }));\n\n    if (field.name) {\n        nameOffset = b.createString(field.name);\n    }\n\n    _Field.startField(b);\n    _Field.addType(b, typeOffset);\n    _Field.addTypeType(b, typeId);\n    _Field.addChildren(b, childrenVectorOffset);\n    _Field.addNullable(b, !!field.nullable);\n\n    if (nameOffset !== -1) { _Field.addName(b, nameOffset); }\n    if (dictionaryOffset !== -1) { _Field.addDictionary(b, dictionaryOffset); }\n    if (metadataOffset !== -1) { _Field.addCustomMetadata(b, metadataOffset); }\n\n    return _Field.endField(b);\n}\n\n/** @ignore */\nfunction encodeRecordBatch(b: Builder, recordBatch: RecordBatch) {\n\n    const nodes = recordBatch.nodes || [];\n    const buffers = recordBatch.buffers || [];\n\n    _RecordBatch.startNodesVector(b, nodes.length);\n    nodes.slice().reverse().forEach((n) => FieldNode.encode(b, n));\n\n    const nodesVectorOffset = b.endVector();\n\n    _RecordBatch.startBuffersVector(b, buffers.length);\n    buffers.slice().reverse().forEach((b_) => BufferRegion.encode(b, b_));\n\n    const buffersVectorOffset = b.endVector();\n\n    _RecordBatch.startRecordBatch(b);\n    _RecordBatch.addLength(b, new Long(recordBatch.length, 0));\n    _RecordBatch.addNodes(b, nodesVectorOffset);\n    _RecordBatch.addBuffers(b, buffersVectorOffset);\n    return _RecordBatch.endRecordBatch(b);\n}\n\n/** @ignore */\nfunction encodeDictionaryBatch(b: Builder, dictionaryBatch: DictionaryBatch) {\n    const dataOffset = RecordBatch.encode(b, dictionaryBatch.data);\n    _DictionaryBatch.startDictionaryBatch(b);\n    _DictionaryBatch.addId(b, new Long(dictionaryBatch.id, 0));\n    _DictionaryBatch.addIsDelta(b, dictionaryBatch.isDelta);\n    _DictionaryBatch.addData(b, dataOffset);\n    return _DictionaryBatch.endDictionaryBatch(b);\n}\n\n/** @ignore */\nfunction encodeFieldNode(b: Builder, node: FieldNode) {\n    return _FieldNode.createFieldNode(b, new Long(node.length, 0), new Long(node.nullCount, 0));\n}\n\n/** @ignore */\nfunction encodeBufferRegion(b: Builder, node: BufferRegion) {\n    return _Buffer.createBuffer(b, new Long(node.offset, 0), new Long(node.length, 0));\n}\n\n/** @ignore */\nconst platformIsLittleEndian = (function() {\n    const buffer = new ArrayBuffer(2);\n    new DataView(buffer).setInt16(0, 256, true /* littleEndian */);\n    // Int16Array uses the platform's endianness.\n    return new Int16Array(buffer)[0] === 256;\n})();\n\n/** @ignore */\ntype MessageHeaderDecoder = <T extends MessageHeader>() => T extends MessageHeader.Schema ? Schema\n                                                         : T extends MessageHeader.RecordBatch ? RecordBatch\n                                                         : T extends MessageHeader.DictionaryBatch ? DictionaryBatch : never;\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { MessageHeader } from '../enum';\nimport { flatbuffers } from 'flatbuffers';\nimport ByteBuffer = flatbuffers.ByteBuffer;\nimport { Message } from './metadata/message';\nimport { isFileHandle } from '../util/compat';\nimport { AsyncRandomAccessFile } from '../io/file';\nimport { toUint8Array, ArrayBufferViewInput } from '../util/buffer';\nimport { ByteStream, ReadableSource, AsyncByteStream } from '../io/stream';\nimport { ArrowJSON, ArrowJSONLike, ITERATOR_DONE, FileHandle } from '../io/interfaces';\n\n/** @ignore */ const invalidMessageType       = (type: MessageHeader) => `Expected ${MessageHeader[type]} Message in stream, but was null or length 0.`;\n/** @ignore */ const nullMessage              = (type: MessageHeader) => `Header pointer of flatbuffer-encoded ${MessageHeader[type]} Message is null or length 0.`;\n/** @ignore */ const invalidMessageMetadata   = (expected: number, actual: number) => `Expected to read ${expected} metadata bytes, but only read ${actual}.`;\n/** @ignore */ const invalidMessageBodyLength = (expected: number, actual: number) => `Expected to read ${expected} bytes for message body, but only read ${actual}.`;\n\n/** @ignore */\nexport class MessageReader implements IterableIterator<Message> {\n    protected source: ByteStream;\n    constructor(source: ByteStream | ArrayBufferViewInput | Iterable<ArrayBufferViewInput>) {\n        this.source = source instanceof ByteStream ? source : new ByteStream(source);\n    }\n    public [Symbol.iterator](): IterableIterator<Message> { return this as IterableIterator<Message>; }\n    public next(): IteratorResult<Message> {\n        let r;\n        if ((r = this.readMetadataLength()).done) { return ITERATOR_DONE; }\n        // ARROW-6313: If the first 4 bytes are continuation indicator (-1), read\n        // the next 4 for the 32-bit metadata length. Otherwise, assume this is a\n        // pre-v0.15 message, where the first 4 bytes are the metadata length.\n        if ((r.value === -1) &&\n            (r = this.readMetadataLength()).done) { return ITERATOR_DONE; }\n        if ((r = this.readMetadata(r.value)).done) { return ITERATOR_DONE; }\n        return (<any> r) as IteratorResult<Message>;\n    }\n    public throw(value?: any) { return this.source.throw(value); }\n    public return(value?: any) { return this.source.return(value); }\n    public readMessage<T extends MessageHeader>(type?: T | null) {\n        let r: IteratorResult<Message<T>>;\n        if ((r = this.next()).done) { return null; }\n        if ((type != null) && r.value.headerType !== type) {\n            throw new Error(invalidMessageType(type));\n        }\n        return r.value;\n    }\n    public readMessageBody(bodyLength: number): Uint8Array {\n        if (bodyLength <= 0) { return new Uint8Array(0); }\n        const buf = toUint8Array(this.source.read(bodyLength));\n        if (buf.byteLength < bodyLength) {\n            throw new Error(invalidMessageBodyLength(bodyLength, buf.byteLength));\n        }\n        // 1. Work around bugs in fs.ReadStream's internal Buffer pooling, see: https://github.com/nodejs/node/issues/24817\n        // 2. Work around https://github.com/whatwg/streams/blob/0ebe4b042e467d9876d80ae045de3843092ad797/reference-implementation/lib/helpers.js#L126\n        return /* 1. */ (buf.byteOffset % 8 === 0) &&\n               /* 2. */ (buf.byteOffset + buf.byteLength) <= buf.buffer.byteLength ? buf : buf.slice();\n    }\n    public readSchema(throwIfNull = false) {\n        const type = MessageHeader.Schema;\n        const message = this.readMessage(type);\n        const schema = message && message.header();\n        if (throwIfNull && !schema) {\n            throw new Error(nullMessage(type));\n        }\n        return schema;\n    }\n    protected readMetadataLength(): IteratorResult<number> {\n        const buf = this.source.read(PADDING);\n        const bb = buf && new ByteBuffer(buf);\n        const len = bb && bb.readInt32(0) || 0;\n        return { done: len === 0, value: len };\n    }\n    protected readMetadata(metadataLength: number): IteratorResult<Message> {\n        const buf = this.source.read(metadataLength);\n        if (!buf) { return ITERATOR_DONE; }\n        if (buf.byteLength < metadataLength) {\n            throw new Error(invalidMessageMetadata(metadataLength, buf.byteLength));\n        }\n        return { done: false, value: Message.decode(buf) };\n    }\n}\n\n/** @ignore */\nexport class AsyncMessageReader implements AsyncIterableIterator<Message> {\n    protected source: AsyncByteStream;\n    constructor(source: ReadableSource<Uint8Array>);\n    constructor(source: FileHandle, byteLength?: number);\n    constructor(source: any, byteLength?: number) {\n        this.source = source instanceof AsyncByteStream ? source\n            : isFileHandle(source)\n            ? new AsyncRandomAccessFile(source, byteLength!)\n            : new AsyncByteStream(source);\n    }\n    public [Symbol.asyncIterator](): AsyncIterableIterator<Message> { return this as AsyncIterableIterator<Message>; }\n    public async next(): Promise<IteratorResult<Message>> {\n        let r;\n        if ((r = await this.readMetadataLength()).done) { return ITERATOR_DONE; }\n        // ARROW-6313: If the first 4 bytes are continuation indicator (-1), read\n        // the next 4 for the 32-bit metadata length. Otherwise, assume this is a\n        // pre-v0.15 message, where the first 4 bytes are the metadata length.\n        if ((r.value === -1) &&\n            (r = await this.readMetadataLength()).done) { return ITERATOR_DONE; }\n        if ((r = await this.readMetadata(r.value)).done) { return ITERATOR_DONE; }\n        return (<any> r) as IteratorResult<Message>;\n    }\n    public async throw(value?: any) { return await this.source.throw(value); }\n    public async return(value?: any) { return await this.source.return(value); }\n    public async readMessage<T extends MessageHeader>(type?: T | null) {\n        let r: IteratorResult<Message<T>>;\n        if ((r = await this.next()).done) { return null; }\n        if ((type != null) && r.value.headerType !== type) {\n            throw new Error(invalidMessageType(type));\n        }\n        return r.value;\n    }\n    public async readMessageBody(bodyLength: number): Promise<Uint8Array> {\n        if (bodyLength <= 0) { return new Uint8Array(0); }\n        const buf = toUint8Array(await this.source.read(bodyLength));\n        if (buf.byteLength < bodyLength) {\n            throw new Error(invalidMessageBodyLength(bodyLength, buf.byteLength));\n        }\n        // 1. Work around bugs in fs.ReadStream's internal Buffer pooling, see: https://github.com/nodejs/node/issues/24817\n        // 2. Work around https://github.com/whatwg/streams/blob/0ebe4b042e467d9876d80ae045de3843092ad797/reference-implementation/lib/helpers.js#L126\n        return /* 1. */ (buf.byteOffset % 8 === 0) &&\n               /* 2. */ (buf.byteOffset + buf.byteLength) <= buf.buffer.byteLength ? buf : buf.slice();\n    }\n    public async readSchema(throwIfNull = false) {\n        const type = MessageHeader.Schema;\n        const message = await this.readMessage(type);\n        const schema = message && message.header();\n        if (throwIfNull && !schema) {\n            throw new Error(nullMessage(type));\n        }\n        return schema;\n    }\n    protected async readMetadataLength(): Promise<IteratorResult<number>> {\n        const buf = await this.source.read(PADDING);\n        const bb = buf && new ByteBuffer(buf);\n        const len = bb && bb.readInt32(0) || 0;\n        return { done: len === 0, value: len };\n    }\n    protected async readMetadata(metadataLength: number): Promise<IteratorResult<Message>> {\n        const buf = await this.source.read(metadataLength);\n        if (!buf) { return ITERATOR_DONE; }\n        if (buf.byteLength < metadataLength) {\n            throw new Error(invalidMessageMetadata(metadataLength, buf.byteLength));\n        }\n        return { done: false, value: Message.decode(buf) };\n    }\n}\n\n/** @ignore */\nexport class JSONMessageReader extends MessageReader {\n    private _schema = false;\n    private _json: ArrowJSON;\n    private _body: any[] = [];\n    private _batchIndex = 0;\n    private _dictionaryIndex = 0;\n    constructor(source: ArrowJSON | ArrowJSONLike) {\n        super(new Uint8Array(0));\n        this._json = source instanceof ArrowJSON ? source : new ArrowJSON(source);\n    }\n    public next() {\n        const { _json } = this;\n        if (!this._schema) {\n            this._schema = true;\n            const message = Message.fromJSON(_json.schema, MessageHeader.Schema);\n            return { done: false, value: message };\n        }\n        if (this._dictionaryIndex < _json.dictionaries.length) {\n            const batch = _json.dictionaries[this._dictionaryIndex++];\n            this._body = batch['data']['columns'];\n            const message = Message.fromJSON(batch, MessageHeader.DictionaryBatch);\n            return { done: false, value: message };\n        }\n        if (this._batchIndex < _json.batches.length) {\n            const batch = _json.batches[this._batchIndex++];\n            this._body = batch['columns'];\n            const message = Message.fromJSON(batch, MessageHeader.RecordBatch);\n            return { done: false, value: message };\n        }\n        this._body = [];\n        return ITERATOR_DONE;\n    }\n    public readMessageBody(_bodyLength?: number) {\n        return flattenDataSources(this._body) as any;\n        function flattenDataSources(xs: any[]): any[][] {\n            return (xs || []).reduce<any[][]>((buffers, column: any) => [\n                ...buffers,\n                ...(column['VALIDITY'] && [column['VALIDITY']] || []),\n                ...(column['TYPE'] && [column['TYPE']] || []),\n                ...(column['OFFSET'] && [column['OFFSET']] || []),\n                ...(column['DATA'] && [column['DATA']] || []),\n                ...flattenDataSources(column['children'])\n            ], [] as any[][]);\n        }\n    }\n    public readMessage<T extends MessageHeader>(type?: T | null) {\n        let r: IteratorResult<Message<T>>;\n        if ((r = this.next()).done) { return null; }\n        if ((type != null) && r.value.headerType !== type) {\n            throw new Error(invalidMessageType(type));\n        }\n        return r.value;\n    }\n    public readSchema() {\n        const type = MessageHeader.Schema;\n        const message = this.readMessage(type);\n        const schema = message && message.header();\n        if (!message || !schema) {\n            throw new Error(nullMessage(type));\n        }\n        return schema;\n    }\n}\n\n/** @ignore */\nexport const PADDING = 4;\n/** @ignore */\nexport const MAGIC_STR = 'ARROW1';\n/** @ignore */\nexport const MAGIC = new Uint8Array(MAGIC_STR.length);\n\nfor (let i = 0; i < MAGIC_STR.length; i += 1 | 0) {\n    MAGIC[i] = MAGIC_STR.charCodeAt(i);\n}\n\n/** @ignore */\nexport function checkForMagicArrowString(buffer: Uint8Array, index = 0) {\n    for (let i = -1, n = MAGIC.length; ++i < n;) {\n        if (MAGIC[i] !== buffer[index + i]) {\n            return false;\n        }\n    }\n    return true;\n}\n\n/** @ignore */\nexport const magicLength = MAGIC.length;\n/** @ignore */\nexport const magicAndPadding = magicLength + PADDING;\n/** @ignore */\nexport const magicX2AndPadding = magicLength * 2 + PADDING;\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Data } from '../data';\nimport { Vector } from '../vector';\nimport { Visitor } from '../visitor';\nimport { Type, UnionMode } from '../enum';\nimport { RecordBatch } from '../recordbatch';\nimport { VectorType as V } from '../interfaces';\nimport { rebaseValueOffsets } from '../util/buffer';\nimport { packBools, truncateBitmap } from '../util/bit';\nimport { selectVectorChildrenArgs } from '../util/args';\nimport { BufferRegion, FieldNode } from '../ipc/metadata/message';\nimport {\n    DataType, Dictionary,\n    Float, Int, Date_, Interval, Time, Timestamp, Union,\n    Bool, Null, Utf8, Binary, Decimal, FixedSizeBinary, List, FixedSizeList, Map_, Struct,\n} from '../type';\n\n/** @ignore */\nexport interface VectorAssembler extends Visitor {\n    visit<T extends Vector>(node: T): this;\n    visitMany<T extends Vector>(nodes: T[]): this[];\n    getVisitFn<T extends Type>(node: T): (vector: V<T>) => this;\n    getVisitFn<T extends DataType>(node: V<T> | Data<T> | T): (vector: V<T>) => this;\n\n    visitBool                 <T extends Bool>            (vector: V<T>): this;\n    visitInt                  <T extends Int>             (vector: V<T>): this;\n    visitFloat                <T extends Float>           (vector: V<T>): this;\n    visitUtf8                 <T extends Utf8>            (vector: V<T>): this;\n    visitBinary               <T extends Binary>          (vector: V<T>): this;\n    visitFixedSizeBinary      <T extends FixedSizeBinary> (vector: V<T>): this;\n    visitDate                 <T extends Date_>           (vector: V<T>): this;\n    visitTimestamp            <T extends Timestamp>       (vector: V<T>): this;\n    visitTime                 <T extends Time>            (vector: V<T>): this;\n    visitDecimal              <T extends Decimal>         (vector: V<T>): this;\n    visitList                 <T extends List>            (vector: V<T>): this;\n    visitStruct               <T extends Struct>          (vector: V<T>): this;\n    visitUnion                <T extends Union>           (vector: V<T>): this;\n    visitInterval             <T extends Interval>        (vector: V<T>): this;\n    visitFixedSizeList        <T extends FixedSizeList>   (vector: V<T>): this;\n    visitMap                  <T extends Map_>            (vector: V<T>): this;\n}\n\n/** @ignore */\nexport class VectorAssembler extends Visitor {\n\n    /** @nocollapse */\n    public static assemble<T extends Vector | RecordBatch>(...args: (T | T[])[]) {\n        const assembler = new VectorAssembler();\n        const vectorChildren = selectVectorChildrenArgs(RecordBatch, args);\n        const [assembleResult = assembler] = assembler.visitMany(vectorChildren);\n        return assembleResult;\n    }\n\n    private constructor() { super(); }\n\n    public visit<T extends Vector>(vector: T): this {\n        if (!DataType.isDictionary(vector.type)) {\n            const { data, length, nullCount } = vector;\n            if (length > 2147483647) {\n                /* istanbul ignore next */\n                throw new RangeError('Cannot write arrays larger than 2^31 - 1 in length');\n            }\n            if (!DataType.isNull(vector.type)) {\n                addBuffer.call(this, nullCount <= 0\n                    ? new Uint8Array(0) // placeholder validity buffer\n                    : truncateBitmap(data.offset, length, data.nullBitmap)\n                );\n            }\n            this.nodes.push(new FieldNode(length, nullCount));\n        }\n        return super.visit(vector);\n    }\n\n    public visitNull<T extends Null>(_nullV: V<T>) {\n        return this;\n    }\n    public visitDictionary<T extends Dictionary>(vector: V<T>) {\n        // Assemble the indices here, Dictionary assembled separately.\n        return this.visit(vector.indices);\n    }\n\n    public get nodes() { return this._nodes; }\n    public get buffers() { return this._buffers; }\n    public get byteLength() { return this._byteLength; }\n    public get bufferRegions() { return this._bufferRegions; }\n\n    protected _byteLength = 0;\n    protected _nodes: FieldNode[] = [];\n    protected _buffers: ArrayBufferView[] = [];\n    protected _bufferRegions: BufferRegion[] = [];\n}\n\n/** @ignore */\nfunction addBuffer(this: VectorAssembler, values: ArrayBufferView) {\n    const byteLength = (values.byteLength + 7) & ~7; // Round up to a multiple of 8\n    this.buffers.push(values);\n    this.bufferRegions.push(new BufferRegion(this._byteLength, byteLength));\n    this._byteLength += byteLength;\n    return this;\n}\n\n/** @ignore */\nfunction assembleUnion<T extends Union>(this: VectorAssembler, vector: V<T>) {\n    const { type, length, typeIds, valueOffsets } = vector;\n    // All Union Vectors have a typeIds buffer\n    addBuffer.call(this, typeIds);\n    // If this is a Sparse Union, treat it like all other Nested types\n    if (type.mode === UnionMode.Sparse) {\n        return assembleNestedVector.call(this, vector);\n    } else if (type.mode === UnionMode.Dense) {\n        // If this is a Dense Union, add the valueOffsets buffer and potentially slice the children\n        if (vector.offset <= 0) {\n            // If the Vector hasn't been sliced, write the existing valueOffsets\n            addBuffer.call(this, valueOffsets);\n            // We can treat this like all other Nested types\n            return assembleNestedVector.call(this, vector);\n        } else {\n            // A sliced Dense Union is an unpleasant case. Because the offsets are different for\n            // each child vector, we need to \"rebase\" the valueOffsets for each child\n            // Union typeIds are not necessary 0-indexed\n            const maxChildTypeId = typeIds.reduce((x, y) => Math.max(x, y), typeIds[0]);\n            const childLengths = new Int32Array(maxChildTypeId + 1);\n            // Set all to -1 to indicate that we haven't observed a first occurrence of a particular child yet\n            const childOffsets = new Int32Array(maxChildTypeId + 1).fill(-1);\n            const shiftedOffsets = new Int32Array(length);\n            // If we have a non-zero offset, then the value offsets do not start at\n            // zero. We must a) create a new offsets array with shifted offsets and\n            // b) slice the values array accordingly\n            const unshiftedOffsets = rebaseValueOffsets(-valueOffsets[0], length, valueOffsets);\n            for (let typeId, shift, index = -1; ++index < length;) {\n                if ((shift = childOffsets[typeId = typeIds[index]]) === -1) {\n                    shift = childOffsets[typeId] = unshiftedOffsets[typeId];\n                }\n                shiftedOffsets[index] = unshiftedOffsets[index] - shift;\n                ++childLengths[typeId];\n            }\n            addBuffer.call(this, shiftedOffsets);\n            // Slice and visit children accordingly\n            for (let child: Vector | null, childIndex = -1, numChildren = type.children.length; ++childIndex < numChildren;) {\n                if (child = vector.getChildAt(childIndex)) {\n                    const typeId = type.typeIds[childIndex];\n                    const childLength = Math.min(length, childLengths[typeId]);\n                    this.visit(child.slice(childOffsets[typeId], childLength));\n                }\n            }\n        }\n    }\n    return this;\n}\n\n/** @ignore */\nfunction assembleBoolVector<T extends Bool>(this: VectorAssembler, vector: V<T>) {\n    // Bool vector is a special case of FlatVector, as its data buffer needs to stay packed\n    let values: Uint8Array;\n    if (vector.nullCount >= vector.length) {\n        // If all values are null, just insert a placeholder empty data buffer (fastest path)\n        return addBuffer.call(this, new Uint8Array(0));\n    } else if ((values = vector.values) instanceof Uint8Array) {\n        // If values is already a Uint8Array, slice the bitmap (fast path)\n        return addBuffer.call(this, truncateBitmap(vector.offset, vector.length, values));\n    }\n    // Otherwise if the underlying data *isn't* a Uint8Array, enumerate the\n    // values as bools and re-pack them into a Uint8Array. This code isn't\n    // reachable unless you're trying to manipulate the Data internals,\n    // we we're only doing this for safety.\n    /* istanbul ignore next */\n    return addBuffer.call(this, packBools(vector));\n}\n\n/** @ignore */\nfunction assembleFlatVector<T extends Int | Float | FixedSizeBinary | Date_ | Timestamp | Time | Decimal | Interval>(this: VectorAssembler, vector: V<T>) {\n    return addBuffer.call(this, vector.values.subarray(0, vector.length * vector.stride));\n}\n\n/** @ignore */\nfunction assembleFlatListVector<T extends Utf8 | Binary>(this: VectorAssembler, vector: V<T>) {\n    const { length, values, valueOffsets } = vector;\n    const firstOffset = valueOffsets[0];\n    const lastOffset = valueOffsets[length];\n    const byteLength = Math.min(lastOffset - firstOffset, values.byteLength - firstOffset);\n    // Push in the order FlatList types read their buffers\n    addBuffer.call(this, rebaseValueOffsets(-valueOffsets[0], length, valueOffsets)); // valueOffsets buffer first\n    addBuffer.call(this, values.subarray(firstOffset, firstOffset + byteLength)); // sliced values buffer second\n    return this;\n}\n\n/** @ignore */\nfunction assembleListVector<T extends Map_ | List | FixedSizeList>(this: VectorAssembler, vector: V<T>) {\n    const { length, valueOffsets } = vector;\n    // If we have valueOffsets (MapVector, ListVector), push that buffer first\n    if (valueOffsets) {\n        addBuffer.call(this, rebaseValueOffsets(valueOffsets[0], length, valueOffsets));\n    }\n    // Then insert the List's values child\n    return this.visit(vector.getChildAt(0)!);\n}\n\n/** @ignore */\nfunction assembleNestedVector<T extends Struct | Union>(this: VectorAssembler, vector: V<T>) {\n    return this.visitMany(vector.type.children.map((_, i) => vector.getChildAt(i)!).filter(Boolean))[0];\n}\n\nVectorAssembler.prototype.visitBool            =     assembleBoolVector;\nVectorAssembler.prototype.visitInt             =     assembleFlatVector;\nVectorAssembler.prototype.visitFloat           =     assembleFlatVector;\nVectorAssembler.prototype.visitUtf8            = assembleFlatListVector;\nVectorAssembler.prototype.visitBinary          = assembleFlatListVector;\nVectorAssembler.prototype.visitFixedSizeBinary =     assembleFlatVector;\nVectorAssembler.prototype.visitDate            =     assembleFlatVector;\nVectorAssembler.prototype.visitTimestamp       =     assembleFlatVector;\nVectorAssembler.prototype.visitTime            =     assembleFlatVector;\nVectorAssembler.prototype.visitDecimal         =     assembleFlatVector;\nVectorAssembler.prototype.visitList            =     assembleListVector;\nVectorAssembler.prototype.visitStruct          =   assembleNestedVector;\nVectorAssembler.prototype.visitUnion           =          assembleUnion;\nVectorAssembler.prototype.visitInterval        =     assembleFlatVector;\nVectorAssembler.prototype.visitFixedSizeList   =     assembleListVector;\nVectorAssembler.prototype.visitMap             =     assembleListVector;\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Table } from '../table';\nimport { MAGIC } from './message';\nimport { Vector } from '../vector';\nimport { Column } from '../column';\nimport { DataType } from '../type';\nimport { Schema, Field } from '../schema';\nimport { Message } from './metadata/message';\nimport * as metadata from './metadata/message';\nimport { FileBlock, Footer } from './metadata/file';\nimport { MessageHeader, MetadataVersion } from '../enum';\nimport { WritableSink, AsyncByteQueue } from '../io/stream';\nimport { VectorAssembler } from '../visitor/vectorassembler';\nimport { JSONTypeAssembler } from '../visitor/jsontypeassembler';\nimport { JSONVectorAssembler } from '../visitor/jsonvectorassembler';\nimport { ArrayBufferViewInput, toUint8Array } from '../util/buffer';\nimport { RecordBatch, _InternalEmptyPlaceholderRecordBatch } from '../recordbatch';\nimport { Writable, ReadableInterop, ReadableDOMStreamOptions } from '../io/interfaces';\nimport { isPromise, isAsyncIterable, isWritableDOMStream, isWritableNodeStream, isIterable, isObject } from '../util/compat';\n\nexport interface RecordBatchStreamWriterOptions {\n    /**\n     *\n     */\n    autoDestroy?: boolean;\n    /**\n     * A flag indicating whether the RecordBatchWriter should construct pre-0.15.0\n     * encapsulated IPC Messages, which reserves  4 bytes for the Message metadata\n     * length instead of 8.\n     * @see https://issues.apache.org/jira/browse/ARROW-6313\n     */\n    writeLegacyIpcFormat?: boolean;\n}\n\nexport class RecordBatchWriter<T extends { [key: string]: DataType } = any> extends ReadableInterop<Uint8Array> implements Writable<RecordBatch<T>> {\n\n    /** @nocollapse */\n    // @ts-ignore\n    public static throughNode(options?: import('stream').DuplexOptions & { autoDestroy: boolean }): import('stream').Duplex {\n        throw new Error(`\"throughNode\" not available in this environment`);\n    }\n    /** @nocollapse */\n    public static throughDOM<T extends { [key: string]: DataType }>(\n        // @ts-ignore\n        writableStrategy?: QueuingStrategy<RecordBatch<T>> & { autoDestroy: boolean },\n        // @ts-ignore\n        readableStrategy?: { highWaterMark?: number, size?: any }\n    ): { writable: WritableStream<Table<T> | RecordBatch<T>>, readable: ReadableStream<Uint8Array> } {\n        throw new Error(`\"throughDOM\" not available in this environment`);\n    }\n\n    constructor(options?: RecordBatchStreamWriterOptions) {\n        super();\n        isObject(options) || (options = { autoDestroy: true, writeLegacyIpcFormat: false });\n        this._autoDestroy = (typeof options.autoDestroy === 'boolean') ? options.autoDestroy : true;\n        this._writeLegacyIpcFormat = (typeof options.writeLegacyIpcFormat === 'boolean') ? options.writeLegacyIpcFormat : false;\n    }\n\n    protected _position = 0;\n    protected _started = false;\n    protected _autoDestroy: boolean;\n    protected _writeLegacyIpcFormat: boolean;\n    // @ts-ignore\n    protected _sink = new AsyncByteQueue();\n    protected _schema: Schema | null = null;\n    protected _dictionaryBlocks: FileBlock[] = [];\n    protected _recordBatchBlocks: FileBlock[] = [];\n    protected _dictionaryDeltaOffsets = new Map<number, number>();\n\n    public toString(sync: true): string;\n    public toString(sync?: false): Promise<string>;\n    public toString(sync: any = false) {\n        return this._sink.toString(sync) as Promise<string> | string;\n    }\n    public toUint8Array(sync: true): Uint8Array;\n    public toUint8Array(sync?: false): Promise<Uint8Array>;\n    public toUint8Array(sync: any = false) {\n        return this._sink.toUint8Array(sync) as Promise<Uint8Array> | Uint8Array;\n    }\n\n    public writeAll(input: Table<T> | Iterable<RecordBatch<T>>): this;\n    public writeAll(input: AsyncIterable<RecordBatch<T>>): Promise<this>;\n    public writeAll(input: PromiseLike<AsyncIterable<RecordBatch<T>>>): Promise<this>;\n    public writeAll(input: PromiseLike<Table<T> | Iterable<RecordBatch<T>>>): Promise<this>;\n    public writeAll(input: PromiseLike<any> | Table<T> | Iterable<RecordBatch<T>> | AsyncIterable<RecordBatch<T>>) {\n        if (isPromise<any>(input)) {\n            return input.then((x) => this.writeAll(x));\n        } else if (isAsyncIterable<RecordBatch<T>>(input)) {\n            return writeAllAsync(this, input);\n        }\n        return writeAll(this, <any> input);\n    }\n\n    public get closed() { return this._sink.closed; }\n    public [Symbol.asyncIterator]() { return this._sink[Symbol.asyncIterator](); }\n    public toDOMStream(options?: ReadableDOMStreamOptions) { return this._sink.toDOMStream(options); }\n    public toNodeStream(options?: import('stream').ReadableOptions) { return this._sink.toNodeStream(options); }\n\n    public close() {\n        return this.reset()._sink.close();\n    }\n    public abort(reason?: any) {\n        return this.reset()._sink.abort(reason);\n    }\n    public finish() {\n        this._autoDestroy ? this.close() : this.reset(this._sink, this._schema);\n        return this;\n    }\n    public reset(sink: WritableSink<ArrayBufferViewInput> = this._sink, schema: Schema<T> | null = null) {\n\n        if ((sink === this._sink) || (sink instanceof AsyncByteQueue)) {\n            this._sink = sink as AsyncByteQueue;\n        } else {\n            this._sink = new AsyncByteQueue();\n            if (sink && isWritableDOMStream(sink)) {\n                this.toDOMStream({ type: 'bytes' }).pipeTo(sink);\n            } else if (sink && isWritableNodeStream(sink)) {\n                this.toNodeStream({ objectMode: false }).pipe(sink);\n            }\n        }\n\n        if (this._started && this._schema) {\n            this._writeFooter(this._schema);\n        }\n\n        this._started = false;\n        this._dictionaryBlocks = [];\n        this._recordBatchBlocks = [];\n        this._dictionaryDeltaOffsets = new Map();\n\n        if (!schema || !(schema.compareTo(this._schema))) {\n            if (schema === null) {\n                this._position = 0;\n                this._schema = null;\n            } else {\n                this._started = true;\n                this._schema = schema;\n                this._writeSchema(schema);\n            }\n        }\n\n        return this;\n    }\n\n    public write(payload?: Table<T> | RecordBatch<T> | Iterable<RecordBatch<T>> | null) {\n\n        let schema: Schema<T> | null = null;\n\n        if (!this._sink) {\n            throw new Error(`RecordBatchWriter is closed`);\n        } else if (payload === null || payload === undefined) {\n            return this.finish() && undefined;\n        } else if (payload instanceof Table && !(schema = payload.schema)) {\n            return this.finish() && undefined;\n        } else if (payload instanceof RecordBatch && !(schema = payload.schema)) {\n            return this.finish() && undefined;\n        }\n\n        if (schema && !schema.compareTo(this._schema)) {\n            if (this._started && this._autoDestroy) {\n                return this.close();\n            }\n            this.reset(this._sink, schema);\n        }\n\n        if (payload instanceof RecordBatch) {\n            if (!(payload instanceof _InternalEmptyPlaceholderRecordBatch)) {\n                this._writeRecordBatch(payload);\n            }\n        } else if (payload instanceof Table) {\n            this.writeAll(payload.chunks);\n        } else if (isIterable(payload)) {\n            this.writeAll(payload);\n        }\n    }\n\n    protected _writeMessage<T extends MessageHeader>(message: Message<T>, alignment = 8) {\n\n        const a = alignment - 1;\n        const buffer = Message.encode(message);\n        const flatbufferSize = buffer.byteLength;\n        const prefixSize = !this._writeLegacyIpcFormat ? 8 : 4;\n        const alignedSize = (flatbufferSize + prefixSize + a) & ~a;\n        const nPaddingBytes = alignedSize - flatbufferSize - prefixSize;\n\n        if (message.headerType === MessageHeader.RecordBatch) {\n            this._recordBatchBlocks.push(new FileBlock(alignedSize, message.bodyLength, this._position));\n        } else if (message.headerType === MessageHeader.DictionaryBatch) {\n            this._dictionaryBlocks.push(new FileBlock(alignedSize, message.bodyLength, this._position));\n        }\n\n        // If not in legacy pre-0.15.0 mode, write the stream continuation indicator\n        if (!this._writeLegacyIpcFormat) {\n            this._write(Int32Array.of(-1));\n        }\n        // Write the flatbuffer size prefix including padding\n        this._write(Int32Array.of(alignedSize - prefixSize));\n        // Write the flatbuffer\n        if (flatbufferSize > 0) { this._write(buffer); }\n        // Write any padding\n        return this._writePadding(nPaddingBytes);\n    }\n\n    protected _write(chunk: ArrayBufferViewInput) {\n        if (this._started) {\n            const buffer = toUint8Array(chunk);\n            if (buffer && buffer.byteLength > 0) {\n                this._sink.write(buffer);\n                this._position += buffer.byteLength;\n            }\n        }\n        return this;\n    }\n\n    protected _writeSchema(schema: Schema<T>) {\n        return this._writeMessage(Message.from(schema));\n    }\n\n    // @ts-ignore\n    protected _writeFooter(schema: Schema<T>) {\n        // eos bytes\n        return this._writeLegacyIpcFormat\n            ? this._write(Int32Array.of(0))\n            : this._write(Int32Array.of(-1, 0));\n    }\n\n    protected _writeMagic() {\n        return this._write(MAGIC);\n    }\n\n    protected _writePadding(nBytes: number) {\n        return nBytes > 0 ? this._write(new Uint8Array(nBytes)) : this;\n    }\n\n    protected _writeRecordBatch(batch: RecordBatch<T>) {\n        const { byteLength, nodes, bufferRegions, buffers } = VectorAssembler.assemble(batch);\n        const recordBatch = new metadata.RecordBatch(batch.length, nodes, bufferRegions);\n        const message = Message.from(recordBatch, byteLength);\n        return this\n            ._writeDictionaries(batch)\n            ._writeMessage(message)\n            ._writeBodyBuffers(buffers);\n    }\n\n    protected _writeDictionaryBatch(dictionary: Vector, id: number, isDelta = false) {\n        this._dictionaryDeltaOffsets.set(id, dictionary.length + (this._dictionaryDeltaOffsets.get(id) || 0));\n        const { byteLength, nodes, bufferRegions, buffers } = VectorAssembler.assemble(dictionary);\n        const recordBatch = new metadata.RecordBatch(dictionary.length, nodes, bufferRegions);\n        const dictionaryBatch = new metadata.DictionaryBatch(recordBatch, id, isDelta);\n        const message = Message.from(dictionaryBatch, byteLength);\n        return this\n            ._writeMessage(message)\n            ._writeBodyBuffers(buffers);\n    }\n\n    protected _writeBodyBuffers(buffers: ArrayBufferView[]) {\n        let buffer: ArrayBufferView;\n        let size: number, padding: number;\n        for (let i = -1, n = buffers.length; ++i < n;) {\n            if ((buffer = buffers[i]) && (size = buffer.byteLength) > 0) {\n                this._write(buffer);\n                if ((padding = ((size + 7) & ~7) - size) > 0) {\n                    this._writePadding(padding);\n                }\n            }\n        }\n        return this;\n    }\n\n    protected _writeDictionaries(batch: RecordBatch<T>) {\n        for (let [id, dictionary] of batch.dictionaries) {\n            let offset = this._dictionaryDeltaOffsets.get(id) || 0;\n            if (offset === 0 || (dictionary = dictionary.slice(offset)).length > 0) {\n                const chunks = 'chunks' in dictionary ? (dictionary as any).chunks : [dictionary];\n                for (const chunk of chunks) {\n                    this._writeDictionaryBatch(chunk, id, offset > 0);\n                    offset += chunk.length;\n                }\n            }\n        }\n        return this;\n    }\n}\n\n/** @ignore */\nexport class RecordBatchStreamWriter<T extends { [key: string]: DataType } = any> extends RecordBatchWriter<T> {\n    public static writeAll<T extends { [key: string]: DataType } = any>(input: Table<T> | Iterable<RecordBatch<T>>, options?: RecordBatchStreamWriterOptions): RecordBatchStreamWriter<T>;\n    public static writeAll<T extends { [key: string]: DataType } = any>(input: AsyncIterable<RecordBatch<T>>, options?: RecordBatchStreamWriterOptions): Promise<RecordBatchStreamWriter<T>>;\n    public static writeAll<T extends { [key: string]: DataType } = any>(input: PromiseLike<AsyncIterable<RecordBatch<T>>>, options?: RecordBatchStreamWriterOptions): Promise<RecordBatchStreamWriter<T>>;\n    public static writeAll<T extends { [key: string]: DataType } = any>(input: PromiseLike<Table<T> | Iterable<RecordBatch<T>>>, options?: RecordBatchStreamWriterOptions): Promise<RecordBatchStreamWriter<T>>;\n    /** @nocollapse */\n    public static writeAll<T extends { [key: string]: DataType } = any>(input: any, options?: RecordBatchStreamWriterOptions) {\n        const writer = new RecordBatchStreamWriter<T>(options);\n        if (isPromise<any>(input)) {\n            return input.then((x) => writer.writeAll(x));\n        } else if (isAsyncIterable<RecordBatch<T>>(input)) {\n            return writeAllAsync(writer, input);\n        }\n        return writeAll(writer, input);\n    }\n}\n\n/** @ignore */\nexport class RecordBatchFileWriter<T extends { [key: string]: DataType } = any> extends RecordBatchWriter<T> {\n    public static writeAll<T extends { [key: string]: DataType } = any>(input: Table<T> | Iterable<RecordBatch<T>>): RecordBatchFileWriter<T>;\n    public static writeAll<T extends { [key: string]: DataType } = any>(input: AsyncIterable<RecordBatch<T>>): Promise<RecordBatchFileWriter<T>>;\n    public static writeAll<T extends { [key: string]: DataType } = any>(input: PromiseLike<AsyncIterable<RecordBatch<T>>>): Promise<RecordBatchFileWriter<T>>;\n    public static writeAll<T extends { [key: string]: DataType } = any>(input: PromiseLike<Table<T> | Iterable<RecordBatch<T>>>): Promise<RecordBatchFileWriter<T>>;\n    /** @nocollapse */\n    public static writeAll<T extends { [key: string]: DataType } = any>(input: any) {\n        const writer = new RecordBatchFileWriter<T>();\n        if (isPromise<any>(input)) {\n            return input.then((x) => writer.writeAll(x));\n        } else if (isAsyncIterable<RecordBatch<T>>(input)) {\n            return writeAllAsync(writer, input);\n        }\n        return writeAll(writer, input);\n    }\n\n    constructor() {\n        super();\n        this._autoDestroy = true;\n    }\n\n    // @ts-ignore\n    protected _writeSchema(schema: Schema<T>) {\n        return this._writeMagic()._writePadding(2);\n    }\n\n    protected _writeFooter(schema: Schema<T>) {\n        const buffer = Footer.encode(new Footer(\n            schema, MetadataVersion.V4,\n            this._recordBatchBlocks, this._dictionaryBlocks\n        ));\n        return super\n            ._writeFooter(schema) // EOS bytes for sequential readers\n            ._write(buffer) // Write the flatbuffer\n            ._write(Int32Array.of(buffer.byteLength)) // then the footer size suffix\n            ._writeMagic(); // then the magic suffix\n    }\n}\n\n/** @ignore */\nexport class RecordBatchJSONWriter<T extends { [key: string]: DataType } = any> extends RecordBatchWriter<T> {\n\n    public static writeAll<T extends { [key: string]: DataType } = any>(this: typeof RecordBatchWriter, input: Table<T> | Iterable<RecordBatch<T>>): RecordBatchJSONWriter<T>;\n    // @ts-ignore\n    public static writeAll<T extends { [key: string]: DataType } = any>(this: typeof RecordBatchWriter, input: AsyncIterable<RecordBatch<T>>): Promise<RecordBatchJSONWriter<T>>;\n    public static writeAll<T extends { [key: string]: DataType } = any>(this: typeof RecordBatchWriter, input: PromiseLike<AsyncIterable<RecordBatch<T>>>): Promise<RecordBatchJSONWriter<T>>;\n    public static writeAll<T extends { [key: string]: DataType } = any>(this: typeof RecordBatchWriter, input: PromiseLike<Table<T> | Iterable<RecordBatch<T>>>): Promise<RecordBatchJSONWriter<T>>;\n    /** @nocollapse */\n    public static writeAll<T extends { [key: string]: DataType } = any>(this: typeof RecordBatchWriter, input: any) {\n        return new RecordBatchJSONWriter<T>().writeAll(input as any);\n    }\n\n    private _recordBatches: RecordBatch[];\n    private _dictionaries: RecordBatch[];\n\n    constructor() {\n        super();\n        this._autoDestroy = true;\n        this._recordBatches = [];\n        this._dictionaries = [];\n    }\n\n    protected _writeMessage() { return this; }\n    // @ts-ignore\n    protected _writeFooter(schema: Schema<T>) { return this; }\n    protected _writeSchema(schema: Schema<T>) {\n        return this._write(`{\\n  \"schema\": ${\n            JSON.stringify({ fields: schema.fields.map(fieldToJSON) }, null, 2)\n        }`);\n    }\n    protected _writeDictionaries(batch: RecordBatch<T>) {\n        if (batch.dictionaries.size > 0) {\n            this._dictionaries.push(batch);\n        }\n        return this;\n    }\n    protected _writeDictionaryBatch(dictionary: Vector, id: number, isDelta = false) {\n        this._dictionaryDeltaOffsets.set(id, dictionary.length + (this._dictionaryDeltaOffsets.get(id) || 0));\n        this._write(this._dictionaryBlocks.length === 0 ? `    ` : `,\\n    `);\n        this._write(`${dictionaryBatchToJSON(dictionary, id, isDelta)}`);\n        this._dictionaryBlocks.push(new FileBlock(0, 0, 0));\n        return this;\n    }\n    protected _writeRecordBatch(batch: RecordBatch<T>) {\n        this._writeDictionaries(batch);\n        this._recordBatches.push(batch);\n        return this;\n    }\n    public close() {\n\n        if (this._dictionaries.length > 0) {\n            this._write(`,\\n  \"dictionaries\": [\\n`);\n            for (const batch of this._dictionaries) {\n                super._writeDictionaries(batch);\n            }\n            this._write(`\\n  ]`);\n        }\n\n        if (this._recordBatches.length > 0) {\n            for (let i = -1, n = this._recordBatches.length; ++i < n;) {\n                this._write(i === 0 ? `,\\n  \"batches\": [\\n    ` : `,\\n    `);\n                this._write(`${recordBatchToJSON(this._recordBatches[i])}`);\n                this._recordBatchBlocks.push(new FileBlock(0, 0, 0));\n            }\n            this._write(`\\n  ]`);\n        }\n\n        if (this._schema) {\n            this._write(`\\n}`);\n        }\n\n        this._dictionaries = [];\n        this._recordBatches = [];\n\n        return super.close();\n    }\n}\n\n/** @ignore */\nfunction writeAll<T extends { [key: string]: DataType } = any>(writer: RecordBatchWriter<T>, input: Table<T> | Iterable<RecordBatch<T>>) {\n    let chunks = input as Iterable<RecordBatch<T>>;\n    if (input instanceof Table) {\n        chunks = input.chunks;\n        writer.reset(undefined, input.schema);\n    }\n    for (const batch of chunks) {\n        writer.write(batch);\n    }\n    return writer.finish();\n}\n\n/** @ignore */\nasync function writeAllAsync<T extends { [key: string]: DataType } = any>(writer: RecordBatchWriter<T>, batches: AsyncIterable<RecordBatch<T>>) {\n    for await (const batch of batches) {\n        writer.write(batch);\n    }\n    return writer.finish();\n}\n\n/** @ignore */\nfunction fieldToJSON({ name, type, nullable }: Field): object {\n    const assembler = new JSONTypeAssembler();\n    return {\n        'name': name, 'nullable': nullable,\n        'type': assembler.visit(type),\n        'children': (type.children || []).map(fieldToJSON),\n        'dictionary': !DataType.isDictionary(type) ? undefined : {\n            'id': type.id,\n            'isOrdered': type.isOrdered,\n            'indexType': assembler.visit(type.indices)\n        }\n    };\n}\n\n/** @ignore */\nfunction dictionaryBatchToJSON(dictionary: Vector, id: number, isDelta = false) {\n    const field = new Field(`${id}`, dictionary.type, dictionary.nullCount > 0);\n    const columns = JSONVectorAssembler.assemble(new Column(field, [dictionary]));\n    return JSON.stringify({\n        'id': id,\n        'isDelta': isDelta,\n        'data': {\n            'count': dictionary.length,\n            'columns': columns\n        }\n    }, null, 2);\n}\n\n/** @ignore */\nfunction recordBatchToJSON(records: RecordBatch) {\n    return JSON.stringify({\n        'count': records.length,\n        'columns': JSONVectorAssembler.assemble(records)\n    }, null, 2);\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Column } from '../column';\nimport { Vector } from '../vector';\nimport { DataType } from '../type';\nimport { Data, Buffers } from '../data';\nimport { Schema, Field } from '../schema';\nimport { Chunked } from '../vector/chunked';\nimport { RecordBatch } from '../recordbatch';\n\nconst noopBuf = new Uint8Array(0);\nconst nullBufs = (bitmapLength: number) => <unknown> [\n    noopBuf, noopBuf, new Uint8Array(bitmapLength), noopBuf\n] as Buffers<any>;\n\n/** @ignore */\nexport function ensureSameLengthData<T extends { [key: string]: DataType } = any>(\n    schema: Schema<T>,\n    chunks: Data<T[keyof T]>[],\n    batchLength = chunks.reduce((l, c) => Math.max(l, c.length), 0)\n) {\n    let data: Data<T[keyof T]>;\n    let field: Field<T[keyof T]>;\n    let i = -1, n = chunks.length;\n    const fields = [...schema.fields];\n    const batchData = [] as Data<T[keyof T]>[];\n    const bitmapLength = ((batchLength + 63) & ~63) >> 3;\n    while (++i < n) {\n        if ((data = chunks[i]) && data.length === batchLength) {\n            batchData[i] = data;\n        } else {\n            (field = fields[i]).nullable || (fields[i] = fields[i].clone({ nullable: true }) as Field<T[keyof T]>);\n            batchData[i] = data ? data._changeLengthAndBackfillNullBitmap(batchLength)\n                : Data.new(field.type, 0, batchLength, batchLength, nullBufs(bitmapLength)) as Data<T[keyof T]>;\n        }\n    }\n    return [new Schema<T>(fields), batchLength, batchData] as [Schema<T>, number, Data<T[keyof T]>[]];\n}\n\n/** @ignore */\nexport function distributeColumnsIntoRecordBatches<T extends { [key: string]: DataType } = any>(columns: Column<T[keyof T]>[]): [Schema<T>, RecordBatch<T>[]] {\n    return distributeVectorsIntoRecordBatches<T>(new Schema<T>(columns.map(({ field }) => field)), columns);\n}\n\n/** @ignore */\nexport function distributeVectorsIntoRecordBatches<T extends { [key: string]: DataType } = any>(schema: Schema<T>, vecs: (Vector<T[keyof T]> | Chunked<T[keyof T]>)[]): [Schema<T>, RecordBatch<T>[]] {\n    return uniformlyDistributeChunksAcrossRecordBatches<T>(schema, vecs.map((v) => v instanceof Chunked ? v.chunks.map((c) => c.data) : [v.data]));\n}\n\n/** @ignore */\nfunction uniformlyDistributeChunksAcrossRecordBatches<T extends { [key: string]: DataType } = any>(schema: Schema<T>, columns: Data<T[keyof T]>[][]): [Schema<T>, RecordBatch<T>[]] {\n\n    const fields = [...schema.fields];\n    const batchArgs = [] as [number, Data<T[keyof T]>[]][];\n    const memo = { numBatches: columns.reduce((n, c) => Math.max(n, c.length), 0) };\n\n    let numBatches = 0, batchLength = 0;\n    let i: number = -1, numColumns = columns.length;\n    let child: Data<T[keyof T]>, childData: Data<T[keyof T]>[] = [];\n\n    while (memo.numBatches-- > 0) {\n\n        for (batchLength = Number.POSITIVE_INFINITY, i = -1; ++i < numColumns;) {\n            childData[i] = child = columns[i].shift()!;\n            batchLength = Math.min(batchLength, child ? child.length : batchLength);\n        }\n\n        if (isFinite(batchLength)) {\n            childData = distributeChildData(fields, batchLength, childData, columns, memo);\n            if (batchLength > 0) {\n                batchArgs[numBatches++] = [batchLength, childData.slice()];\n            }\n        }\n    }\n    return [\n        schema = new Schema<T>(fields, schema.metadata),\n        batchArgs.map((xs) => new RecordBatch(schema, ...xs))\n    ];\n}\n\n/** @ignore */\nfunction distributeChildData<T extends { [key: string]: DataType } = any>(fields: Field<T[keyof T]>[], batchLength: number, childData: Data<T[keyof T]>[], columns: Data<T[keyof T]>[][], memo: { numBatches: number }) {\n    let data: Data<T[keyof T]>;\n    let field: Field<T[keyof T]>;\n    let length = 0, i = -1, n = columns.length;\n    const bitmapLength = ((batchLength + 63) & ~63) >> 3;\n    while (++i < n) {\n        if ((data = childData[i]) && ((length = data.length) >= batchLength)) {\n            if (length === batchLength) {\n                childData[i] = data;\n            } else {\n                childData[i] = data.slice(0, batchLength);\n                data = data.slice(batchLength, length - batchLength);\n                memo.numBatches = Math.max(memo.numBatches, columns[i].unshift(data));\n            }\n        } else {\n            (field = fields[i]).nullable || (fields[i] = field.clone({ nullable: true }) as Field<T[keyof T]>);\n            childData[i] = data ? data._changeLengthAndBackfillNullBitmap(batchLength)\n                : Data.new(field.type, 0, batchLength, batchLength, nullBufs(bitmapLength)) as Data<T[keyof T]>;\n        }\n    }\n    return childData;\n}\n","import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose.js\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n  return target;\n}","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Data } from '../data';\nimport { Type } from '../enum';\nimport { DataType } from '../type';\nimport { Chunked } from './chunked';\nimport { clampRange } from '../util/vector';\nimport { VectorType as V } from '../interfaces';\nimport { AbstractVector, Vector, Clonable, Sliceable, Applicative } from '../vector';\n\n/** @ignore */\nexport interface BaseVector<T extends DataType = any> extends Clonable<V<T>>, Sliceable<V<T>>, Applicative<T, Chunked<T>> {\n    slice(begin?: number, end?: number): V<T>;\n    concat(...others: Vector<T>[]): Chunked<T>;\n    clone<R extends DataType = T>(data: Data<R>, children?: Vector<R>[]): V<R>;\n}\n\n/** @ignore */\nexport abstract class BaseVector<T extends DataType = any> extends AbstractVector<T>\n    implements Clonable<V<T>>, Sliceable<V<T>>, Applicative<T, Chunked<T>> {\n\n    protected _children?: Vector[];\n\n    constructor(data: Data<T>, children?: Vector[]) {\n        super();\n        this._children = children;\n        this.numChildren = data.childData.length;\n        this._bindDataAccessors(this.data = data);\n    }\n\n    public readonly data: Data<T>;\n    public readonly numChildren: number;\n\n    public get type() { return this.data.type; }\n    public get typeId() { return this.data.typeId; }\n    public get length() { return this.data.length; }\n    public get offset() { return this.data.offset; }\n    public get stride() { return this.data.stride; }\n    public get nullCount() { return this.data.nullCount; }\n    public get byteLength() { return this.data.byteLength; }\n    public get VectorName() { return `${Type[this.typeId]}Vector`; }\n\n    public get ArrayType(): T['ArrayType'] { return this.type.ArrayType; }\n\n    public get values() { return this.data.values; }\n    public get typeIds() { return this.data.typeIds; }\n    public get nullBitmap() { return this.data.nullBitmap; }\n    public get valueOffsets() { return this.data.valueOffsets; }\n\n    public get [Symbol.toStringTag]() { return `${this.VectorName}<${this.type[Symbol.toStringTag]}>`; }\n\n    public clone<R extends DataType = T>(data: Data<R>, children = this._children) {\n        return Vector.new<R>(data, children) as any;\n    }\n\n    public concat(...others: Vector<T>[]) {\n        return Chunked.concat<T>(this, ...others);\n    }\n\n    public slice(begin?: number, end?: number) {\n        // Adjust args similar to Array.prototype.slice. Normalize begin/end to\n        // clamp between 0 and length, and wrap around on negative indices, e.g.\n        // slice(-1, 5) or slice(5, -1)\n        return clampRange(this, begin, end, this._sliceInternal);\n    }\n\n    public isValid(index: number): boolean {\n        if (this.nullCount > 0) {\n            const idx = this.offset + index;\n            const val = this.nullBitmap[idx >> 3];\n            const mask = (val & (1 << (idx % 8)));\n            return mask !== 0;\n        }\n        return true;\n    }\n\n    public getChildAt<R extends DataType = any>(index: number): Vector<R> | null {\n        return index < 0 || index >= this.numChildren ? null : (\n            (this._children || (this._children = []))[index] ||\n            (this._children[index] = Vector.new<R>(this.data.childData[index] as Data<R>))\n        ) as Vector<R>;\n    }\n\n    public toJSON(): any { return [...this]; }\n\n    protected _sliceInternal(self: this, begin: number, end: number) {\n        return self.clone(self.data.slice(begin, end - begin), null!);\n    }\n\n    // @ts-ignore\n    protected _bindDataAccessors(data: Data<T>) {\n        // Implementation in src/vectors/index.ts due to circular dependency/packaging shenanigans\n    }\n}\n\n(BaseVector.prototype as any)[Symbol.isConcatSpreadable] = true;\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Vector } from '../vector';\nimport { BaseVector } from './base';\nimport { Binary, Utf8 } from '../type';\n\n/** @ignore */\nexport class BinaryVector extends BaseVector<Binary> {\n    public asUtf8() {\n        return Vector.new(this.data.clone(new Utf8()));\n    }\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Bool } from '../type';\nimport { Chunked } from './chunked';\nimport { BaseVector } from './base';\nimport { VectorBuilderOptions } from './index';\nimport { vectorFromValuesWithType } from './index';\nimport { VectorBuilderOptionsAsync } from './index';\n\n/** @ignore */\nexport class BoolVector extends BaseVector<Bool> {\n    public static from<TNull = any>(input: Iterable<boolean | TNull>): BoolVector;\n    public static from<TNull = any>(input: AsyncIterable<boolean | TNull>): Promise<BoolVector>;\n    public static from<TNull = any>(input: VectorBuilderOptions<Bool, TNull>): Chunked<Bool>;\n    public static from<TNull = any>(input: VectorBuilderOptionsAsync<Bool, TNull>): Promise<Chunked<Bool>>;\n    /** @nocollapse */\n    public static from<TNull = any>(input: Iterable<boolean | TNull> | AsyncIterable<boolean | TNull> | VectorBuilderOptions<Bool, TNull> | VectorBuilderOptionsAsync<Bool, TNull>) {\n        return vectorFromValuesWithType(() => new Bool(), input);\n    }\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { DateUnit } from '../enum';\nimport { Chunked } from './chunked';\nimport { BaseVector } from './base';\nimport { VectorType as V } from '../interfaces';\nimport { VectorBuilderOptions } from './index';\nimport { vectorFromValuesWithType } from './index';\nimport { VectorBuilderOptionsAsync } from './index';\nimport { Date_, DateDay, DateMillisecond  } from '../type';\n\n/** @ignore */\ntype FromArgs<T extends Date_> = [Iterable<Date>, T['unit']];\n\n/** @ignore */\nexport class DateVector<T extends Date_ = Date_> extends BaseVector<T> {\n    public static from<T extends DateUnit.DAY>(...args: FromArgs<DateDay>): V<DateDay>;\n    public static from<T extends DateUnit.MILLISECOND>(...args: FromArgs<DateMillisecond>): V<DateMillisecond>;\n    public static from<T extends Date_, TNull = any>(input: Iterable<Date | TNull>): V<T>;\n    public static from<T extends Date_, TNull = any>(input: AsyncIterable<Date | TNull>): Promise<V<T>>;\n    public static from<T extends Date_, TNull = any>(input: VectorBuilderOptions<T, TNull>): Chunked<T>;\n    public static from<T extends Date_, TNull = any>(input: VectorBuilderOptionsAsync<T, TNull>): Promise<Chunked<T>>;\n    /** @nocollapse */\n    public static from<T extends Date_, TNull = any>(...args: FromArgs<T> | [Iterable<Date | TNull> | AsyncIterable<Date | TNull> | VectorBuilderOptions<T, TNull> | VectorBuilderOptionsAsync<T, TNull>]) {\n        if (args.length === 2) {\n            return vectorFromValuesWithType(() => args[1] === DateUnit.DAY ? new DateDay() : new DateMillisecond() as T, args[0]);\n        }\n        return vectorFromValuesWithType(() => new DateMillisecond() as T, args[0]);\n    }\n}\n\n/** @ignore */\nexport class DateDayVector extends DateVector<DateDay> {}\n\n/** @ignore */\nexport class DateMillisecondVector extends DateVector<DateMillisecond> {}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Decimal } from '../type';\nimport { BaseVector } from './base';\n\n/** @ignore */\nexport class DecimalVector extends BaseVector<Decimal> {}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Data } from '../data';\nimport { Vector } from '../vector';\nimport { BaseVector } from './base';\nimport { VectorType as V } from '../interfaces';\nimport { VectorBuilderOptions } from './index';\nimport { vectorFromValuesWithType } from './index';\nimport { VectorBuilderOptionsAsync } from './index';\nimport { DataType, Dictionary, TKeys } from '../type';\n\n/** @ignore */\ntype FromArgs<T extends DataType = any, TKey extends TKeys = TKeys> = [Vector<T>, TKey, ArrayLike<number> | TKey['TArray']];\n\n/** @ignore */\nexport class DictionaryVector<T extends DataType = any, TKey extends TKeys = TKeys> extends BaseVector<Dictionary<T, TKey>> {\n    public static from<T extends DataType = any, TKey extends TKeys = TKeys>(...args: FromArgs<T, TKey>): V<Dictionary<T, TKey>>;\n    public static from<T extends DataType = any, TKey extends TKeys = TKeys>(input: VectorBuilderOptions<Dictionary<T, TKey>>): Vector<Dictionary<T, TKey>>;\n    public static from<T extends DataType = any, TKey extends TKeys = TKeys>(input: VectorBuilderOptionsAsync<Dictionary<T, TKey>>): Promise<Vector<Dictionary<T, TKey>>>;\n    /** @nocollapse */\n    public static from<T extends DataType = any, TKey extends TKeys = TKeys>(...args: any[]) {\n        if (args.length === 3) {\n            const [values, indices, keys] = args as FromArgs<T, TKey>;\n            const type = new Dictionary(values.type, indices, null, null);\n            return Vector.new(Data.Dictionary(type, 0, keys.length, 0, null, keys, values));\n        }\n        return vectorFromValuesWithType(() => args[0].type, args[0]);\n    }\n\n    constructor(data: Data<Dictionary<T, TKey>>) {\n        super(data);\n        this.indices = Vector.new(data.clone(this.type.indices));\n    }\n\n    public readonly indices: V<TKey>;\n\n    public get dictionary() { return <Vector<T>> this.data.dictionary; }\n    public reverseLookup(value: T) { return this.dictionary.indexOf(value); }\n    public getKey(idx: number): TKey['TValue'] | null { return this.indices.get(idx); }\n    public getValue(key: number): T['TValue'] | null { return this.dictionary.get(key); }\n    public setKey(idx: number, key: TKey['TValue'] | null) { return this.indices.set(idx, key); }\n    public setValue(key: number, value: T['TValue'] | null) { return this.dictionary.set(key, value); }\n}\n\n(DictionaryVector.prototype as any).indices = null;\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { BaseVector } from './base';\nimport { FixedSizeBinary } from '../type';\n\n/** @ignore */\nexport class FixedSizeBinaryVector extends BaseVector<FixedSizeBinary> {}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { BaseVector } from './base';\nimport { DataType, FixedSizeList } from '../type';\n\n/** @ignore */\nexport class FixedSizeListVector<T extends DataType = any> extends BaseVector<FixedSizeList<T>> {}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Data } from '../data';\nimport { Vector } from '../vector';\nimport { Chunked } from './chunked';\nimport { BaseVector } from './base';\nimport { VectorBuilderOptions } from './index';\nimport { vectorFromValuesWithType } from './index';\nimport { VectorBuilderOptionsAsync } from './index';\nimport { Float, Float16, Float32, Float64, FloatArray } from '../type';\nimport { VectorType as V, TypedArrayConstructor } from '../interfaces';\n\n/** @ignore */\ntype FloatVectorConstructors =\n    typeof FloatVector   |\n    typeof Float16Vector |\n    typeof Float32Vector |\n    typeof Float64Vector ;\n\n/** @ignore */\ntype FromInput<T extends Float, TNull = any> =\n    FloatArray                          |\n    Iterable<T['TValue'] | TNull>       |\n    AsyncIterable<T['TValue'] | TNull>  |\n    VectorBuilderOptions<T, TNull>      |\n    VectorBuilderOptionsAsync<T, TNull> ;\n\n/** @ignore */\ntype FloatArrayCtor = TypedArrayConstructor<FloatArray>;\n\n/** @ignore */\nexport class FloatVector<T extends Float = Float> extends BaseVector<T> {\n\n    // Guaranteed zero-copy variants\n    public static from(this: typeof FloatVector, input: Uint16Array): Float16Vector;\n    public static from(this: typeof FloatVector, input: Float32Array): Float32Vector;\n    public static from(this: typeof FloatVector, input: Float64Array): Float64Vector;\n\n    // Zero-copy if input is a TypedArray of the same type as the\n    // Vector that from is called on, otherwise uses the Builders\n    public static from<TNull = any>(this: typeof Float16Vector,  input: FromInput<Float16, TNull>): Float16Vector;\n    public static from<TNull = any>(this: typeof Float32Vector,  input: FromInput<Float32, TNull>): Float32Vector;\n    public static from<TNull = any>(this: typeof Float64Vector,  input: FromInput<Float64, TNull>): Float64Vector;\n\n    // Not zero-copy\n    public static from<T extends Float, TNull = any>(this: typeof FloatVector, input: Iterable<T['TValue'] | TNull>): V<T>;\n    public static from<T extends Float, TNull = any>(this: typeof FloatVector, input: AsyncIterable<T['TValue'] | TNull>): Promise<V<T>>;\n    public static from<T extends Float, TNull = any>(this: typeof FloatVector, input: VectorBuilderOptions<T, TNull>): Chunked<T>;\n    public static from<T extends Float, TNull = any>(this: typeof FloatVector, input: VectorBuilderOptionsAsync<T, TNull>): Promise<Chunked<T>>;\n    /** @nocollapse */\n    public static from<T extends Float, TNull = any>(this: FloatVectorConstructors, input: FromInput<T, TNull>) {\n\n        let ArrowType = vectorTypeToDataType(this);\n\n        if ((input instanceof ArrayBuffer) || ArrayBuffer.isView(input)) {\n            let InputType = arrayTypeToDataType(input.constructor as FloatArrayCtor) || ArrowType;\n            // Special case, infer the Arrow DataType from the input if calling the base\n            // FloatVector.from with a TypedArray, e.g. `FloatVector.from(new Float32Array())`\n            if (ArrowType === null) {\n                ArrowType = InputType;\n            }\n            // If the DataType inferred from the Vector constructor matches the\n            // DataType inferred from the input arguments, return zero-copy view\n            if (ArrowType && ArrowType === InputType) {\n                let type = new ArrowType();\n                let length = input.byteLength / type.ArrayType.BYTES_PER_ELEMENT;\n                // If the ArrowType is Float16 but the input type isn't a Uint16Array,\n                // let the Float16Builder handle casting the input values to Uint16s.\n                if (!convertTo16Bit(ArrowType, input.constructor)) {\n                    return Vector.new(Data.Float(type, 0, length, 0, null, input as FloatArray));\n                }\n            }\n        }\n\n        if (ArrowType) {\n            // If the DataType inferred from the Vector constructor is different than\n            // the DataType inferred from the input TypedArray, or if input isn't a\n            // TypedArray, use the Builders to construct the result Vector\n            return vectorFromValuesWithType(() => new ArrowType!() as T, input);\n        }\n\n        if ((input instanceof DataView) || (input instanceof ArrayBuffer)) {\n            throw new TypeError(`Cannot infer float type from instance of ${input.constructor.name}`);\n        }\n\n        throw new TypeError('Unrecognized FloatVector input');\n    }\n}\n\n/** @ignore */\nexport class Float16Vector extends FloatVector<Float16> {\n    // Since JS doesn't have half floats, `toArray()` returns a zero-copy slice\n    // of the underlying Uint16Array data. This behavior ensures we don't incur\n    // extra compute or copies if you're calling `toArray()` in order to create\n    // a buffer for something like WebGL. Buf if you're using JS and want typed\n    // arrays of 4-to-8-byte precision, these methods will enumerate the values\n    // and clamp to the desired byte lengths.\n    public toFloat32Array() { return new Float32Array(this as Iterable<number>); }\n    public toFloat64Array() { return new Float64Array(this as Iterable<number>); }\n}\n\n/** @ignore */\nexport class Float32Vector extends FloatVector<Float32> {}\n/** @ignore */\nexport class Float64Vector extends FloatVector<Float64> {}\n\nconst convertTo16Bit = (typeCtor: any, dataCtor: any) => {\n    return (typeCtor === Float16) && (dataCtor !== Uint16Array);\n};\n\n/** @ignore */\nconst arrayTypeToDataType = (ctor: FloatArrayCtor) => {\n    switch (ctor) {\n        case Uint16Array:    return Float16;\n        case Float32Array:   return Float32;\n        case Float64Array:   return Float64;\n        default: return null;\n    }\n};\n\n/** @ignore */\nconst vectorTypeToDataType = (ctor: FloatVectorConstructors) => {\n    switch (ctor) {\n        case Float16Vector: return Float16;\n        case Float32Vector: return Float32;\n        case Float64Vector: return Float64;\n        default: return null;\n    }\n};\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { BaseVector } from './base';\nimport { Interval, IntervalDayTime, IntervalYearMonth } from '../type';\n\n/** @ignore */\nexport class IntervalVector<T extends Interval = Interval> extends BaseVector<T> {}\n/** @ignore */\nexport class IntervalDayTimeVector extends IntervalVector<IntervalDayTime> {}\n/** @ignore */\nexport class IntervalYearMonthVector extends IntervalVector<IntervalYearMonth> {}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Data } from '../data';\nimport { Vector } from '../vector';\nimport { Chunked } from './chunked';\nimport { BaseVector } from './base';\nimport { VectorBuilderOptions } from './index';\nimport { vectorFromValuesWithType } from './index';\nimport { VectorBuilderOptionsAsync } from './index';\nimport { BigInt64Array, BigUint64Array } from '../util/compat';\nimport { toBigInt64Array, toBigUint64Array } from '../util/buffer';\nimport { Int, Uint8, Uint16, Uint32, Uint64, Int8, Int16, Int32, Int64, IntArray } from '../type';\nimport { VectorType as V, TypedArrayConstructor, BigIntArrayConstructor, BigIntArray } from '../interfaces';\n\n/** @ignore */\ntype IntVectorConstructors =\n    typeof IntVector    |\n    typeof Int8Vector   |\n    typeof Int16Vector  |\n    typeof Int32Vector  |\n    typeof Uint8Vector  |\n    typeof Uint16Vector |\n    typeof Uint32Vector |\n    typeof Int64Vector  |\n    typeof Uint64Vector ;\n\n/** @ignore */\ntype FromInput<T extends Int, TNull = any> =\n    IntArray | BigIntArray              |\n    Iterable<T['TValue'] | TNull>       |\n    AsyncIterable<T['TValue'] | TNull>  |\n    VectorBuilderOptions<T, TNull>      |\n    VectorBuilderOptionsAsync<T, TNull> ;\n\n/** @ignore */\ntype FromArgs<T extends Int, TNull = any> = [FromInput<T, TNull>, boolean?];\n\n/** @ignore */\ntype IntArrayCtor = TypedArrayConstructor<IntArray> | BigIntArrayConstructor<BigIntArray>;\n\n/** @ignore */\nexport class IntVector<T extends Int = Int> extends BaseVector<T> {\n\n    // Guaranteed zero-copy variants\n    public static from(this: typeof IntVector, input: Int8Array): Int8Vector;\n    public static from(this: typeof IntVector, input: Int16Array): Int16Vector;\n    public static from(this: typeof IntVector, input: Int32Array): Int32Vector;\n    public static from(this: typeof IntVector, input: BigInt64Array): Int64Vector;\n    public static from(this: typeof IntVector, input: Int32Array, is64bit: true): Int64Vector;\n    public static from(this: typeof IntVector, input: Uint8Array): Uint8Vector;\n    public static from(this: typeof IntVector, input: Uint16Array): Uint16Vector;\n    public static from(this: typeof IntVector, input: Uint32Array): Uint32Vector;\n    public static from(this: typeof IntVector, input: BigUint64Array): Uint64Vector;\n    public static from(this: typeof IntVector, input: Uint32Array, is64bit: true): Uint64Vector;\n\n    // Zero-copy if input is a TypedArray of the same type as the\n    // Vector that from is called on, otherwise uses the Builders\n    public static from<TNull = any>(this: typeof Int8Vector,   input: FromInput<Int8, TNull>): Int8Vector;\n    public static from<TNull = any>(this: typeof Int16Vector,  input: FromInput<Int16, TNull>): Int16Vector;\n    public static from<TNull = any>(this: typeof Int32Vector,  input: FromInput<Int32, TNull>): Int32Vector;\n    public static from<TNull = any>(this: typeof Int64Vector,  input: FromInput<Int64, TNull>): Int64Vector;\n    public static from<TNull = any>(this: typeof Uint8Vector,  input: FromInput<Uint8, TNull>): Uint8Vector;\n    public static from<TNull = any>(this: typeof Uint16Vector, input: FromInput<Uint16, TNull>): Uint16Vector;\n    public static from<TNull = any>(this: typeof Uint32Vector, input: FromInput<Uint32, TNull>): Uint32Vector;\n    public static from<TNull = any>(this: typeof Uint64Vector, input: FromInput<Uint64, TNull>): Uint64Vector;\n\n    // Not zero-copy\n    public static from<T extends Int, TNull = any>(this: typeof IntVector, input: Iterable<T['TValue'] | TNull>): V<T>;\n    public static from<T extends Int, TNull = any>(this: typeof IntVector, input: AsyncIterable<T['TValue'] | TNull>): Promise<V<T>>;\n    public static from<T extends Int, TNull = any>(this: typeof IntVector, input: VectorBuilderOptions<T, TNull>): Chunked<T>;\n    public static from<T extends Int, TNull = any>(this: typeof IntVector, input: VectorBuilderOptionsAsync<T, TNull>): Promise<Chunked<T>>;\n    /** @nocollapse */\n    public static from<T extends Int, TNull = any>(this: IntVectorConstructors, ...args: FromArgs<T, TNull>) {\n\n        let [input, is64bit = false] = args;\n        let ArrowType = vectorTypeToDataType(this, is64bit);\n\n        if ((input instanceof ArrayBuffer) || ArrayBuffer.isView(input)) {\n            let InputType = arrayTypeToDataType(input.constructor as IntArrayCtor, is64bit) || ArrowType;\n            // Special case, infer the Arrow DataType from the input if calling the base\n            // IntVector.from with a TypedArray, e.g. `IntVector.from(new Int32Array())`\n            if (ArrowType === null) {\n                ArrowType = InputType;\n            }\n            // If the DataType inferred from the Vector constructor matches the\n            // DataType inferred from the input arguments, return zero-copy view\n            if (ArrowType && ArrowType === InputType) {\n                let type = new ArrowType();\n                let length = input.byteLength / type.ArrayType.BYTES_PER_ELEMENT;\n                // If the ArrowType is 64bit but the input type is 32bit pairs, update the logical length\n                if (convert32To64Bit(ArrowType, input.constructor)) {\n                    length *= 0.5;\n                }\n                return Vector.new(Data.Int(type, 0, length, 0, null, input as IntArray));\n            }\n        }\n\n        if (ArrowType) {\n            // If the DataType inferred from the Vector constructor is different than\n            // the DataType inferred from the input TypedArray, or if input isn't a\n            // TypedArray, use the Builders to construct the result Vector\n            return vectorFromValuesWithType(() => new ArrowType!() as T, input);\n        }\n\n        if ((input instanceof DataView) || (input instanceof ArrayBuffer)) {\n            throw new TypeError(`Cannot infer integer type from instance of ${input.constructor.name}`);\n        }\n\n        throw new TypeError('Unrecognized IntVector input');\n    }\n}\n\n/** @ignore */\nexport class Int8Vector extends IntVector<Int8> {}\n/** @ignore */\nexport class Int16Vector extends IntVector<Int16> {}\n/** @ignore */\nexport class Int32Vector extends IntVector<Int32> {}\n/** @ignore */\nexport class Int64Vector extends IntVector<Int64> {\n    public toBigInt64Array() {\n        return toBigInt64Array(this.values);\n    }\n    // @ts-ignore\n    private _values64: BigInt64Array;\n    public get values64(): BigInt64Array {\n        return this._values64 || (this._values64 = this.toBigInt64Array());\n    }\n}\n\n/** @ignore */\nexport class Uint8Vector extends IntVector<Uint8> {}\n/** @ignore */\nexport class Uint16Vector extends IntVector<Uint16> {}\n/** @ignore */\nexport class Uint32Vector extends IntVector<Uint32> {}\n/** @ignore */\nexport class Uint64Vector extends IntVector<Uint64> {\n    public toBigUint64Array() {\n        return toBigUint64Array(this.values);\n    }\n    // @ts-ignore\n    private _values64: BigUint64Array;\n    public get values64(): BigUint64Array {\n        return this._values64 || (this._values64 = this.toBigUint64Array());\n    }\n}\n\nconst convert32To64Bit = (typeCtor: any, dataCtor: any) => {\n    return (typeCtor === Int64 || typeCtor === Uint64) &&\n           (dataCtor === Int32Array || dataCtor === Uint32Array);\n};\n\n/** @ignore */\nconst arrayTypeToDataType = (ctor: IntArrayCtor, is64bit: boolean) => {\n    switch (ctor) {\n        case Int8Array:      return Int8;\n        case Int16Array:     return Int16;\n        case Int32Array:     return is64bit ? Int64 : Int32;\n        case BigInt64Array:  return Int64;\n        case Uint8Array:     return Uint8;\n        case Uint16Array:    return Uint16;\n        case Uint32Array:    return is64bit ? Uint64 : Uint32;\n        case BigUint64Array: return Uint64;\n        default: return null;\n    }\n};\n\n/** @ignore */\nconst vectorTypeToDataType = (ctor: IntVectorConstructors, is64bit: boolean) => {\n    switch (ctor) {\n        case Int8Vector:   return Int8;\n        case Int16Vector:  return Int16;\n        case Int32Vector:  return is64bit ? Int64 : Int32;\n        case Int64Vector:  return Int64;\n        case Uint8Vector:  return Uint8;\n        case Uint16Vector: return Uint16;\n        case Uint32Vector: return is64bit ? Uint64 : Uint32;\n        case Uint64Vector: return Uint64;\n        default: return null;\n    }\n};\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { BaseVector } from './base';\nimport { DataType, List } from '../type';\n\n/** @ignore */\nexport class ListVector<T extends DataType = any> extends BaseVector<List<T>> {}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { MapRow } from './row';\nimport { Field } from '../schema';\nimport { Vector } from '../vector';\nimport { BaseVector } from './base';\nimport { DataType, Map_, Struct, List } from '../type';\n\n/** @ignore */\nexport class MapVector<K extends DataType = any, V extends DataType = any> extends BaseVector<Map_<K, V>> {\n    public asList() {\n        const child = this.type.children[0] as Field<Struct<{ key: K, value: V }>>;\n        return Vector.new(this.data.clone(new List<Struct<{ key: K, value: V }>>(child)));\n    }\n    public bind(index: number): Map_<K, V>['TValue'] {\n        const child = this.getChildAt<Struct<{ key: K, value: V }>>(0);\n        const { [index]: begin, [index + 1]: end } = this.valueOffsets;\n        return new MapRow(child!.slice(begin, end));\n    }\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Null } from '../type';\nimport { BaseVector } from './base';\n\n/** @ignore */\nexport class NullVector extends BaseVector<Null> {}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { StructRow } from './row';\nimport { BaseVector } from './base';\nimport { DataType, Struct } from '../type';\n\n/** @ignore */ const kRowIndex = Symbol.for('rowIndex');\n/** @ignore */\nexport class StructVector<T extends { [key: string]: DataType } = any> extends BaseVector<Struct<T>> {\n    // @ts-ignore\n    private _row: StructRow<T>;\n    public bind(index: number): Struct<T>['TValue'] {\n        const proto = this._row || (this._row = new StructRow<T>(this));\n        const bound = Object.create(proto);\n        bound[kRowIndex] = index;\n        return bound;\n    }\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { BaseVector } from './base';\nimport { Timestamp, TimestampSecond, TimestampMillisecond, TimestampMicrosecond, TimestampNanosecond } from '../type';\n\n/** @ignore */\nexport class TimestampVector<T extends Timestamp = Timestamp> extends BaseVector<T> {}\n/** @ignore */\nexport class TimestampSecondVector extends TimestampVector<TimestampSecond> {}\n/** @ignore */\nexport class TimestampMillisecondVector extends TimestampVector<TimestampMillisecond> {}\n/** @ignore */\nexport class TimestampMicrosecondVector extends TimestampVector<TimestampMicrosecond> {}\n/** @ignore */\nexport class TimestampNanosecondVector extends TimestampVector<TimestampNanosecond> {}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { BaseVector } from './base';\nimport { Time, TimeSecond, TimeMillisecond, TimeMicrosecond, TimeNanosecond } from '../type';\n\n/** @ignore */\nexport class TimeVector<T extends Time = Time> extends BaseVector<T> {}\n/** @ignore */\nexport class TimeSecondVector extends TimeVector<TimeSecond> {}\n/** @ignore */\nexport class TimeMillisecondVector extends TimeVector<TimeMillisecond> {}\n/** @ignore */\nexport class TimeMicrosecondVector extends TimeVector<TimeMicrosecond> {}\n/** @ignore */\nexport class TimeNanosecondVector extends TimeVector<TimeNanosecond> {}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { BaseVector } from './base';\nimport { Union, DenseUnion, SparseUnion} from '../type';\n\n/** @ignore */\nexport class UnionVector<T extends Union = Union> extends BaseVector<T> {\n    public get typeIdToChildIndex() { return this.data.type.typeIdToChildIndex; }\n}\n\n/** @ignore */\nexport class DenseUnionVector extends UnionVector<DenseUnion> {\n    public get valueOffsets() { return this.data.valueOffsets!; }\n}\n\n/** @ignore */\nexport class SparseUnionVector extends UnionVector<SparseUnion> {}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Vector } from '../vector';\nimport { Chunked } from './chunked';\nimport { BaseVector } from './base';\nimport { Binary, Utf8 } from '../type';\nimport { VectorBuilderOptions } from './index';\nimport { vectorFromValuesWithType } from './index';\nimport { VectorBuilderOptionsAsync } from './index';\n\n/** @ignore */\nexport class Utf8Vector extends BaseVector<Utf8> {\n    public static from<TNull = any>(input: Iterable<string | TNull>): Utf8Vector;\n    public static from<TNull = any>(input: AsyncIterable<string | TNull>): Promise<Utf8Vector>;\n    public static from<TNull = any>(input: VectorBuilderOptions<Utf8, TNull>): Chunked<Utf8>;\n    public static from<TNull = any>(input: VectorBuilderOptionsAsync<Utf8, TNull>): Promise<Chunked<Utf8>>;\n    /** @nocollapse */\n    public static from<TNull = any>(input: Iterable<string | TNull> | AsyncIterable<string | TNull> | VectorBuilderOptions<Utf8, TNull> | VectorBuilderOptionsAsync<Utf8, TNull>) {\n        return vectorFromValuesWithType(() => new Utf8(), input);\n    }\n    public asBinary() {\n        return Vector.new(this.data.clone(new Binary()));\n    }\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\n/** @ignore */\nexport function partial0<T>(visit: (node: T) => any) {\n    return function(this: T) { return visit(this); };\n}\n\n/** @ignore */\nexport function partial1<T>(visit: (node: T, a: any) => any) {\n    return function(this: T, a: any) { return visit(this, a); };\n}\n\n/** @ignore */\nexport function partial2<T>(visit: (node: T, a: any, b: any) => any) {\n    return function(this: T, a: any, b: any) { return visit(this, a, b); };\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Data } from '../data';\nimport { BN } from '../util/bn';\nimport { Visitor } from '../visitor';\nimport { decodeUtf8 } from '../util/utf8';\nimport { VectorType } from '../interfaces';\nimport { uint16ToFloat64 } from '../util/math';\nimport { Type, UnionMode, Precision, DateUnit, TimeUnit, IntervalUnit } from '../enum';\nimport {\n    DataType, Dictionary,\n    Bool, Null, Utf8, Binary, Decimal, FixedSizeBinary, List, FixedSizeList, Map_, Struct,\n    Float, Float16, Float32, Float64,\n    Int, Uint8, Uint16, Uint32, Uint64, Int8, Int16, Int32, Int64,\n    Date_, DateDay, DateMillisecond,\n    Interval, IntervalDayTime, IntervalYearMonth,\n    Time, TimeSecond, TimeMillisecond, TimeMicrosecond, TimeNanosecond,\n    Timestamp, TimestampSecond, TimestampMillisecond, TimestampMicrosecond, TimestampNanosecond,\n    Union, DenseUnion, SparseUnion,\n} from '../type';\n\n/** @ignore */\nexport interface GetVisitor extends Visitor {\n    visit<T extends VectorType>  (node: T, index: number): T['TValue'];\n    visitMany<T extends VectorType>  (nodes: T[], indices: number[]): T['TValue'][];\n    getVisitFn<T extends Type>    (node: T): (vector: VectorType<T>, index: number) => VectorType<T>['TValue'];\n    getVisitFn<T extends DataType>(node: VectorType<T> | Data<T> | T): (vector: VectorType<T>, index: number) => VectorType<T>['TValue'];\n    visitNull                 <T extends Null>                 (vector: VectorType<T>, index: number): T['TValue'];\n    visitBool                 <T extends Bool>                 (vector: VectorType<T>, index: number): T['TValue'];\n    visitInt                  <T extends Int>                  (vector: VectorType<T>, index: number): T['TValue'];\n    visitInt8                 <T extends Int8>                 (vector: VectorType<T>, index: number): T['TValue'];\n    visitInt16                <T extends Int16>                (vector: VectorType<T>, index: number): T['TValue'];\n    visitInt32                <T extends Int32>                (vector: VectorType<T>, index: number): T['TValue'];\n    visitInt64                <T extends Int64>                (vector: VectorType<T>, index: number): T['TValue'];\n    visitUint8                <T extends Uint8>                (vector: VectorType<T>, index: number): T['TValue'];\n    visitUint16               <T extends Uint16>               (vector: VectorType<T>, index: number): T['TValue'];\n    visitUint32               <T extends Uint32>               (vector: VectorType<T>, index: number): T['TValue'];\n    visitUint64               <T extends Uint64>               (vector: VectorType<T>, index: number): T['TValue'];\n    visitFloat                <T extends Float>                (vector: VectorType<T>, index: number): T['TValue'];\n    visitFloat16              <T extends Float16>              (vector: VectorType<T>, index: number): T['TValue'];\n    visitFloat32              <T extends Float32>              (vector: VectorType<T>, index: number): T['TValue'];\n    visitFloat64              <T extends Float64>              (vector: VectorType<T>, index: number): T['TValue'];\n    visitUtf8                 <T extends Utf8>                 (vector: VectorType<T>, index: number): T['TValue'];\n    visitBinary               <T extends Binary>               (vector: VectorType<T>, index: number): T['TValue'];\n    visitFixedSizeBinary      <T extends FixedSizeBinary>      (vector: VectorType<T>, index: number): T['TValue'];\n    visitDate                 <T extends Date_>                (vector: VectorType<T>, index: number): T['TValue'];\n    visitDateDay              <T extends DateDay>              (vector: VectorType<T>, index: number): T['TValue'];\n    visitDateMillisecond      <T extends DateMillisecond>      (vector: VectorType<T>, index: number): T['TValue'];\n    visitTimestamp            <T extends Timestamp>            (vector: VectorType<T>, index: number): T['TValue'];\n    visitTimestampSecond      <T extends TimestampSecond>      (vector: VectorType<T>, index: number): T['TValue'];\n    visitTimestampMillisecond <T extends TimestampMillisecond> (vector: VectorType<T>, index: number): T['TValue'];\n    visitTimestampMicrosecond <T extends TimestampMicrosecond> (vector: VectorType<T>, index: number): T['TValue'];\n    visitTimestampNanosecond  <T extends TimestampNanosecond>  (vector: VectorType<T>, index: number): T['TValue'];\n    visitTime                 <T extends Time>                 (vector: VectorType<T>, index: number): T['TValue'];\n    visitTimeSecond           <T extends TimeSecond>           (vector: VectorType<T>, index: number): T['TValue'];\n    visitTimeMillisecond      <T extends TimeMillisecond>      (vector: VectorType<T>, index: number): T['TValue'];\n    visitTimeMicrosecond      <T extends TimeMicrosecond>      (vector: VectorType<T>, index: number): T['TValue'];\n    visitTimeNanosecond       <T extends TimeNanosecond>       (vector: VectorType<T>, index: number): T['TValue'];\n    visitDecimal              <T extends Decimal>              (vector: VectorType<T>, index: number): T['TValue'];\n    visitList                 <T extends List>                 (vector: VectorType<T>, index: number): T['TValue'];\n    visitStruct               <T extends Struct>               (vector: VectorType<T>, index: number): T['TValue'];\n    visitUnion                <T extends Union>                (vector: VectorType<T>, index: number): T['TValue'];\n    visitDenseUnion           <T extends DenseUnion>           (vector: VectorType<T>, index: number): T['TValue'];\n    visitSparseUnion          <T extends SparseUnion>          (vector: VectorType<T>, index: number): T['TValue'];\n    visitDictionary           <T extends Dictionary>           (vector: VectorType<T>, index: number): T['TValue'];\n    visitInterval             <T extends Interval>             (vector: VectorType<T>, index: number): T['TValue'];\n    visitIntervalDayTime      <T extends IntervalDayTime>      (vector: VectorType<T>, index: number): T['TValue'];\n    visitIntervalYearMonth    <T extends IntervalYearMonth>    (vector: VectorType<T>, index: number): T['TValue'];\n    visitFixedSizeList        <T extends FixedSizeList>        (vector: VectorType<T>, index: number): T['TValue'];\n    visitMap                  <T extends Map_>                 (vector: VectorType<T>, index: number): T['TValue'];\n}\n\n/** @ignore */\nexport class GetVisitor extends Visitor {}\n\n/** @ignore */const epochDaysToMs = (data: Int32Array, index: number) => 86400000 * data[index];\n/** @ignore */const epochMillisecondsLongToMs = (data: Int32Array, index: number) => 4294967296 * (data[index + 1]) + (data[index] >>> 0);\n/** @ignore */const epochMicrosecondsLongToMs = (data: Int32Array, index: number) => 4294967296 * (data[index + 1] / 1000) + ((data[index] >>> 0) / 1000);\n/** @ignore */const epochNanosecondsLongToMs = (data: Int32Array, index: number) => 4294967296 * (data[index + 1] / 1000000) + ((data[index] >>> 0) / 1000000);\n\n/** @ignore */const epochMillisecondsToDate = (epochMs: number) => new Date(epochMs);\n/** @ignore */const epochDaysToDate = (data: Int32Array, index: number) => epochMillisecondsToDate(epochDaysToMs(data, index));\n/** @ignore */const epochMillisecondsLongToDate = (data: Int32Array, index: number) => epochMillisecondsToDate(epochMillisecondsLongToMs(data, index));\n\n/** @ignore */\nconst getNull = <T extends Null>(_vector: VectorType<T>, _index: number): T['TValue'] => null;\n/** @ignore */\nconst getVariableWidthBytes = (values: Uint8Array, valueOffsets: Int32Array, index: number) => {\n    const { [index]: x, [index + 1]: y } = valueOffsets;\n    return x != null && y != null ? values.subarray(x, y) : null as any;\n};\n\n/** @ignore */\nconst getBool = <T extends Bool>({ offset, values }: VectorType<T>, index: number): T['TValue'] => {\n    const idx = offset + index;\n    const byte = values[idx >> 3];\n    return (byte & 1 << (idx % 8)) !== 0;\n};\n\n/** @ignore */\ntype Numeric1X = Int8 | Int16 | Int32 | Uint8 | Uint16 | Uint32 | Float32 | Float64;\n/** @ignore */\ntype Numeric2X = Int64 | Uint64;\n\n/** @ignore */\nconst getDateDay         = <T extends DateDay>        ({ values         }: VectorType<T>, index: number): T['TValue'] => epochDaysToDate(values, index);\n/** @ignore */\nconst getDateMillisecond = <T extends DateMillisecond>({ values         }: VectorType<T>, index: number): T['TValue'] => epochMillisecondsLongToDate(values, index * 2);\n/** @ignore */\nconst getNumeric         = <T extends Numeric1X>      ({ stride, values }: VectorType<T>, index: number): T['TValue'] => values[stride * index];\n/** @ignore */\nconst getFloat16         = <T extends Float16>        ({ stride, values }: VectorType<T>, index: number): T['TValue'] => uint16ToFloat64(values[stride * index]);\n/** @ignore */\nconst getBigInts         = <T extends Numeric2X>({ stride, values, type }: VectorType<T>, index: number): T['TValue'] => <any> BN.new(values.subarray(stride * index, stride * (index + 1)), type.isSigned);\n/** @ignore */\nconst getFixedSizeBinary = <T extends FixedSizeBinary>({ stride, values }: VectorType<T>, index: number): T['TValue'] => values.subarray(stride * index, stride * (index + 1));\n\n/** @ignore */\nconst getBinary = <T extends Binary>({ values, valueOffsets }: VectorType<T>, index: number): T['TValue'] => getVariableWidthBytes(values, valueOffsets, index);\n/** @ignore */\nconst getUtf8 = <T extends Utf8>({ values, valueOffsets }: VectorType<T>, index: number): T['TValue'] => {\n    const bytes = getVariableWidthBytes(values, valueOffsets, index);\n    return bytes !== null ? decodeUtf8(bytes) : null as any;\n};\n\n/* istanbul ignore next */\n/** @ignore */\nconst getInt = <T extends Int>(vector: VectorType<T>, index: number): T['TValue'] => (\n    vector.type.bitWidth < 64\n        ? getNumeric(vector as VectorType<Numeric1X>, index)\n        : getBigInts(vector as VectorType<Numeric2X>, index)\n);\n\n/* istanbul ignore next */\n/** @ignore */\nconst getFloat = <T extends Float> (vector: VectorType<T>, index: number): T['TValue'] => (\n    vector.type.precision !== Precision.HALF\n        ? getNumeric(vector as VectorType<Numeric1X>, index)\n        : getFloat16(vector as VectorType<Float16>, index)\n);\n\n/* istanbul ignore next */\n/** @ignore */\nconst getDate = <T extends Date_> (vector: VectorType<T>, index: number): T['TValue'] => (\n    vector.type.unit === DateUnit.DAY\n        ? getDateDay(vector as VectorType<DateDay>, index)\n        : getDateMillisecond(vector as VectorType<DateMillisecond>, index)\n);\n\n/** @ignore */\nconst getTimestampSecond      = <T extends TimestampSecond>     ({ values }: VectorType<T>, index: number): T['TValue'] => 1000 * epochMillisecondsLongToMs(values, index * 2);\n/** @ignore */\nconst getTimestampMillisecond = <T extends TimestampMillisecond>({ values }: VectorType<T>, index: number): T['TValue'] => epochMillisecondsLongToMs(values, index * 2);\n/** @ignore */\nconst getTimestampMicrosecond = <T extends TimestampMicrosecond>({ values }: VectorType<T>, index: number): T['TValue'] => epochMicrosecondsLongToMs(values, index * 2);\n/** @ignore */\nconst getTimestampNanosecond  = <T extends TimestampNanosecond> ({ values }: VectorType<T>, index: number): T['TValue'] => epochNanosecondsLongToMs(values, index * 2);\n/* istanbul ignore next */\n/** @ignore */\nconst getTimestamp            = <T extends Timestamp>(vector: VectorType<T>, index: number): T['TValue'] => {\n    switch (vector.type.unit) {\n        case TimeUnit.SECOND:      return      getTimestampSecond(vector as VectorType<TimestampSecond>, index);\n        case TimeUnit.MILLISECOND: return getTimestampMillisecond(vector as VectorType<TimestampMillisecond>, index);\n        case TimeUnit.MICROSECOND: return getTimestampMicrosecond(vector as VectorType<TimestampMicrosecond>, index);\n        case TimeUnit.NANOSECOND:  return  getTimestampNanosecond(vector as VectorType<TimestampNanosecond>, index);\n    }\n};\n\n/** @ignore */\nconst getTimeSecond      = <T extends TimeSecond>     ({ values, stride }: VectorType<T>, index: number): T['TValue'] => values[stride * index];\n/** @ignore */\nconst getTimeMillisecond = <T extends TimeMillisecond>({ values, stride }: VectorType<T>, index: number): T['TValue'] => values[stride * index];\n/** @ignore */\nconst getTimeMicrosecond = <T extends TimeMicrosecond>({ values         }: VectorType<T>, index: number): T['TValue'] => BN.signed(values.subarray(2 * index, 2 * (index + 1)));\n/** @ignore */\nconst getTimeNanosecond  = <T extends TimeNanosecond> ({ values         }: VectorType<T>, index: number): T['TValue'] => BN.signed(values.subarray(2 * index, 2 * (index + 1)));\n/* istanbul ignore next */\n/** @ignore */\nconst getTime            = <T extends Time>(vector: VectorType<T>, index: number): T['TValue'] => {\n    switch (vector.type.unit) {\n        case TimeUnit.SECOND:      return      getTimeSecond(vector as VectorType<TimeSecond>, index);\n        case TimeUnit.MILLISECOND: return getTimeMillisecond(vector as VectorType<TimeMillisecond>, index);\n        case TimeUnit.MICROSECOND: return getTimeMicrosecond(vector as VectorType<TimeMicrosecond>, index);\n        case TimeUnit.NANOSECOND:  return  getTimeNanosecond(vector as VectorType<TimeNanosecond>, index);\n    }\n};\n\n/** @ignore */\nconst getDecimal = <T extends Decimal>({ values }: VectorType<T>, index: number): T['TValue'] => BN.decimal(values.subarray(4 * index, 4 * (index + 1)));\n\n/** @ignore */\nconst getList = <T extends List>(vector: VectorType<T>, index: number): T['TValue'] => {\n    const child = vector.getChildAt(0)!, { valueOffsets, stride } = vector;\n    return child.slice(valueOffsets[index * stride], valueOffsets[(index * stride) + 1]) as T['TValue'];\n};\n\n/** @ignore */\nconst getMap = <T extends Map_>(vector: VectorType<T>, index: number): T['TValue'] => {\n    return vector.bind(index) as T['TValue'];\n};\n\n/** @ignore */\nconst getStruct = <T extends Struct>(vector: VectorType<T>, index: number): T['TValue'] => {\n    return vector.bind(index) as T['TValue'];\n};\n\n/* istanbul ignore next */\n/** @ignore */\nconst getUnion = <\n    V extends VectorType<Union> | VectorType<DenseUnion> | VectorType<SparseUnion>\n>(vector: V, index: number): V['TValue'] => {\n    return vector.type.mode === UnionMode.Dense ?\n        getDenseUnion(vector as VectorType<DenseUnion>, index) :\n        getSparseUnion(vector as VectorType<SparseUnion>, index);\n};\n\n/** @ignore */\nconst getDenseUnion = <T extends DenseUnion>(vector: VectorType<T>, index: number): T['TValue'] => {\n    const childIndex = vector.typeIdToChildIndex[vector.typeIds[index]];\n    const child = vector.getChildAt(childIndex);\n    return child ? child.get(vector.valueOffsets[index]) : null;\n};\n\n/** @ignore */\nconst getSparseUnion = <T extends SparseUnion>(vector: VectorType<T>, index: number): T['TValue'] => {\n    const childIndex = vector.typeIdToChildIndex[vector.typeIds[index]];\n    const child = vector.getChildAt(childIndex);\n    return child ? child.get(index) : null;\n};\n\n/** @ignore */\nconst getDictionary = <T extends Dictionary>(vector: VectorType<T>, index: number): T['TValue'] => {\n    return vector.getValue(vector.getKey(index)!);\n};\n\n/* istanbul ignore next */\n/** @ignore */\nconst getInterval = <T extends Interval>(vector: VectorType<T>, index: number): T['TValue'] =>\n    (vector.type.unit === IntervalUnit.DAY_TIME)\n        ? getIntervalDayTime(vector as VectorType<IntervalDayTime>, index)\n        : getIntervalYearMonth(vector as VectorType<IntervalYearMonth>, index);\n\n/** @ignore */\nconst getIntervalDayTime = <T extends IntervalDayTime>({ values }: VectorType<T>, index: number): T['TValue'] => values.subarray(2 * index, 2 * (index + 1));\n\n/** @ignore */\nconst getIntervalYearMonth = <T extends IntervalYearMonth>({ values }: VectorType<T>, index: number): T['TValue'] => {\n    const interval = values[index];\n    const int32s = new Int32Array(2);\n    int32s[0] = interval / 12 | 0; /* years */\n    int32s[1] = interval % 12 | 0; /* months */\n    return int32s;\n};\n\n/** @ignore */\nconst getFixedSizeList = <T extends FixedSizeList>(vector: VectorType<T>, index: number): T['TValue'] => {\n    const child = vector.getChildAt(0)!, { stride } = vector;\n    return child.slice(index * stride, (index + 1) * stride) as T['TValue'];\n};\n\nGetVisitor.prototype.visitNull                 =                 getNull;\nGetVisitor.prototype.visitBool                 =                 getBool;\nGetVisitor.prototype.visitInt                  =                  getInt;\nGetVisitor.prototype.visitInt8                 =              getNumeric;\nGetVisitor.prototype.visitInt16                =              getNumeric;\nGetVisitor.prototype.visitInt32                =              getNumeric;\nGetVisitor.prototype.visitInt64                =              getBigInts;\nGetVisitor.prototype.visitUint8                =              getNumeric;\nGetVisitor.prototype.visitUint16               =              getNumeric;\nGetVisitor.prototype.visitUint32               =              getNumeric;\nGetVisitor.prototype.visitUint64               =              getBigInts;\nGetVisitor.prototype.visitFloat                =                getFloat;\nGetVisitor.prototype.visitFloat16              =              getFloat16;\nGetVisitor.prototype.visitFloat32              =              getNumeric;\nGetVisitor.prototype.visitFloat64              =              getNumeric;\nGetVisitor.prototype.visitUtf8                 =                 getUtf8;\nGetVisitor.prototype.visitBinary               =               getBinary;\nGetVisitor.prototype.visitFixedSizeBinary      =      getFixedSizeBinary;\nGetVisitor.prototype.visitDate                 =                 getDate;\nGetVisitor.prototype.visitDateDay              =              getDateDay;\nGetVisitor.prototype.visitDateMillisecond      =      getDateMillisecond;\nGetVisitor.prototype.visitTimestamp            =            getTimestamp;\nGetVisitor.prototype.visitTimestampSecond      =      getTimestampSecond;\nGetVisitor.prototype.visitTimestampMillisecond = getTimestampMillisecond;\nGetVisitor.prototype.visitTimestampMicrosecond = getTimestampMicrosecond;\nGetVisitor.prototype.visitTimestampNanosecond  =  getTimestampNanosecond;\nGetVisitor.prototype.visitTime                 =                 getTime;\nGetVisitor.prototype.visitTimeSecond           =           getTimeSecond;\nGetVisitor.prototype.visitTimeMillisecond      =      getTimeMillisecond;\nGetVisitor.prototype.visitTimeMicrosecond      =      getTimeMicrosecond;\nGetVisitor.prototype.visitTimeNanosecond       =       getTimeNanosecond;\nGetVisitor.prototype.visitDecimal              =              getDecimal;\nGetVisitor.prototype.visitList                 =                 getList;\nGetVisitor.prototype.visitStruct               =               getStruct;\nGetVisitor.prototype.visitUnion                =                getUnion;\nGetVisitor.prototype.visitDenseUnion           =           getDenseUnion;\nGetVisitor.prototype.visitSparseUnion          =          getSparseUnion;\nGetVisitor.prototype.visitDictionary           =           getDictionary;\nGetVisitor.prototype.visitInterval             =             getInterval;\nGetVisitor.prototype.visitIntervalDayTime      =      getIntervalDayTime;\nGetVisitor.prototype.visitIntervalYearMonth    =    getIntervalYearMonth;\nGetVisitor.prototype.visitFixedSizeList        =        getFixedSizeList;\nGetVisitor.prototype.visitMap                  =                  getMap;\n\n/** @ignore */\nexport const instance = new GetVisitor();\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Data } from '../data';\nimport { Type } from '../enum';\nimport { Visitor } from '../visitor';\nimport { VectorType } from '../interfaces';\nimport { getBool, iterateBits } from '../util/bit';\nimport { createElementComparator } from '../util/vector';\nimport {\n    DataType, Dictionary,\n    Bool, Null, Utf8, Binary, Decimal, FixedSizeBinary, List, FixedSizeList, Map_, Struct,\n    Float, Float16, Float32, Float64,\n    Int, Uint8, Uint16, Uint32, Uint64, Int8, Int16, Int32, Int64,\n    Date_, DateDay, DateMillisecond,\n    Interval, IntervalDayTime, IntervalYearMonth,\n    Time, TimeSecond, TimeMillisecond, TimeMicrosecond, TimeNanosecond,\n    Timestamp, TimestampSecond, TimestampMillisecond, TimestampMicrosecond, TimestampNanosecond,\n    Union, DenseUnion, SparseUnion,\n} from '../type';\n\n/** @ignore */\nexport interface IndexOfVisitor extends Visitor {\n    visit<T extends VectorType>  (node: T, value: T['TValue'] | null, index?: number): number;\n    visitMany <T extends VectorType>  (nodes: T[], values: (T['TValue'] | null)[], indices: (number | undefined)[]): number[];\n    getVisitFn<T extends Type>    (node: T): (vector: VectorType<T>, value: VectorType<T>['TValue'] | null, index?: number) => number;\n    getVisitFn<T extends DataType>(node: VectorType<T> | Data<T> | T): (vector: VectorType<T>, value:         T['TValue'] | null, index?: number) => number;\n    visitNull                 <T extends Null>                (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitBool                 <T extends Bool>                (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitInt                  <T extends Int>                 (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitInt8                 <T extends Int8>                (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitInt16                <T extends Int16>               (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitInt32                <T extends Int32>               (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitInt64                <T extends Int64>               (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitUint8                <T extends Uint8>               (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitUint16               <T extends Uint16>              (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitUint32               <T extends Uint32>              (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitUint64               <T extends Uint64>              (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitFloat                <T extends Float>               (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitFloat16              <T extends Float16>             (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitFloat32              <T extends Float32>             (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitFloat64              <T extends Float64>             (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitUtf8                 <T extends Utf8>                (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitBinary               <T extends Binary>              (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitFixedSizeBinary      <T extends FixedSizeBinary>     (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitDate                 <T extends Date_>               (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitDateDay              <T extends DateDay>             (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitDateMillisecond      <T extends DateMillisecond>     (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitTimestamp            <T extends Timestamp>           (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitTimestampSecond      <T extends TimestampSecond>     (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitTimestampMillisecond <T extends TimestampMillisecond>(vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitTimestampMicrosecond <T extends TimestampMicrosecond>(vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitTimestampNanosecond  <T extends TimestampNanosecond> (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitTime                 <T extends Time>                (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitTimeSecond           <T extends TimeSecond>          (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitTimeMillisecond      <T extends TimeMillisecond>     (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitTimeMicrosecond      <T extends TimeMicrosecond>     (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitTimeNanosecond       <T extends TimeNanosecond>      (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitDecimal              <T extends Decimal>             (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitList                 <T extends List>                (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitStruct               <T extends Struct>              (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitUnion                <T extends Union>               (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitDenseUnion           <T extends DenseUnion>          (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitSparseUnion          <T extends SparseUnion>         (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitDictionary           <T extends Dictionary>          (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitInterval             <T extends Interval>            (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitIntervalDayTime      <T extends IntervalDayTime>     (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitIntervalYearMonth    <T extends IntervalYearMonth>   (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitFixedSizeList        <T extends FixedSizeList>       (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitMap                  <T extends Map_>                (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n}\n\n/** @ignore */\nexport class IndexOfVisitor extends Visitor {}\n\n/** @ignore */\nfunction nullIndexOf(vector: VectorType<Null>, searchElement?: null) {\n    // if you're looking for nulls and the vector isn't empty, we've got 'em!\n    return searchElement === null && vector.length > 0 ? 0 : -1;\n}\n\n/** @ignore */\nfunction indexOfNull<T extends DataType>(vector: VectorType<T>, fromIndex?: number): number {\n    const { nullBitmap } = vector;\n    if (!nullBitmap || vector.nullCount <= 0) {\n        return -1;\n    }\n    let i = 0;\n    for (const isValid of iterateBits(nullBitmap, vector.data.offset + (fromIndex || 0), vector.length, nullBitmap, getBool)) {\n        if (!isValid) { return i; }\n        ++i;\n    }\n    return -1;\n}\n\n/** @ignore */\nfunction indexOfValue<T extends DataType>(vector: VectorType<T>, searchElement?: T['TValue'] | null, fromIndex?: number): number {\n    if (searchElement === undefined) { return -1; }\n    if (searchElement === null) { return indexOfNull(vector, fromIndex); }\n    const compare = createElementComparator(searchElement);\n    for (let i = (fromIndex || 0) - 1, n = vector.length; ++i < n;) {\n        if (compare(vector.get(i))) {\n            return i;\n        }\n    }\n    return -1;\n}\n\n/** @ignore */\nfunction indexOfUnion<T extends DataType>(vector: VectorType<T>, searchElement?: T['TValue'] | null, fromIndex?: number): number {\n    // Unions are special -- they do have a nullBitmap, but so can their children.\n    // If the searchElement is null, we don't know whether it came from the Union's\n    // bitmap or one of its childrens'. So we don't interrogate the Union's bitmap,\n    // since that will report the wrong index if a child has a null before the Union.\n    const compare = createElementComparator(searchElement);\n    for (let i = (fromIndex || 0) - 1, n = vector.length; ++i < n;) {\n        if (compare(vector.get(i))) {\n            return i;\n        }\n    }\n    return -1;\n}\n\nIndexOfVisitor.prototype.visitNull                 =  nullIndexOf;\nIndexOfVisitor.prototype.visitBool                 = indexOfValue;\nIndexOfVisitor.prototype.visitInt                  = indexOfValue;\nIndexOfVisitor.prototype.visitInt8                 = indexOfValue;\nIndexOfVisitor.prototype.visitInt16                = indexOfValue;\nIndexOfVisitor.prototype.visitInt32                = indexOfValue;\nIndexOfVisitor.prototype.visitInt64                = indexOfValue;\nIndexOfVisitor.prototype.visitUint8                = indexOfValue;\nIndexOfVisitor.prototype.visitUint16               = indexOfValue;\nIndexOfVisitor.prototype.visitUint32               = indexOfValue;\nIndexOfVisitor.prototype.visitUint64               = indexOfValue;\nIndexOfVisitor.prototype.visitFloat                = indexOfValue;\nIndexOfVisitor.prototype.visitFloat16              = indexOfValue;\nIndexOfVisitor.prototype.visitFloat32              = indexOfValue;\nIndexOfVisitor.prototype.visitFloat64              = indexOfValue;\nIndexOfVisitor.prototype.visitUtf8                 = indexOfValue;\nIndexOfVisitor.prototype.visitBinary               = indexOfValue;\nIndexOfVisitor.prototype.visitFixedSizeBinary      = indexOfValue;\nIndexOfVisitor.prototype.visitDate                 = indexOfValue;\nIndexOfVisitor.prototype.visitDateDay              = indexOfValue;\nIndexOfVisitor.prototype.visitDateMillisecond      = indexOfValue;\nIndexOfVisitor.prototype.visitTimestamp            = indexOfValue;\nIndexOfVisitor.prototype.visitTimestampSecond      = indexOfValue;\nIndexOfVisitor.prototype.visitTimestampMillisecond = indexOfValue;\nIndexOfVisitor.prototype.visitTimestampMicrosecond = indexOfValue;\nIndexOfVisitor.prototype.visitTimestampNanosecond  = indexOfValue;\nIndexOfVisitor.prototype.visitTime                 = indexOfValue;\nIndexOfVisitor.prototype.visitTimeSecond           = indexOfValue;\nIndexOfVisitor.prototype.visitTimeMillisecond      = indexOfValue;\nIndexOfVisitor.prototype.visitTimeMicrosecond      = indexOfValue;\nIndexOfVisitor.prototype.visitTimeNanosecond       = indexOfValue;\nIndexOfVisitor.prototype.visitDecimal              = indexOfValue;\nIndexOfVisitor.prototype.visitList                 = indexOfValue;\nIndexOfVisitor.prototype.visitStruct               = indexOfValue;\nIndexOfVisitor.prototype.visitUnion                = indexOfValue;\nIndexOfVisitor.prototype.visitDenseUnion           = indexOfUnion;\nIndexOfVisitor.prototype.visitSparseUnion          = indexOfUnion;\nIndexOfVisitor.prototype.visitDictionary           = indexOfValue;\nIndexOfVisitor.prototype.visitInterval             = indexOfValue;\nIndexOfVisitor.prototype.visitIntervalDayTime      = indexOfValue;\nIndexOfVisitor.prototype.visitIntervalYearMonth    = indexOfValue;\nIndexOfVisitor.prototype.visitFixedSizeList        = indexOfValue;\nIndexOfVisitor.prototype.visitMap                  = indexOfValue;\n\n/** @ignore */\nexport const instance = new IndexOfVisitor();\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Data } from '../data';\nimport { Type } from '../enum';\nimport { Visitor } from '../visitor';\nimport { VectorType } from '../interfaces';\nimport { iterateBits } from '../util/bit';\nimport { instance as getVisitor } from './get';\nimport {\n    DataType, Dictionary,\n    Bool, Null, Utf8, Binary, Decimal, FixedSizeBinary, List, FixedSizeList, Map_, Struct,\n    Float, Float16, Float32, Float64,\n    Int, Uint8, Uint16, Uint32, Uint64, Int8, Int16, Int32, Int64,\n    Date_, DateDay, DateMillisecond,\n    Interval, IntervalDayTime, IntervalYearMonth,\n    Time, TimeSecond, TimeMillisecond, TimeMicrosecond, TimeNanosecond,\n    Timestamp, TimestampSecond, TimestampMillisecond, TimestampMicrosecond, TimestampNanosecond,\n    Union, DenseUnion, SparseUnion,\n} from '../type';\n\n/** @ignore */\nexport interface IteratorVisitor extends Visitor {\n    visit<T extends VectorType>(node: T): IterableIterator<T['TValue'] | null>;\n    visitMany <T extends VectorType>(nodes: T[]): IterableIterator<T['TValue'] | null>[];\n    getVisitFn<T extends Type>(node: T): (vector: VectorType<T>) => IterableIterator<VectorType<T>['TValue'] | null>;\n    getVisitFn<T extends DataType>(node: VectorType<T> | Data<T> | T): (vector: VectorType<T>) => IterableIterator<VectorType<T>['TValue'] | null>;\n    visitNull                 <T extends Null>                 (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitBool                 <T extends Bool>                 (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitInt                  <T extends Int>                  (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitInt8                 <T extends Int8>                 (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitInt16                <T extends Int16>                (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitInt32                <T extends Int32>                (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitInt64                <T extends Int64>                (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitUint8                <T extends Uint8>                (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitUint16               <T extends Uint16>               (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitUint32               <T extends Uint32>               (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitUint64               <T extends Uint64>               (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitFloat                <T extends Float>                (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitFloat16              <T extends Float16>              (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitFloat32              <T extends Float32>              (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitFloat64              <T extends Float64>              (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitUtf8                 <T extends Utf8>                 (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitBinary               <T extends Binary>               (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitFixedSizeBinary      <T extends FixedSizeBinary>      (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitDate                 <T extends Date_>                (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitDateDay              <T extends DateDay>              (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitDateMillisecond      <T extends DateMillisecond>      (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitTimestamp            <T extends Timestamp>            (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitTimestampSecond      <T extends TimestampSecond>      (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitTimestampMillisecond <T extends TimestampMillisecond> (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitTimestampMicrosecond <T extends TimestampMicrosecond> (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitTimestampNanosecond  <T extends TimestampNanosecond>  (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitTime                 <T extends Time>                 (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitTimeSecond           <T extends TimeSecond>           (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitTimeMillisecond      <T extends TimeMillisecond>      (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitTimeMicrosecond      <T extends TimeMicrosecond>      (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitTimeNanosecond       <T extends TimeNanosecond>       (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitDecimal              <T extends Decimal>              (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitList                 <T extends List>                 (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitStruct               <T extends Struct>               (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitUnion                <T extends Union>                (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitDenseUnion           <T extends DenseUnion>           (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitSparseUnion          <T extends SparseUnion>          (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitDictionary           <T extends Dictionary>           (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitInterval             <T extends Interval>             (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitIntervalDayTime      <T extends IntervalDayTime>      (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitIntervalYearMonth    <T extends IntervalYearMonth>    (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitFixedSizeList        <T extends FixedSizeList>        (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitMap                  <T extends Map_>                 (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n}\n\n/** @ignore */\nexport class IteratorVisitor extends Visitor {}\n\n/** @ignore */\nfunction nullableIterator<T extends DataType>(vector: VectorType<T>): IterableIterator<T['TValue'] | null> {\n    const getFn = getVisitor.getVisitFn(vector);\n    return iterateBits<T['TValue'] | null>(\n        vector.nullBitmap, vector.offset, vector.length, vector,\n        (vec: VectorType<T>, idx: number, nullByte: number, nullBit: number) =>\n            ((nullByte & 1 << nullBit) !== 0) ? getFn(vec, idx) : null\n    );\n}\n\n/** @ignore */\nfunction vectorIterator<T extends DataType>(vector: VectorType<T>): IterableIterator<T['TValue'] | null> {\n\n    // If nullable, iterate manually\n    if (vector.nullCount > 0) {\n        return nullableIterator<T>(vector);\n    }\n\n    const { type, typeId, length } = vector;\n\n    // Fast case, defer to native iterators if possible\n    if (vector.stride === 1 && (\n        (typeId === Type.Timestamp) ||\n        (typeId === Type.Int && (type as Int).bitWidth !== 64) ||\n        (typeId === Type.Time && (type as Time).bitWidth !== 64) ||\n        (typeId === Type.Float && (type as Float).precision > 0 /* Precision.HALF */)\n    )) {\n        return vector.values.subarray(0, length)[Symbol.iterator]();\n    }\n\n    // Otherwise, iterate manually\n    return (function* (getFn) {\n        for (let index = -1; ++index < length;) {\n            yield getFn(vector, index);\n        }\n    })(getVisitor.getVisitFn(vector));\n}\n\nIteratorVisitor.prototype.visitNull                 = vectorIterator;\nIteratorVisitor.prototype.visitBool                 = vectorIterator;\nIteratorVisitor.prototype.visitInt                  = vectorIterator;\nIteratorVisitor.prototype.visitInt8                 = vectorIterator;\nIteratorVisitor.prototype.visitInt16                = vectorIterator;\nIteratorVisitor.prototype.visitInt32                = vectorIterator;\nIteratorVisitor.prototype.visitInt64                = vectorIterator;\nIteratorVisitor.prototype.visitUint8                = vectorIterator;\nIteratorVisitor.prototype.visitUint16               = vectorIterator;\nIteratorVisitor.prototype.visitUint32               = vectorIterator;\nIteratorVisitor.prototype.visitUint64               = vectorIterator;\nIteratorVisitor.prototype.visitFloat                = vectorIterator;\nIteratorVisitor.prototype.visitFloat16              = vectorIterator;\nIteratorVisitor.prototype.visitFloat32              = vectorIterator;\nIteratorVisitor.prototype.visitFloat64              = vectorIterator;\nIteratorVisitor.prototype.visitUtf8                 = vectorIterator;\nIteratorVisitor.prototype.visitBinary               = vectorIterator;\nIteratorVisitor.prototype.visitFixedSizeBinary      = vectorIterator;\nIteratorVisitor.prototype.visitDate                 = vectorIterator;\nIteratorVisitor.prototype.visitDateDay              = vectorIterator;\nIteratorVisitor.prototype.visitDateMillisecond      = vectorIterator;\nIteratorVisitor.prototype.visitTimestamp            = vectorIterator;\nIteratorVisitor.prototype.visitTimestampSecond      = vectorIterator;\nIteratorVisitor.prototype.visitTimestampMillisecond = vectorIterator;\nIteratorVisitor.prototype.visitTimestampMicrosecond = vectorIterator;\nIteratorVisitor.prototype.visitTimestampNanosecond  = vectorIterator;\nIteratorVisitor.prototype.visitTime                 = vectorIterator;\nIteratorVisitor.prototype.visitTimeSecond           = vectorIterator;\nIteratorVisitor.prototype.visitTimeMillisecond      = vectorIterator;\nIteratorVisitor.prototype.visitTimeMicrosecond      = vectorIterator;\nIteratorVisitor.prototype.visitTimeNanosecond       = vectorIterator;\nIteratorVisitor.prototype.visitDecimal              = vectorIterator;\nIteratorVisitor.prototype.visitList                 = vectorIterator;\nIteratorVisitor.prototype.visitStruct               = vectorIterator;\nIteratorVisitor.prototype.visitUnion                = vectorIterator;\nIteratorVisitor.prototype.visitDenseUnion           = vectorIterator;\nIteratorVisitor.prototype.visitSparseUnion          = vectorIterator;\nIteratorVisitor.prototype.visitDictionary           = vectorIterator;\nIteratorVisitor.prototype.visitInterval             = vectorIterator;\nIteratorVisitor.prototype.visitIntervalDayTime      = vectorIterator;\nIteratorVisitor.prototype.visitIntervalYearMonth    = vectorIterator;\nIteratorVisitor.prototype.visitFixedSizeList        = vectorIterator;\nIteratorVisitor.prototype.visitMap                  = vectorIterator;\n\n/** @ignore */\nexport const instance = new IteratorVisitor();\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Data } from '../data';\nimport { Type } from '../enum';\nimport { Visitor } from '../visitor';\nimport { VectorType } from '../interfaces';\nimport { instance as iteratorVisitor } from './iterator';\nimport {\n    DataType, Dictionary,\n    Bool, Null, Utf8, Binary, Decimal, FixedSizeBinary, List, FixedSizeList, Map_, Struct,\n    Float, Float16, Float32, Float64,\n    Int, Uint8, Uint16, Uint32, Uint64, Int8, Int16, Int32, Int64,\n    Date_, DateDay, DateMillisecond,\n    Interval, IntervalDayTime, IntervalYearMonth,\n    Time, TimeSecond, TimeMillisecond, TimeMicrosecond, TimeNanosecond,\n    Timestamp, TimestampSecond, TimestampMillisecond, TimestampMicrosecond, TimestampNanosecond,\n    Union, DenseUnion, SparseUnion,\n} from '../type';\n\n/** @ignore */\nexport interface ToArrayVisitor extends Visitor {\n    visit<T extends VectorType>(node: T): T['TArray'];\n    visitMany<T extends VectorType>(nodes: T[]): T['TArray'][];\n    getVisitFn<T extends Type>(node: T): (vector: VectorType<T>) => VectorType<T>['TArray'];\n    getVisitFn<T extends DataType>(node: VectorType<T> | Data<T> | T): (vector: VectorType<T>) => VectorType<T>['TArray'];\n    visitNull                                    <T extends Null>                (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitBool                                    <T extends Bool>                (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitInt                                     <T extends Int>                 (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitInt8                                    <T extends Int8>                (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitInt16                                   <T extends Int16>               (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitInt32                                   <T extends Int32>               (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitInt64                                   <T extends Int64>               (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitUint8                                   <T extends Uint8>               (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitUint16                                  <T extends Uint16>              (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitUint32                                  <T extends Uint32>              (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitUint64                                  <T extends Uint64>              (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitFloat                                   <T extends Float>               (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitFloat16                                 <T extends Float16>             (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitFloat32                                 <T extends Float32>             (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitFloat64                                 <T extends Float64>             (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitUtf8                                    <T extends Utf8>                (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitBinary                                  <T extends Binary>              (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitFixedSizeBinary                         <T extends FixedSizeBinary>     (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitDate                                    <T extends Date_>               (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitDateDay                                 <T extends DateDay>             (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitDateMillisecond                         <T extends DateMillisecond>     (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitTimestamp                               <T extends Timestamp>           (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitTimestampSecond                         <T extends TimestampSecond>     (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitTimestampMillisecond                    <T extends TimestampMillisecond>(vector: VectorType<T>): VectorType<T>['TArray'];\n    visitTimestampMicrosecond                    <T extends TimestampMicrosecond>(vector: VectorType<T>): VectorType<T>['TArray'];\n    visitTimestampNanosecond                     <T extends TimestampNanosecond> (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitTime                                    <T extends Time>                (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitTimeSecond                              <T extends TimeSecond>          (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitTimeMillisecond                         <T extends TimeMillisecond>     (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitTimeMicrosecond                         <T extends TimeMicrosecond>     (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitTimeNanosecond                          <T extends TimeNanosecond>      (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitDecimal                                 <T extends Decimal>             (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitList                <R extends DataType, T extends List<R>>             (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitStruct                                  <T extends Struct>              (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitUnion                                   <T extends Union>               (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitDenseUnion                              <T extends DenseUnion>          (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitSparseUnion                             <T extends SparseUnion>         (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitDictionary          <R extends DataType, T extends Dictionary<R>>       (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitInterval                                <T extends Interval>            (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitIntervalDayTime                         <T extends IntervalDayTime>     (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitIntervalYearMonth                       <T extends IntervalYearMonth>   (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitFixedSizeList       <R extends DataType, T extends FixedSizeList<R>>    (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitMap                                     <T extends Map_>                (vector: VectorType<T>): VectorType<T>['TArray'];\n}\n\n/** @ignore */\nexport class ToArrayVisitor extends Visitor {}\n\n/** @ignore */\nfunction arrayOfVector<T extends DataType>(vector: VectorType<T>): T['TArray'] {\n\n    const { type, length, stride } = vector;\n\n    // Fast case, return subarray if possible\n    switch (type.typeId) {\n        case Type.Int:\n        case Type.Float: case Type.Decimal:\n        case Type.Time: case Type.Timestamp:\n            return vector.values.subarray(0, length * stride);\n    }\n\n    // Otherwise if not primitive, slow copy\n    return [...iteratorVisitor.visit(vector)] as T['TArray'];\n}\n\nToArrayVisitor.prototype.visitNull                 = arrayOfVector;\nToArrayVisitor.prototype.visitBool                 = arrayOfVector;\nToArrayVisitor.prototype.visitInt                  = arrayOfVector;\nToArrayVisitor.prototype.visitInt8                 = arrayOfVector;\nToArrayVisitor.prototype.visitInt16                = arrayOfVector;\nToArrayVisitor.prototype.visitInt32                = arrayOfVector;\nToArrayVisitor.prototype.visitInt64                = arrayOfVector;\nToArrayVisitor.prototype.visitUint8                = arrayOfVector;\nToArrayVisitor.prototype.visitUint16               = arrayOfVector;\nToArrayVisitor.prototype.visitUint32               = arrayOfVector;\nToArrayVisitor.prototype.visitUint64               = arrayOfVector;\nToArrayVisitor.prototype.visitFloat                = arrayOfVector;\nToArrayVisitor.prototype.visitFloat16              = arrayOfVector;\nToArrayVisitor.prototype.visitFloat32              = arrayOfVector;\nToArrayVisitor.prototype.visitFloat64              = arrayOfVector;\nToArrayVisitor.prototype.visitUtf8                 = arrayOfVector;\nToArrayVisitor.prototype.visitBinary               = arrayOfVector;\nToArrayVisitor.prototype.visitFixedSizeBinary      = arrayOfVector;\nToArrayVisitor.prototype.visitDate                 = arrayOfVector;\nToArrayVisitor.prototype.visitDateDay              = arrayOfVector;\nToArrayVisitor.prototype.visitDateMillisecond      = arrayOfVector;\nToArrayVisitor.prototype.visitTimestamp            = arrayOfVector;\nToArrayVisitor.prototype.visitTimestampSecond      = arrayOfVector;\nToArrayVisitor.prototype.visitTimestampMillisecond = arrayOfVector;\nToArrayVisitor.prototype.visitTimestampMicrosecond = arrayOfVector;\nToArrayVisitor.prototype.visitTimestampNanosecond  = arrayOfVector;\nToArrayVisitor.prototype.visitTime                 = arrayOfVector;\nToArrayVisitor.prototype.visitTimeSecond           = arrayOfVector;\nToArrayVisitor.prototype.visitTimeMillisecond      = arrayOfVector;\nToArrayVisitor.prototype.visitTimeMicrosecond      = arrayOfVector;\nToArrayVisitor.prototype.visitTimeNanosecond       = arrayOfVector;\nToArrayVisitor.prototype.visitDecimal              = arrayOfVector;\nToArrayVisitor.prototype.visitList                 = arrayOfVector;\nToArrayVisitor.prototype.visitStruct               = arrayOfVector;\nToArrayVisitor.prototype.visitUnion                = arrayOfVector;\nToArrayVisitor.prototype.visitDenseUnion           = arrayOfVector;\nToArrayVisitor.prototype.visitSparseUnion          = arrayOfVector;\nToArrayVisitor.prototype.visitDictionary           = arrayOfVector;\nToArrayVisitor.prototype.visitInterval             = arrayOfVector;\nToArrayVisitor.prototype.visitIntervalDayTime      = arrayOfVector;\nToArrayVisitor.prototype.visitIntervalYearMonth    = arrayOfVector;\nToArrayVisitor.prototype.visitFixedSizeList        = arrayOfVector;\nToArrayVisitor.prototype.visitMap                  = arrayOfVector;\n\n/** @ignore */\nexport const instance = new ToArrayVisitor();\n","/* istanbul ignore file */\n\n// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Data } from '../data';\nimport { Visitor } from '../visitor';\nimport { VectorType } from '../interfaces';\nimport { Type, TimeUnit } from '../enum';\nimport { Schema, Field } from '../schema';\nimport {\n    DataType, Dictionary,\n    Float, Int, Date_, Interval, Time, Timestamp,\n    Bool, Null, Utf8, Binary, Decimal, FixedSizeBinary,\n    List, FixedSizeList, Map_, Struct, Union,\n} from '../type';\n\n/** @ignore */ const sum = (x: number, y: number) => x + y;\n/** @ignore */ const variableWidthColumnErrorMessage = (type: DataType) => `Cannot compute the byte width of variable-width column ${type}`;\n\n/** @ignore */\nexport interface ByteWidthVisitor extends Visitor {\n    visit<T extends DataType>(node: T): number;\n    visitMany<T extends DataType>(nodes: T[]): number[];\n    getVisitFn<T extends Type>    (node: T): (type: DataType<T>) => number;\n    getVisitFn<T extends DataType>(node: VectorType<T> | Data<T> | T): (type: T) => number;\n}\n\n/** @ignore */\nexport class ByteWidthVisitor extends Visitor {\n    public visitNull            (____: Null            ) { return 0; }\n    public visitInt             (type: Int             ) { return type.bitWidth / 8; }\n    public visitFloat           (type: Float           ) { return type.ArrayType.BYTES_PER_ELEMENT; }\n    public visitBinary          (type: Binary          ) { throw new Error(variableWidthColumnErrorMessage(type)); }\n    public visitUtf8            (type: Utf8            ) { throw new Error(variableWidthColumnErrorMessage(type)); }\n    public visitBool            (____: Bool            ) { return 1 / 8; }\n    public visitDecimal         (____: Decimal         ) { return 16; }\n    public visitDate            (type: Date_           ) { return (type.unit + 1) * 4; }\n    public visitTime            (type: Time            ) { return type.bitWidth / 8; }\n    public visitTimestamp       (type: Timestamp       ) { return type.unit === TimeUnit.SECOND ? 4 : 8; }\n    public visitInterval        (type: Interval        ) { return (type.unit + 1) * 4; }\n    public visitList            (type: List            ) { throw new Error(variableWidthColumnErrorMessage(type)); }\n    public visitStruct          (type: Struct          ) { return this.visitFields(type.children).reduce(sum, 0); }\n    public visitUnion           (type: Union           ) { return this.visitFields(type.children).reduce(sum, 0); }\n    public visitFixedSizeBinary (type: FixedSizeBinary ) { return type.byteWidth; }\n    public visitFixedSizeList   (type: FixedSizeList   ) { return type.listSize * this.visitFields(type.children).reduce(sum, 0); }\n    public visitMap             (type: Map_            ) { return this.visitFields(type.children).reduce(sum, 0); }\n    public visitDictionary      (type: Dictionary      ) { return this.visit(type.indices); }\n    public visitFields          (fields: Field[]       ) { return (fields || []).map((field) => this.visit(field.type)); }\n    public visitSchema          (schema: Schema        ) { return this.visitFields(schema.fields).reduce(sum, 0); }\n}\n\n/** @ignore */\nexport const instance = new ByteWidthVisitor();\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Data } from '../data';\nimport { Type } from '../enum';\nimport { DataType } from '../type';\nimport { Visitor } from '../visitor';\nimport { VectorType, VectorCtor } from '../interfaces';\n\nimport { BinaryVector } from '../vector/binary';\nimport { BoolVector } from '../vector/bool';\nimport { DateVector, DateDayVector, DateMillisecondVector } from '../vector/date';\nimport { DecimalVector } from '../vector/decimal';\nimport { DictionaryVector } from '../vector/dictionary';\nimport { FixedSizeBinaryVector } from '../vector/fixedsizebinary';\nimport { FixedSizeListVector } from '../vector/fixedsizelist';\nimport { FloatVector, Float16Vector, Float32Vector, Float64Vector } from '../vector/float';\nimport { IntervalVector, IntervalDayTimeVector, IntervalYearMonthVector } from '../vector/interval';\nimport { IntVector, Int8Vector, Int16Vector, Int32Vector, Int64Vector, Uint8Vector, Uint16Vector, Uint32Vector, Uint64Vector } from '../vector/int';\nimport { ListVector } from '../vector/list';\nimport { MapVector } from '../vector/map';\nimport { NullVector } from '../vector/null';\nimport { StructVector } from '../vector/struct';\nimport { TimestampVector, TimestampSecondVector, TimestampMillisecondVector, TimestampMicrosecondVector, TimestampNanosecondVector } from '../vector/timestamp';\nimport { TimeVector, TimeSecondVector, TimeMillisecondVector, TimeMicrosecondVector, TimeNanosecondVector } from '../vector/time';\nimport { UnionVector, DenseUnionVector, SparseUnionVector } from '../vector/union';\nimport { Utf8Vector } from '../vector/utf8';\n\n/** @ignore */\nexport interface GetVectorConstructor extends Visitor {\n    visit<T extends Type>(node: T): VectorCtor<T>;\n    visitMany <T extends Type>(nodes: T[]): VectorCtor<T>[];\n    getVisitFn<T extends Type>(node: T): () => VectorCtor<T>;\n    getVisitFn<T extends DataType>(node: VectorType<T> | Data<T> | T): () => VectorCtor<T>;\n}\n\n/** @ignore */\nexport class GetVectorConstructor extends Visitor {\n    public visitNull                 () { return NullVector; }\n    public visitBool                 () { return BoolVector; }\n    public visitInt                  () { return IntVector; }\n    public visitInt8                 () { return Int8Vector; }\n    public visitInt16                () { return Int16Vector; }\n    public visitInt32                () { return Int32Vector; }\n    public visitInt64                () { return Int64Vector; }\n    public visitUint8                () { return Uint8Vector; }\n    public visitUint16               () { return Uint16Vector; }\n    public visitUint32               () { return Uint32Vector; }\n    public visitUint64               () { return Uint64Vector; }\n    public visitFloat                () { return FloatVector; }\n    public visitFloat16              () { return Float16Vector; }\n    public visitFloat32              () { return Float32Vector; }\n    public visitFloat64              () { return Float64Vector; }\n    public visitUtf8                 () { return Utf8Vector; }\n    public visitBinary               () { return BinaryVector; }\n    public visitFixedSizeBinary      () { return FixedSizeBinaryVector; }\n    public visitDate                 () { return DateVector; }\n    public visitDateDay              () { return DateDayVector; }\n    public visitDateMillisecond      () { return DateMillisecondVector; }\n    public visitTimestamp            () { return TimestampVector; }\n    public visitTimestampSecond      () { return TimestampSecondVector; }\n    public visitTimestampMillisecond () { return TimestampMillisecondVector; }\n    public visitTimestampMicrosecond () { return TimestampMicrosecondVector; }\n    public visitTimestampNanosecond  () { return TimestampNanosecondVector; }\n    public visitTime                 () { return TimeVector; }\n    public visitTimeSecond           () { return TimeSecondVector; }\n    public visitTimeMillisecond      () { return TimeMillisecondVector; }\n    public visitTimeMicrosecond      () { return TimeMicrosecondVector; }\n    public visitTimeNanosecond       () { return TimeNanosecondVector; }\n    public visitDecimal              () { return DecimalVector; }\n    public visitList                 () { return ListVector; }\n    public visitStruct               () { return StructVector; }\n    public visitUnion                () { return UnionVector; }\n    public visitDenseUnion           () { return DenseUnionVector; }\n    public visitSparseUnion          () { return SparseUnionVector; }\n    public visitDictionary           () { return DictionaryVector; }\n    public visitInterval             () { return IntervalVector; }\n    public visitIntervalDayTime      () { return IntervalDayTimeVector; }\n    public visitIntervalYearMonth    () { return IntervalYearMonthVector; }\n    public visitFixedSizeList        () { return FixedSizeListVector; }\n    public visitMap                  () { return MapVector; }\n}\n\n/** @ignore */\nexport const instance = new GetVectorConstructor();\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nexport { Vector } from '../vector';\nexport { BaseVector } from './base';\nexport { BinaryVector } from './binary';\nexport { BoolVector } from './bool';\nexport { Chunked } from './chunked';\nexport { DateVector, DateDayVector, DateMillisecondVector } from './date';\nexport { DecimalVector } from './decimal';\nexport { DictionaryVector } from './dictionary';\nexport { FixedSizeBinaryVector } from './fixedsizebinary';\nexport { FixedSizeListVector } from './fixedsizelist';\nexport { FloatVector, Float16Vector, Float32Vector, Float64Vector } from './float';\nexport { IntervalVector, IntervalDayTimeVector, IntervalYearMonthVector } from './interval';\nexport { IntVector, Int8Vector, Int16Vector, Int32Vector, Int64Vector, Uint8Vector, Uint16Vector, Uint32Vector, Uint64Vector } from './int';\nexport { ListVector } from './list';\nexport { MapVector } from './map';\nexport { NullVector } from './null';\nexport { StructVector } from './struct';\nexport { TimestampVector, TimestampSecondVector, TimestampMillisecondVector, TimestampMicrosecondVector, TimestampNanosecondVector } from './timestamp';\nexport { TimeVector, TimeSecondVector, TimeMillisecondVector, TimeMicrosecondVector, TimeNanosecondVector } from './time';\nexport { UnionVector, DenseUnionVector, SparseUnionVector } from './union';\nexport { Utf8Vector } from './utf8';\nexport { MapRow, StructRow } from './row';\n\nimport * as fn from '../util/fn';\nimport { Data } from '../data';\nimport { Type } from '../enum';\nimport { Vector } from '../vector';\nimport { DataType } from '../type';\nimport { Chunked } from './chunked';\nimport { BaseVector } from './base';\nimport { setBool } from '../util/bit';\nimport { isIterable, isAsyncIterable } from '../util/compat';\nimport { Builder, IterableBuilderOptions } from '../builder';\nimport { VectorType as V, VectorCtorArgs } from '../interfaces';\nimport { instance as getVisitor } from '../visitor/get';\nimport { instance as setVisitor } from '../visitor/set';\nimport { instance as indexOfVisitor } from '../visitor/indexof';\nimport { instance as toArrayVisitor } from '../visitor/toarray';\nimport { instance as iteratorVisitor } from '../visitor/iterator';\nimport { instance as byteWidthVisitor } from '../visitor/bytewidth';\nimport { instance as getVectorConstructor } from '../visitor/vectorctor';\n\ndeclare module '../vector' {\n    namespace Vector {\n        export { newVector as new };\n        export { vectorFrom as from };\n    }\n}\n\ndeclare module './base' {\n    namespace BaseVector {\n        export { vectorFrom as from };\n    }\n    interface BaseVector<T extends DataType> {\n        get(index: number): T['TValue'] | null;\n        set(index: number, value: T['TValue'] | null): void;\n        indexOf(value: T['TValue'] | null, fromIndex?: number): number;\n        toArray(): T['TArray'];\n        getByteWidth(): number;\n        [Symbol.iterator](): IterableIterator<T['TValue'] | null>;\n    }\n}\n\n/** @nocollapse */\nVector.new = newVector;\n\n/** @nocollapse */\nVector.from = vectorFrom;\n\n/** @ignore */\nfunction newVector<T extends DataType>(data: Data<T>, ...args: VectorCtorArgs<V<T>>): V<T> {\n    return new (getVectorConstructor.getVisitFn<T>(data)())(data, ...args) as V<T>;\n}\n\n/** @ignore */\nexport interface VectorBuilderOptions<T extends DataType, TNull = any> extends IterableBuilderOptions<T, TNull> { values: Iterable<T['TValue'] | TNull>; }\n/** @ignore */\nexport interface VectorBuilderOptionsAsync<T extends DataType, TNull = any> extends IterableBuilderOptions<T, TNull> { values: AsyncIterable<T['TValue'] | TNull>; }\n\n/** @ignore */\nexport function vectorFromValuesWithType<T extends DataType, TNull = any>(newDataType: () => T, input: Iterable<T['TValue'] | TNull> | AsyncIterable<T['TValue'] | TNull> | VectorBuilderOptions<T, TNull> | VectorBuilderOptionsAsync<T, TNull>) {\n    if (isIterable(input)) {\n        return Vector.from({ 'nullValues': [null, undefined], type: newDataType(), 'values': input }) as V<T>;\n    } else if (isAsyncIterable(input)) {\n        return Vector.from({ 'nullValues': [null, undefined], type: newDataType(), 'values': input }) as Promise<V<T>>;\n    }\n    const {\n        'values': values = [],\n        'type': type = newDataType(),\n        'nullValues': nullValues = [null, undefined],\n    } = { ...input };\n    return isIterable(values)\n        ? Vector.from({ nullValues, ...input, type } as VectorBuilderOptions<T, TNull>)\n        : Vector.from({ nullValues, ...input, type } as VectorBuilderOptionsAsync<T, TNull>);\n}\n\n/** @ignore */\nfunction vectorFrom<T extends DataType = any, TNull = any>(input: VectorBuilderOptions<T, TNull>): Vector<T>;\nfunction vectorFrom<T extends DataType = any, TNull = any>(input: VectorBuilderOptionsAsync<T, TNull>): Promise<Vector<T>>;\nfunction vectorFrom<T extends DataType = any, TNull = any>(input: VectorBuilderOptions<T, TNull> | VectorBuilderOptionsAsync<T, TNull>) {\n    const { 'values': values = [], ...options } = { 'nullValues': [null, undefined], ...input } as VectorBuilderOptions<T, TNull> | VectorBuilderOptionsAsync<T, TNull>;\n    if (isIterable<T['TValue'] | TNull>(values)) {\n        const chunks = [...Builder.throughIterable(options)(values)];\n        return chunks.length === 1 ? chunks[0] : Chunked.concat<T>(chunks);\n    }\n    return (async (chunks: V<T>[]) => {\n        const transform = Builder.throughAsyncIterable(options);\n        for await (const chunk of transform(values)) {\n            chunks.push(chunk);\n        }\n        return chunks.length === 1 ? chunks[0] : Chunked.concat<T>(chunks);\n    })([]);\n}\n\n//\n// We provide the following method implementations for code navigability purposes only.\n// They're overridden at runtime below with the specific Visitor implementation for each type,\n// short-circuiting the usual Visitor traversal and reducing intermediate lookups and calls.\n// This comment is here to remind you to not set breakpoints in these function bodies, or to inform\n// you why the breakpoints you have already set are not being triggered. Have a great day!\n//\n\nBaseVector.prototype.get = function baseVectorGet<T extends DataType>(this: BaseVector<T>, index: number): T['TValue'] | null {\n    return getVisitor.visit(this, index);\n};\n\nBaseVector.prototype.set = function baseVectorSet<T extends DataType>(this: BaseVector<T>, index: number, value: T['TValue'] | null): void {\n    return setVisitor.visit(this, index, value);\n};\n\nBaseVector.prototype.indexOf = function baseVectorIndexOf<T extends DataType>(this: BaseVector<T>, value: T['TValue'] | null, fromIndex?: number): number {\n    return indexOfVisitor.visit(this, value, fromIndex);\n};\n\nBaseVector.prototype.toArray = function baseVectorToArray<T extends DataType>(this: BaseVector<T>): T['TArray'] {\n    return toArrayVisitor.visit(this);\n};\n\nBaseVector.prototype.getByteWidth = function baseVectorGetByteWidth<T extends DataType>(this: BaseVector<T>): number {\n    return byteWidthVisitor.visit(this.type);\n};\n\nBaseVector.prototype[Symbol.iterator] = function baseVectorSymbolIterator<T extends DataType>(this: BaseVector<T>): IterableIterator<T['TValue'] | null> {\n    return iteratorVisitor.visit(this);\n};\n\n(BaseVector.prototype as any)._bindDataAccessors = bindBaseVectorDataAccessors;\n\n// Perf: bind and assign the operator Visitor methods to each of the Vector subclasses for each Type\n(Object.keys(Type) as any[])\n    .map((T: any) => Type[T] as any)\n    .filter((T: any): T is Type => typeof T === 'number')\n    .filter((typeId) => typeId !== Type.NONE)\n    .forEach((typeId) => {\n        const VectorCtor = getVectorConstructor.visit(typeId);\n        VectorCtor.prototype['get'] = fn.partial1(getVisitor.getVisitFn(typeId));\n        VectorCtor.prototype['set'] = fn.partial2(setVisitor.getVisitFn(typeId));\n        VectorCtor.prototype['indexOf'] = fn.partial2(indexOfVisitor.getVisitFn(typeId));\n        VectorCtor.prototype['toArray'] = fn.partial0(toArrayVisitor.getVisitFn(typeId));\n        VectorCtor.prototype['getByteWidth'] = partialType0(byteWidthVisitor.getVisitFn(typeId));\n        VectorCtor.prototype[Symbol.iterator] = fn.partial0(iteratorVisitor.getVisitFn(typeId));\n    });\n\n/** @ignore */\nfunction partialType0<T extends Vector>(visit: (node: T['type']) => any) {\n    return function(this: T) { return visit(this.type); };\n}\n\n/** @ignore */\nfunction wrapNullableGet<T extends DataType, V extends Vector<T>, F extends (i: number) => any>(fn: F): (...args: Parameters<F>) => ReturnType<F> {\n    return function(this: V, i: number) { return this.isValid(i) ? fn.call(this, i) : null; };\n}\n\n/** @ignore */\nfunction wrapNullableSet<T extends DataType, V extends BaseVector<T>, F extends (i: number, a: any) => void>(fn: F): (...args: Parameters<F>) => void {\n    return function(this: V, i: number, a: any) {\n        if (setBool(this.nullBitmap, this.offset + i, !(a === null || a === undefined))) {\n            fn.call(this, i, a);\n        }\n    };\n}\n\n/** @ignore */\nfunction bindBaseVectorDataAccessors<T extends DataType>(this: BaseVector<T>) {\n    const nullBitmap = this.nullBitmap;\n    if (nullBitmap && nullBitmap.byteLength > 0) {\n        this.get = wrapNullableGet(this.get);\n        this.set = wrapNullableSet(this.set);\n    }\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Data } from './data';\nimport { Column } from './column';\nimport { Schema, Field } from './schema';\nimport { RecordBatch, _InternalEmptyPlaceholderRecordBatch } from './recordbatch';\nimport { DataFrame } from './compute/dataframe';\nimport { RecordBatchReader } from './ipc/reader';\nimport { DataType, RowLike, Struct } from './type';\nimport { selectColumnArgs, selectArgs } from './util/args';\nimport { Clonable, Sliceable, Applicative } from './vector';\nimport { isPromise, isIterable, isAsyncIterable } from './util/compat';\nimport { RecordBatchFileWriter, RecordBatchStreamWriter } from './ipc/writer';\nimport { distributeColumnsIntoRecordBatches, distributeVectorsIntoRecordBatches } from './util/recordbatch';\nimport { Vector, Chunked, StructVector, VectorBuilderOptions, VectorBuilderOptionsAsync } from './vector/index';\n\ntype VectorMap = { [key: string]: Vector };\ntype Fields<T extends { [key: string]: DataType }> = (keyof T)[] | Field<T[keyof T]>[];\ntype ChildData<T extends { [key: string]: DataType }> = Data<T[keyof T]>[] | Vector<T[keyof T]>[];\ntype Columns<T extends { [key: string]: DataType }> = Column<T[keyof T]>[] | Column<T[keyof T]>[][];\n\nexport interface Table<T extends { [key: string]: DataType } = any> {\n\n    get(index: number): Struct<T>['TValue'];\n    [Symbol.iterator](): IterableIterator<RowLike<T>>;\n\n    slice(begin?: number, end?: number): Table<T>;\n    concat(...others: Vector<Struct<T>>[]): Table<T>;\n    clone(chunks?: RecordBatch<T>[], offsets?: Uint32Array): Table<T>;\n\n    scan(next: import('./compute/dataframe').NextFunc, bind?: import('./compute/dataframe').BindFunc): void;\n    scanReverse(next: import('./compute/dataframe').NextFunc, bind?: import('./compute/dataframe').BindFunc): void;\n    countBy(name: import('./compute/predicate').Col | string): import('./compute/dataframe').CountByResult;\n    filter(predicate: import('./compute/predicate').Predicate): import('./compute/dataframe').FilteredDataFrame<T>;\n}\n\nexport class Table<T extends { [key: string]: DataType } = any>\n    extends Chunked<Struct<T>>\n    implements DataFrame<T>,\n               Clonable<Table<T>>,\n               Sliceable<Table<T>>,\n               Applicative<Struct<T>, Table<T>> {\n\n    /** @nocollapse */\n    public static empty<T extends { [key: string]: DataType } = {}>(schema = new Schema<T>([])) { return new Table<T>(schema, []); }\n\n    public static from(): Table<{}>;\n    public static from<T extends { [key: string]: DataType } = any>(source: RecordBatchReader<T>): Table<T>;\n    public static from<T extends { [key: string]: DataType } = any>(source: import('./ipc/reader').FromArg0): Table<T>;\n    public static from<T extends { [key: string]: DataType } = any>(source: import('./ipc/reader').FromArg2): Table<T>;\n    public static from<T extends { [key: string]: DataType } = any>(source: import('./ipc/reader').FromArg1): Promise<Table<T>>;\n    public static from<T extends { [key: string]: DataType } = any>(source: import('./ipc/reader').FromArg3): Promise<Table<T>>;\n    public static from<T extends { [key: string]: DataType } = any>(source: import('./ipc/reader').FromArg4): Promise<Table<T>>;\n    public static from<T extends { [key: string]: DataType } = any>(source: import('./ipc/reader').FromArg5): Promise<Table<T>>;\n    public static from<T extends { [key: string]: DataType } = any>(source: PromiseLike<RecordBatchReader<T>>): Promise<Table<T>>;\n    public static from<T extends { [key: string]: DataType } = any, TNull = any>(options: VectorBuilderOptions<Struct<T>, TNull>): Table<T>;\n    public static from<T extends { [key: string]: DataType } = any, TNull = any>(options: VectorBuilderOptionsAsync<Struct<T>, TNull>): Promise<Table<T>>;\n    /** @nocollapse */\n    public static from<T extends { [key: string]: DataType } = any, TNull = any>(input?: any) {\n\n        if (!input) { return Table.empty(); }\n\n        if (typeof input === 'object') {\n            let table = isIterable(input['values']) ? tableFromIterable<T, TNull>(input)\n                 : isAsyncIterable(input['values']) ? tableFromAsyncIterable<T, TNull>(input)\n                                                    : null;\n            if (table !== null) { return table; }\n        }\n\n        let reader = RecordBatchReader.from<T>(input) as RecordBatchReader<T> | Promise<RecordBatchReader<T>>;\n\n        if (isPromise<RecordBatchReader<T>>(reader)) {\n            return (async () => await Table.from(await reader))();\n        }\n        if (reader.isSync() && (reader = reader.open())) {\n            return !reader.schema ? Table.empty() : new Table<T>(reader.schema, [...reader]);\n        }\n        return (async (opening) => {\n            const reader = await opening;\n            const schema = reader.schema;\n            const batches: RecordBatch[] = [];\n            if (schema) {\n                for await (let batch of reader) {\n                    batches.push(batch);\n                }\n                return new Table<T>(schema, batches);\n            }\n            return Table.empty();\n        })(reader.open());\n    }\n\n    /** @nocollapse */\n    public static async fromAsync<T extends { [key: string]: DataType } = any>(source: import('./ipc/reader').FromArgs): Promise<Table<T>> {\n        return await Table.from<T>(source as any);\n    }\n\n    /** @nocollapse */\n    public static fromStruct<T extends { [key: string]: DataType } = any>(vector: Vector<Struct<T>>) {\n        return Table.new<T>(vector.data.childData as Data<T[keyof T]>[], vector.type.children);\n    }\n\n    /**\n     * @summary Create a new Table from a collection of Columns or Vectors,\n     * with an optional list of names or Fields.\n     *\n     *\n     * `Table.new` accepts an Object of\n     * Columns or Vectors, where the keys will be used as the field names\n     * for the Schema:\n     * ```ts\n     * const i32s = Int32Vector.from([1, 2, 3]);\n     * const f32s = Float32Vector.from([.1, .2, .3]);\n     * const table = Table.new({ i32: i32s, f32: f32s });\n     * assert(table.schema.fields[0].name === 'i32');\n     * ```\n     *\n     * It also accepts a a list of Vectors with an optional list of names or\n     * Fields for the resulting Schema. If the list is omitted or a name is\n     * missing, the numeric index of each Vector will be used as the name:\n     * ```ts\n     * const i32s = Int32Vector.from([1, 2, 3]);\n     * const f32s = Float32Vector.from([.1, .2, .3]);\n     * const table = Table.new([i32s, f32s], ['i32']);\n     * assert(table.schema.fields[0].name === 'i32');\n     * assert(table.schema.fields[1].name === '1');\n     * ```\n     *\n     * If the supplied arguments are Columns, `Table.new` will infer the Schema\n     * from the Columns:\n     * ```ts\n     * const i32s = Column.new('i32', Int32Vector.from([1, 2, 3]));\n     * const f32s = Column.new('f32', Float32Vector.from([.1, .2, .3]));\n     * const table = Table.new(i32s, f32s);\n     * assert(table.schema.fields[0].name === 'i32');\n     * assert(table.schema.fields[1].name === 'f32');\n     * ```\n     *\n     * If the supplied Vector or Column lengths are unequal, `Table.new` will\n     * extend the lengths of the shorter Columns, allocating additional bytes\n     * to represent the additional null slots. The memory required to allocate\n     * these additional bitmaps can be computed as:\n     * ```ts\n     * let additionalBytes = 0;\n     * for (let vec in shorter_vectors) {\n     *     additionalBytes += (((longestLength - vec.length) + 63) & ~63) >> 3;\n     * }\n     * ```\n     *\n     * For example, an additional null bitmap for one million null values would require\n     * 125,000 bytes (`((1e6 + 63) & ~63) >> 3`), or approx. `0.11MiB`\n     */\n    public static new<T extends { [key: string]: DataType } = any>(...columns: Columns<T>): Table<T>;\n    public static new<T extends VectorMap = any>(children: T): Table<{ [P in keyof T]: T[P]['type'] }>;\n    public static new<T extends { [key: string]: DataType } = any>(children: ChildData<T>, fields?: Fields<T>): Table<T>;\n    /** @nocollapse */\n    public static new(...cols: any[]) {\n        return new Table(...distributeColumnsIntoRecordBatches(selectColumnArgs(cols)));\n    }\n\n    constructor(batches: RecordBatch<T>[]);\n    constructor(...batches: RecordBatch<T>[]);\n    constructor(schema: Schema<T>, batches: RecordBatch<T>[]);\n    constructor(schema: Schema<T>, ...batches: RecordBatch<T>[]);\n    constructor(...args: any[]) {\n\n        let schema: Schema<T> = null!;\n\n        if (args[0] instanceof Schema) { schema = args.shift(); }\n\n        let chunks = selectArgs<RecordBatch<T>>(RecordBatch, args);\n\n        if (!schema && !(schema = chunks[0] && chunks[0].schema)) {\n            throw new TypeError('Table must be initialized with a Schema or at least one RecordBatch');\n        }\n\n        chunks[0] || (chunks[0] = new _InternalEmptyPlaceholderRecordBatch(schema));\n\n        super(new Struct(schema.fields), chunks);\n\n        this._schema = schema;\n        this._chunks = chunks;\n    }\n\n    protected _schema: Schema<T>;\n    // List of inner RecordBatches\n    protected _chunks: RecordBatch<T>[];\n    protected _children?: Column<T[keyof T]>[];\n\n    public get schema() { return this._schema; }\n    public get length() { return this._length; }\n    public get chunks() { return this._chunks; }\n    public get numCols() { return this._numChildren; }\n\n    public clone(chunks = this._chunks) {\n        return new Table<T>(this._schema, chunks);\n    }\n\n    public getColumn<R extends keyof T>(name: R): Column<T[R]> {\n        return this.getColumnAt(this.getColumnIndex(name)) as Column<T[R]>;\n    }\n    public getColumnAt<R extends DataType = any>(index: number): Column<R> | null {\n        return this.getChildAt(index);\n    }\n    public getColumnIndex<R extends keyof T>(name: R) {\n        return this._schema.fields.findIndex((f) => f.name === name);\n    }\n    public getChildAt<R extends DataType = any>(index: number): Column<R> | null {\n        if (index < 0 || index >= this.numChildren) { return null; }\n        let field: Field<R>, child: Column<R>;\n        const fields = (this._schema as Schema<any>).fields;\n        const columns = this._children || (this._children = []) as Column[];\n        if (child = columns[index]) { return child as Column<R>; }\n        if (field = fields[index]) {\n            const chunks = this._chunks\n                .map((chunk) => chunk.getChildAt<R>(index))\n                .filter((vec): vec is Vector<R> => vec != null);\n            if (chunks.length > 0) {\n                return (columns[index] = new Column<R>(field, chunks));\n            }\n        }\n        return null;\n    }\n\n    // @ts-ignore\n    public serialize(encoding = 'binary', stream = true) {\n        const Writer = !stream\n            ? RecordBatchFileWriter\n            : RecordBatchStreamWriter;\n        return Writer.writeAll(this).toUint8Array(true);\n    }\n    public count(): number {\n        return this._length;\n    }\n    public select<K extends keyof T = any>(...columnNames: K[]) {\n        const nameToIndex = this._schema.fields.reduce((m, f, i) => m.set(f.name as K, i), new Map<K, number>());\n        return this.selectAt(...columnNames.map((columnName) => nameToIndex.get(columnName)!).filter((x) => x > -1));\n    }\n    public selectAt<K extends T[keyof T] = any>(...columnIndices: number[]) {\n        const schema = this._schema.selectAt<K>(...columnIndices);\n        return new Table(schema, this._chunks.map(({ length, data: { childData } }) => {\n            return new RecordBatch(schema, length, columnIndices.map((i) => childData[i]).filter(Boolean));\n        }));\n    }\n    public assign<R extends { [key: string]: DataType } = any>(other: Table<R>) {\n\n        const fields = this._schema.fields;\n        const [indices, oldToNew] = other.schema.fields.reduce((memo, f2, newIdx) => {\n            const [indices, oldToNew] = memo;\n            const i = fields.findIndex((f) => f.name === f2.name);\n            ~i ? (oldToNew[i] = newIdx) : indices.push(newIdx);\n            return memo;\n        }, [[], []] as number[][]);\n\n        const schema = this._schema.assign(other.schema);\n        const columns = [\n            ...fields.map((_f, i, _fs, j = oldToNew[i]) =>\n                (j === undefined ? this.getColumnAt(i) : other.getColumnAt(j))!),\n            ...indices.map((i) => other.getColumnAt(i)!)\n        ].filter(Boolean) as Column<(T & R)[keyof T | keyof R]>[];\n\n        return new Table<T & R>(...distributeVectorsIntoRecordBatches<any>(schema, columns));\n    }\n}\n\nfunction tableFromIterable<T extends { [key: string]: DataType } = any, TNull = any>(input: VectorBuilderOptions<Struct<T>, TNull>) {\n    const { type } = input;\n    if (type instanceof Struct) {\n        return Table.fromStruct(StructVector.from(input as VectorBuilderOptions<Struct<T>, TNull>));\n    }\n    return null;\n}\n\nfunction tableFromAsyncIterable<T extends { [key: string]: DataType } = any, TNull = any>(input: VectorBuilderOptionsAsync<Struct<T>, TNull>) {\n    const { type } = input;\n    if (type instanceof Struct) {\n        return StructVector.from(input as VectorBuilderOptionsAsync<Struct<T>, TNull>).then((vector) => Table.fromStruct(vector));\n    }\n    return null;\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Data } from './data';\nimport { Table } from './table';\nimport { Vector } from './vector';\nimport { Visitor } from './visitor';\nimport { Schema, Field } from './schema';\nimport { isIterable } from './util/compat';\nimport { Chunked } from './vector/chunked';\nimport { selectFieldArgs } from './util/args';\nimport { DataType, Struct, Dictionary } from './type';\nimport { ensureSameLengthData } from './util/recordbatch';\nimport { Clonable, Sliceable, Applicative } from './vector';\nimport { StructVector, VectorBuilderOptions, VectorBuilderOptionsAsync } from './vector/index';\n\ntype VectorMap = { [key: string]: Vector };\ntype Fields<T extends { [key: string]: DataType }> = (keyof T)[] | Field<T[keyof T]>[];\ntype ChildData<T extends { [key: string]: DataType }> = (Data<T[keyof T]> | Vector<T[keyof T]>)[];\n\nexport interface RecordBatch<T extends { [key: string]: DataType } = any> {\n    concat(...others: Vector<Struct<T>>[]): Table<T>;\n    slice(begin?: number, end?: number): RecordBatch<T>;\n    clone(data: Data<Struct<T>>, children?: Vector[]): RecordBatch<T>;\n}\n\nexport class RecordBatch<T extends { [key: string]: DataType } = any>\n    extends StructVector<T>\n    implements Clonable<RecordBatch<T>>,\n               Sliceable<RecordBatch<T>>,\n               Applicative<Struct<T>, Table<T>> {\n\n    public static from<T extends { [key: string]: DataType } = any, TNull = any>(options: VectorBuilderOptions<Struct<T>, TNull>): Table<T>;\n    public static from<T extends { [key: string]: DataType } = any, TNull = any>(options: VectorBuilderOptionsAsync<Struct<T>, TNull>): Promise<Table<T>>;\n    /** @nocollapse */\n    public static from<T extends { [key: string]: DataType } = any, TNull = any>(options: VectorBuilderOptions<Struct<T>, TNull> | VectorBuilderOptionsAsync<Struct<T>, TNull>) {\n        if (isIterable<(Struct<T>)['TValue'] | TNull>(options['values'])) {\n            return Table.from(options as VectorBuilderOptions<Struct<T>, TNull>);\n        }\n        return Table.from(options as VectorBuilderOptionsAsync<Struct<T>, TNull>);\n    }\n\n    public static new<T extends VectorMap = any>(children: T): RecordBatch<{ [P in keyof T]: T[P]['type'] }>;\n    public static new<T extends { [key: string]: DataType } = any>(children: ChildData<T>, fields?: Fields<T>): RecordBatch<T>;\n    /** @nocollapse */\n    public static new<T extends { [key: string]: DataType } = any>(...args: any[]) {\n        const [fs, xs] = selectFieldArgs<T>(args);\n        const vs = xs.filter((x): x is Vector<T[keyof T]> => x instanceof Vector);\n        return new RecordBatch(...ensureSameLengthData(new Schema<T>(fs), vs.map((x) => x.data)));\n    }\n\n    protected _schema: Schema;\n    protected _dictionaries?: Map<number, Vector>;\n\n    constructor(schema: Schema<T>, length: number, children: (Data | Vector)[]);\n    constructor(schema: Schema<T>, data: Data<Struct<T>>, children?: Vector[]);\n    constructor(...args: any[]) {\n        let data: Data<Struct<T>>;\n        let schema = args[0] as Schema<T>;\n        let children: Vector[] | undefined;\n        if (args[1] instanceof Data) {\n            [, data, children] = (args as [any, Data<Struct<T>>, Vector<T[keyof T]>[]?]);\n        } else {\n            const fields = schema.fields as Field<T[keyof T]>[];\n            const [, length, childData] = args as [any, number, Data<T[keyof T]>[]];\n            data = Data.Struct(new Struct<T>(fields), 0, length, 0, null, childData);\n        }\n        super(data, children);\n        this._schema = schema;\n    }\n\n    public clone(data: Data<Struct<T>>, children = this._children) {\n        return new RecordBatch<T>(this._schema, data, children);\n    }\n\n    public concat(...others: Vector<Struct<T>>[]): Table<T> {\n        const schema = this._schema, chunks = Chunked.flatten(this, ...others);\n        return new Table(schema, chunks.map(({ data }) => new RecordBatch(schema, data)));\n    }\n\n    public get schema() { return this._schema; }\n    public get numCols() { return this._schema.fields.length; }\n    public get dictionaries() {\n        return this._dictionaries || (this._dictionaries = DictionaryCollector.collect(this));\n    }\n\n    public select<K extends keyof T = any>(...columnNames: K[]) {\n        const nameToIndex = this._schema.fields.reduce((m, f, i) => m.set(f.name as K, i), new Map<K, number>());\n        return this.selectAt(...columnNames.map((columnName) => nameToIndex.get(columnName)!).filter((x) => x > -1));\n    }\n    public selectAt<K extends T[keyof T] = any>(...columnIndices: number[]) {\n        const schema = this._schema.selectAt(...columnIndices);\n        const childData = columnIndices.map((i) => this.data.childData[i]).filter(Boolean);\n        return new RecordBatch<{ [key: string]: K }>(schema, this.length, childData);\n    }\n}\n\n/**\n * An internal class used by the `RecordBatchReader` and `RecordBatchWriter`\n * implementations to differentiate between a stream with valid zero-length\n * RecordBatches, and a stream with a Schema message, but no RecordBatches.\n * @see https://github.com/apache/arrow/pull/4373\n * @ignore\n * @private\n */\n/* tslint:disable:class-name */\nexport class _InternalEmptyPlaceholderRecordBatch<T extends { [key: string]: DataType } = any> extends RecordBatch<T> {\n    constructor(schema: Schema<T>) {\n        super(schema, 0, schema.fields.map((f) => Data.new(f.type, 0, 0, 0)));\n    }\n}\n\n/** @ignore */\nclass DictionaryCollector extends Visitor {\n    public dictionaries = new Map<number, Vector>();\n    public static collect<T extends RecordBatch>(batch: T) {\n        return new DictionaryCollector().visit(\n            batch.data, new Struct(batch.schema.fields)\n        ).dictionaries;\n    }\n    public visit(data: Data, type: DataType) {\n        if (DataType.isDictionary(type)) {\n            return this.visitDictionary(data, type);\n        } else {\n            data.childData.forEach((child, i) =>\n                this.visit(child, type.children[i].type));\n        }\n        return this;\n    }\n    public visitDictionary(data: Data, type: Dictionary) {\n        const dictionary = data.dictionary;\n        if (dictionary && dictionary.length > 0) {\n            this.dictionaries.set(type.id, dictionary);\n        }\n        return this;\n    }\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Vector } from '../vector';\nimport { DataType } from '../type';\nimport { MessageHeader } from '../enum';\nimport { Footer } from './metadata/file';\nimport { Schema, Field } from '../schema';\nimport streamAdapters from '../io/adapters';\nimport { Message } from './metadata/message';\nimport * as metadata from './metadata/message';\nimport { ArrayBufferViewInput } from '../util/buffer';\nimport { ByteStream, AsyncByteStream } from '../io/stream';\nimport { RandomAccessFile, AsyncRandomAccessFile } from '../io/file';\nimport { VectorLoader, JSONVectorLoader } from '../visitor/vectorloader';\nimport { RecordBatch, _InternalEmptyPlaceholderRecordBatch } from '../recordbatch';\nimport {\n    FileHandle,\n    ArrowJSONLike,\n    ITERATOR_DONE,\n    ReadableInterop,\n} from '../io/interfaces';\nimport {\n    MessageReader, AsyncMessageReader, JSONMessageReader,\n    checkForMagicArrowString, magicLength, magicAndPadding, magicX2AndPadding\n} from './message';\nimport {\n    isPromise,\n    isIterable, isAsyncIterable,\n    isIteratorResult, isArrowJSON,\n    isFileHandle, isFetchResponse,\n    isReadableDOMStream, isReadableNodeStream\n} from '../util/compat';\n\n/** @ignore */ export type FromArg0 = ArrowJSONLike;\n/** @ignore */ export type FromArg1 = PromiseLike<ArrowJSONLike>;\n/** @ignore */ export type FromArg2 = Iterable<ArrayBufferViewInput> | ArrayBufferViewInput;\n/** @ignore */ export type FromArg3 = PromiseLike<Iterable<ArrayBufferViewInput> | ArrayBufferViewInput>;\n/** @ignore */ export type FromArg4 = Response | NodeJS.ReadableStream | ReadableStream<ArrayBufferViewInput> | AsyncIterable<ArrayBufferViewInput>;\n/** @ignore */ export type FromArg5 = FileHandle | PromiseLike<FileHandle> | PromiseLike<FromArg4>;\n/** @ignore */ export type FromArgs = FromArg0 | FromArg1 | FromArg2 | FromArg3 | FromArg4 | FromArg5;\n\n/** @ignore */ type OpenOptions = { autoDestroy?: boolean; };\n/** @ignore */ type RecordBatchReaders<T extends { [key: string]: DataType } = any> = RecordBatchFileReader<T> | RecordBatchStreamReader<T>;\n/** @ignore */ type AsyncRecordBatchReaders<T extends { [key: string]: DataType } = any> = AsyncRecordBatchFileReader<T> | AsyncRecordBatchStreamReader<T>;\n/** @ignore */ type RecordBatchFileReaders<T extends { [key: string]: DataType } = any> = RecordBatchFileReader<T> | AsyncRecordBatchFileReader<T>;\n/** @ignore */ type RecordBatchStreamReaders<T extends { [key: string]: DataType } = any> = RecordBatchStreamReader<T> | AsyncRecordBatchStreamReader<T>;\n\nexport class RecordBatchReader<T extends { [key: string]: DataType } = any> extends ReadableInterop<RecordBatch<T>> {\n\n    protected _impl: RecordBatchReaderImpls<T>;\n    protected constructor(impl: RecordBatchReaderImpls<T>) {\n        super();\n        this._impl = impl;\n    }\n\n    public get closed() { return this._impl.closed; }\n    public get schema() { return this._impl.schema; }\n    public get autoDestroy() { return this._impl.autoDestroy; }\n    public get dictionaries() { return this._impl.dictionaries; }\n    public get numDictionaries() { return this._impl.numDictionaries; }\n    public get numRecordBatches() { return this._impl.numRecordBatches; }\n    public get footer() { return this._impl.isFile() ? this._impl.footer : null; }\n\n    public isSync(): this is RecordBatchReaders<T> { return this._impl.isSync(); }\n    public isAsync(): this is AsyncRecordBatchReaders<T> { return this._impl.isAsync(); }\n    public isFile(): this is RecordBatchFileReaders<T> { return this._impl.isFile(); }\n    public isStream(): this is RecordBatchStreamReaders<T> { return this._impl.isStream(); }\n\n    public next() {\n        return this._impl.next();\n    }\n    public throw(value?: any) {\n        return this._impl.throw(value);\n    }\n    public return(value?: any) {\n        return this._impl.return(value);\n    }\n    public cancel() {\n        return this._impl.cancel();\n    }\n    public reset(schema?: Schema<T> | null): this {\n        this._impl.reset(schema);\n        this._DOMStream = undefined;\n        this._nodeStream = undefined;\n        return this;\n    }\n    public open(options?: OpenOptions) {\n        const opening = this._impl.open(options);\n        return isPromise(opening) ? opening.then(() => this) : this;\n    }\n    public readRecordBatch(index: number): RecordBatch<T> | null | Promise<RecordBatch<T> | null> {\n        return this._impl.isFile() ? this._impl.readRecordBatch(index) : null;\n    }\n    public [Symbol.iterator](): IterableIterator<RecordBatch<T>> {\n        return (<IterableIterator<RecordBatch<T>>> this._impl)[Symbol.iterator]();\n    }\n    public [Symbol.asyncIterator](): AsyncIterableIterator<RecordBatch<T>> {\n        return (<AsyncIterableIterator<RecordBatch<T>>> this._impl)[Symbol.asyncIterator]();\n    }\n    public toDOMStream() {\n        return streamAdapters.toDOMStream<RecordBatch<T>>(\n            (this.isSync()\n                ? { [Symbol.iterator]: () => this } as Iterable<RecordBatch<T>>\n                : { [Symbol.asyncIterator]: () => this } as AsyncIterable<RecordBatch<T>>));\n    }\n    public toNodeStream() {\n        return streamAdapters.toNodeStream<RecordBatch<T>>(\n            (this.isSync()\n                ? { [Symbol.iterator]: () => this } as Iterable<RecordBatch<T>>\n                : { [Symbol.asyncIterator]: () => this } as AsyncIterable<RecordBatch<T>>),\n            { objectMode: true });\n    }\n\n    /** @nocollapse */\n    // @ts-ignore\n    public static throughNode(options?: import('stream').DuplexOptions & { autoDestroy: boolean }): import('stream').Duplex {\n        throw new Error(`\"throughNode\" not available in this environment`);\n    }\n    /** @nocollapse */\n    public static throughDOM<T extends { [key: string]: DataType }>(\n        // @ts-ignore\n        writableStrategy?: ByteLengthQueuingStrategy,\n        // @ts-ignore\n        readableStrategy?: { autoDestroy: boolean }\n    ): { writable: WritableStream<Uint8Array>, readable: ReadableStream<RecordBatch<T>> } {\n        throw new Error(`\"throughDOM\" not available in this environment`);\n    }\n\n    public static from<T extends RecordBatchReader>(source: T): T;\n    public static from<T extends { [key: string]: DataType } = any>(source: FromArg0): RecordBatchStreamReader<T>;\n    public static from<T extends { [key: string]: DataType } = any>(source: FromArg1): Promise<RecordBatchStreamReader<T>>;\n    public static from<T extends { [key: string]: DataType } = any>(source: FromArg2): RecordBatchFileReader<T> | RecordBatchStreamReader<T>;\n    public static from<T extends { [key: string]: DataType } = any>(source: FromArg3): Promise<RecordBatchFileReader<T> | RecordBatchStreamReader<T>>;\n    public static from<T extends { [key: string]: DataType } = any>(source: FromArg4): Promise<RecordBatchFileReader<T> | AsyncRecordBatchReaders<T>>;\n    public static from<T extends { [key: string]: DataType } = any>(source: FromArg5): Promise<AsyncRecordBatchFileReader<T> | AsyncRecordBatchStreamReader<T>>;\n    /** @nocollapse */\n    public static from<T extends { [key: string]: DataType } = any>(source: any) {\n        if (source instanceof RecordBatchReader) {\n            return source;\n        } else if (isArrowJSON(source)) {\n            return fromArrowJSON<T>(source);\n        } else if (isFileHandle(source)) {\n            return fromFileHandle<T>(source);\n        } else if (isPromise<any>(source)) {\n            return (async () => await RecordBatchReader.from<any>(await source))();\n        } else if (isFetchResponse(source) || isReadableDOMStream(source) || isReadableNodeStream(source) || isAsyncIterable(source)) {\n            return fromAsyncByteStream<T>(new AsyncByteStream(source));\n        }\n        return fromByteStream<T>(new ByteStream(source));\n    }\n\n    public static readAll<T extends RecordBatchReader>(source: T): T extends RecordBatchReaders ? IterableIterator<T> : AsyncIterableIterator<T>;\n    public static readAll<T extends { [key: string]: DataType } = any>(source: FromArg0): IterableIterator<RecordBatchStreamReader<T>>;\n    public static readAll<T extends { [key: string]: DataType } = any>(source: FromArg1): AsyncIterableIterator<RecordBatchStreamReader<T>>;\n    public static readAll<T extends { [key: string]: DataType } = any>(source: FromArg2): IterableIterator<RecordBatchFileReader<T> | RecordBatchStreamReader<T>>;\n    public static readAll<T extends { [key: string]: DataType } = any>(source: FromArg3): AsyncIterableIterator<RecordBatchFileReader<T> | RecordBatchStreamReader<T>>;\n    public static readAll<T extends { [key: string]: DataType } = any>(source: FromArg4): AsyncIterableIterator<RecordBatchFileReader<T> | AsyncRecordBatchReaders<T>>;\n    public static readAll<T extends { [key: string]: DataType } = any>(source: FromArg5): AsyncIterableIterator<AsyncRecordBatchFileReader<T> | AsyncRecordBatchStreamReader<T>>;\n    /** @nocollapse */\n    public static readAll<T extends { [key: string]: DataType } = any>(source: any) {\n        if (source instanceof RecordBatchReader) {\n            return source.isSync() ? readAllSync(source) : readAllAsync(source as AsyncRecordBatchReaders<T>);\n        } else if (isArrowJSON(source) || ArrayBuffer.isView(source) || isIterable<ArrayBufferViewInput>(source) || isIteratorResult(source)) {\n            return readAllSync<T>(source) as IterableIterator<RecordBatchReaders<T>>;\n        }\n        return readAllAsync<T>(source) as AsyncIterableIterator<RecordBatchReaders<T> | AsyncRecordBatchReaders<T>>;\n    }\n}\n\n//\n// Since TS is a structural type system, we define the following subclass stubs\n// so that concrete types exist to associate with with the interfaces below.\n//\n// The implementation for each RecordBatchReader is hidden away in the set of\n// `RecordBatchReaderImpl` classes in the second half of this file. This allows\n// us to export a single RecordBatchReader class, and swap out the impl based\n// on the io primitives or underlying arrow (JSON, file, or stream) at runtime.\n//\n// Async/await makes our job a bit harder, since it forces everything to be\n// either fully sync or fully async. This is why the logic for the reader impls\n// has been duplicated into both sync and async variants. Since the RBR\n// delegates to its impl, an RBR with an AsyncRecordBatchFileReaderImpl for\n// example will return async/await-friendly Promises, but one with a (sync)\n// RecordBatchStreamReaderImpl will always return values. Nothing should be\n// different about their logic, aside from the async handling. This is also why\n// this code looks highly structured, as it should be nearly identical and easy\n// to follow.\n//\n\n/** @ignore */\nexport class RecordBatchStreamReader<T extends { [key: string]: DataType } = any> extends RecordBatchReader<T> {\n    constructor(protected _impl: RecordBatchStreamReaderImpl<T>) { super (_impl); }\n    public [Symbol.iterator]() { return (this._impl as IterableIterator<RecordBatch<T>>)[Symbol.iterator](); }\n    public async *[Symbol.asyncIterator](): AsyncIterableIterator<RecordBatch<T>> { yield* this[Symbol.iterator](); }\n}\n/** @ignore */\nexport class AsyncRecordBatchStreamReader<T extends { [key: string]: DataType } = any> extends RecordBatchReader<T> {\n    constructor(protected _impl: AsyncRecordBatchStreamReaderImpl<T>) { super (_impl); }\n    public [Symbol.iterator](): IterableIterator<RecordBatch<T>> { throw new Error(`AsyncRecordBatchStreamReader is not Iterable`); }\n    public [Symbol.asyncIterator]() { return (this._impl as AsyncIterableIterator<RecordBatch<T>>)[Symbol.asyncIterator](); }\n}\n/** @ignore */\nexport class RecordBatchFileReader<T extends { [key: string]: DataType } = any> extends RecordBatchStreamReader<T> {\n    constructor(protected _impl: RecordBatchFileReaderImpl<T>) { super (_impl); }\n}\n/** @ignore */\nexport class AsyncRecordBatchFileReader<T extends { [key: string]: DataType } = any> extends AsyncRecordBatchStreamReader<T> {\n    constructor(protected _impl: AsyncRecordBatchFileReaderImpl<T>) { super (_impl); }\n}\n\n//\n// Now override the return types for each sync/async RecordBatchReader variant\n//\n\n/** @ignore */\nexport interface RecordBatchStreamReader<T extends { [key: string]: DataType } = any> extends RecordBatchReader<T> {\n    open(options?: OpenOptions | undefined): this;\n    cancel(): void;\n    throw(value?: any): IteratorResult<any>;\n    return(value?: any): IteratorResult<any>;\n    next(value?: any): IteratorResult<RecordBatch<T>>;\n}\n\n/** @ignore */\nexport interface AsyncRecordBatchStreamReader<T extends { [key: string]: DataType } = any> extends RecordBatchReader<T> {\n    open(options?: OpenOptions | undefined): Promise<this>;\n    cancel(): Promise<void>;\n    throw(value?: any): Promise<IteratorResult<any>>;\n    return(value?: any): Promise<IteratorResult<any>>;\n    next(value?: any): Promise<IteratorResult<RecordBatch<T>>>;\n}\n\n/** @ignore */\nexport interface RecordBatchFileReader<T extends { [key: string]: DataType } = any> extends RecordBatchStreamReader<T> {\n    footer: Footer;\n    readRecordBatch(index: number): RecordBatch<T> | null;\n}\n\n/** @ignore */\nexport interface AsyncRecordBatchFileReader<T extends { [key: string]: DataType } = any> extends AsyncRecordBatchStreamReader<T> {\n    footer: Footer;\n    readRecordBatch(index: number): Promise<RecordBatch<T> | null>;\n}\n\n/** @ignore */\ntype RecordBatchReaderImpls<T extends { [key: string]: DataType } = any> =\n     RecordBatchJSONReaderImpl<T> |\n     RecordBatchFileReaderImpl<T> |\n     RecordBatchStreamReaderImpl<T> |\n     AsyncRecordBatchFileReaderImpl<T> |\n     AsyncRecordBatchStreamReaderImpl<T>;\n\n/** @ignore */\ninterface RecordBatchReaderImpl<T extends { [key: string]: DataType } = any> {\n\n    closed: boolean;\n    schema: Schema<T>;\n    autoDestroy: boolean;\n    dictionaries: Map<number, Vector>;\n\n    isFile(): this is RecordBatchFileReaders<T>;\n    isStream(): this is RecordBatchStreamReaders<T>;\n    isSync(): this is RecordBatchReaders<T>;\n    isAsync(): this is AsyncRecordBatchReaders<T>;\n\n    reset(schema?: Schema<T> | null): this;\n}\n\n/** @ignore */\ninterface RecordBatchStreamReaderImpl<T extends { [key: string]: DataType } = any> extends RecordBatchReaderImpl<T> {\n\n    open(options?: OpenOptions): this;\n    cancel(): void;\n\n    throw(value?: any): IteratorResult<any>;\n    return(value?: any): IteratorResult<any>;\n    next(value?: any): IteratorResult<RecordBatch<T>>;\n\n    [Symbol.iterator](): IterableIterator<RecordBatch<T>>;\n}\n\n/** @ignore */\ninterface AsyncRecordBatchStreamReaderImpl<T extends { [key: string]: DataType } = any> extends RecordBatchReaderImpl<T> {\n\n    open(options?: OpenOptions): Promise<this>;\n    cancel(): Promise<void>;\n\n    throw(value?: any): Promise<IteratorResult<any>>;\n    return(value?: any): Promise<IteratorResult<any>>;\n    next(value?: any): Promise<IteratorResult<RecordBatch<T>>>;\n\n    [Symbol.asyncIterator](): AsyncIterableIterator<RecordBatch<T>>;\n}\n\n/** @ignore */\ninterface RecordBatchFileReaderImpl<T extends { [key: string]: DataType } = any> extends RecordBatchStreamReaderImpl<T> {\n    readRecordBatch(index: number): RecordBatch<T> | null;\n}\n\n/** @ignore */\ninterface AsyncRecordBatchFileReaderImpl<T extends { [key: string]: DataType } = any> extends AsyncRecordBatchStreamReaderImpl<T> {\n    readRecordBatch(index: number): Promise<RecordBatch<T> | null>;\n}\n\n/** @ignore */\nabstract class RecordBatchReaderImpl<T extends { [key: string]: DataType } = any> implements RecordBatchReaderImpl<T> {\n\n    // @ts-ignore\n    public schema: Schema;\n    public closed = false;\n    public autoDestroy = true;\n    public dictionaries: Map<number, Vector>;\n\n    protected _dictionaryIndex = 0;\n    protected _recordBatchIndex = 0;\n    public get numDictionaries() { return this._dictionaryIndex; }\n    public get numRecordBatches() { return this._recordBatchIndex; }\n\n    constructor(dictionaries = new Map<number, Vector>()) {\n        this.dictionaries = dictionaries;\n    }\n\n    public isSync(): this is RecordBatchReaders<T> { return false; }\n    public isAsync(): this is AsyncRecordBatchReaders<T> { return false; }\n    public isFile(): this is RecordBatchFileReaders<T> { return false; }\n    public isStream(): this is RecordBatchStreamReaders<T> { return false; }\n\n    public reset(schema?: Schema<T> | null) {\n        this._dictionaryIndex = 0;\n        this._recordBatchIndex = 0;\n        this.schema = <any> schema;\n        this.dictionaries = new Map();\n        return this;\n    }\n\n    protected _loadRecordBatch(header: metadata.RecordBatch, body: any) {\n        return new RecordBatch<T>(this.schema, header.length, this._loadVectors(header, body, this.schema.fields));\n    }\n    protected _loadDictionaryBatch(header: metadata.DictionaryBatch, body: any) {\n        const { id, isDelta, data } = header;\n        const { dictionaries, schema } = this;\n        const dictionary = dictionaries.get(id);\n        if (isDelta || !dictionary) {\n            const type = schema.dictionaries.get(id)!;\n            return (dictionary && isDelta ? dictionary.concat(\n                Vector.new(this._loadVectors(data, body, [type])[0])) :\n                Vector.new(this._loadVectors(data, body, [type])[0])) as Vector;\n        }\n        return dictionary;\n    }\n    protected _loadVectors(header: metadata.RecordBatch, body: any, types: (Field | DataType)[]) {\n        return new VectorLoader(body, header.nodes, header.buffers, this.dictionaries).visitMany(types);\n    }\n}\n\n/** @ignore */\nclass RecordBatchStreamReaderImpl<T extends { [key: string]: DataType } = any> extends RecordBatchReaderImpl<T> implements IterableIterator<RecordBatch<T>> {\n\n    protected _reader: MessageReader;\n    protected _handle: ByteStream | ArrowJSONLike;\n\n    constructor(source: ByteStream | ArrowJSONLike, dictionaries?: Map<number, Vector>) {\n        super(dictionaries);\n        this._reader = !isArrowJSON(source)\n            ? new MessageReader(this._handle = source)\n            : new JSONMessageReader(this._handle = source);\n    }\n\n    public isSync(): this is RecordBatchReaders<T> { return true; }\n    public isStream(): this is RecordBatchStreamReaders<T> { return true; }\n    public [Symbol.iterator](): IterableIterator<RecordBatch<T>> {\n        return this as IterableIterator<RecordBatch<T>>;\n    }\n    public cancel() {\n        if (!this.closed && (this.closed = true)) {\n            this.reset()._reader.return();\n            this._reader = <any> null;\n            this.dictionaries = <any> null;\n        }\n    }\n    public open(options?: OpenOptions) {\n        if (!this.closed) {\n            this.autoDestroy = shouldAutoDestroy(this, options);\n            if (!(this.schema || (this.schema = this._reader.readSchema()!))) {\n                this.cancel();\n            }\n        }\n        return this;\n    }\n    public throw(value?: any): IteratorResult<any> {\n        if (!this.closed && this.autoDestroy && (this.closed = true)) {\n            return this.reset()._reader.throw(value);\n        }\n        return ITERATOR_DONE;\n    }\n    public return(value?: any): IteratorResult<any> {\n        if (!this.closed && this.autoDestroy && (this.closed = true)) {\n            return this.reset()._reader.return(value);\n        }\n        return ITERATOR_DONE;\n    }\n    public next(): IteratorResult<RecordBatch<T>> {\n        if (this.closed) { return ITERATOR_DONE; }\n        let message: Message | null, { _reader: reader } = this;\n        while (message = this._readNextMessageAndValidate()) {\n            if (message.isSchema()) {\n                this.reset(message.header());\n            } else if (message.isRecordBatch()) {\n                this._recordBatchIndex++;\n                const header = message.header();\n                const buffer = reader.readMessageBody(message.bodyLength);\n                const recordBatch = this._loadRecordBatch(header, buffer);\n                return { done: false, value: recordBatch };\n            } else if (message.isDictionaryBatch()) {\n                this._dictionaryIndex++;\n                const header = message.header();\n                const buffer = reader.readMessageBody(message.bodyLength);\n                const vector = this._loadDictionaryBatch(header, buffer);\n                this.dictionaries.set(header.id, vector);\n            }\n        }\n        if (this.schema && this._recordBatchIndex === 0) {\n            this._recordBatchIndex++;\n            return { done: false, value: new _InternalEmptyPlaceholderRecordBatch<T>(this.schema) };\n        }\n        return this.return();\n    }\n    protected _readNextMessageAndValidate<T extends MessageHeader>(type?: T | null) {\n        return this._reader.readMessage<T>(type);\n    }\n}\n\n/** @ignore */\nclass AsyncRecordBatchStreamReaderImpl<T extends { [key: string]: DataType } = any> extends RecordBatchReaderImpl<T> implements AsyncIterableIterator<RecordBatch<T>> {\n\n    protected _handle: AsyncByteStream;\n    protected _reader: AsyncMessageReader;\n\n    constructor(source: AsyncByteStream, dictionaries?: Map<number, Vector>) {\n        super(dictionaries);\n        this._reader = new AsyncMessageReader(this._handle = source);\n    }\n    public isAsync(): this is AsyncRecordBatchReaders<T> { return true; }\n    public isStream(): this is RecordBatchStreamReaders<T> { return true; }\n    public [Symbol.asyncIterator](): AsyncIterableIterator<RecordBatch<T>> {\n        return this as AsyncIterableIterator<RecordBatch<T>>;\n    }\n    public async cancel() {\n        if (!this.closed && (this.closed = true)) {\n            await this.reset()._reader.return();\n            this._reader = <any> null;\n            this.dictionaries = <any> null;\n        }\n    }\n    public async open(options?: OpenOptions) {\n        if (!this.closed) {\n            this.autoDestroy = shouldAutoDestroy(this, options);\n            if (!(this.schema || (this.schema = (await this._reader.readSchema())!))) {\n                await this.cancel();\n            }\n        }\n        return this;\n    }\n    public async throw(value?: any): Promise<IteratorResult<any>> {\n        if (!this.closed && this.autoDestroy && (this.closed = true)) {\n            return await this.reset()._reader.throw(value);\n        }\n        return ITERATOR_DONE;\n    }\n    public async return(value?: any): Promise<IteratorResult<any>> {\n        if (!this.closed && this.autoDestroy && (this.closed = true)) {\n            return await this.reset()._reader.return(value);\n        }\n        return ITERATOR_DONE;\n    }\n    public async next() {\n        if (this.closed) { return ITERATOR_DONE; }\n        let message: Message | null, { _reader: reader } = this;\n        while (message = await this._readNextMessageAndValidate()) {\n            if (message.isSchema()) {\n                await this.reset(message.header());\n            } else if (message.isRecordBatch()) {\n                this._recordBatchIndex++;\n                const header = message.header();\n                const buffer = await reader.readMessageBody(message.bodyLength);\n                const recordBatch = this._loadRecordBatch(header, buffer);\n                return { done: false, value: recordBatch };\n            } else if (message.isDictionaryBatch()) {\n                this._dictionaryIndex++;\n                const header = message.header();\n                const buffer = await reader.readMessageBody(message.bodyLength);\n                const vector = this._loadDictionaryBatch(header, buffer);\n                this.dictionaries.set(header.id, vector);\n            }\n        }\n        if (this.schema && this._recordBatchIndex === 0) {\n            this._recordBatchIndex++;\n            return { done: false, value: new _InternalEmptyPlaceholderRecordBatch<T>(this.schema) };\n        }\n        return await this.return();\n    }\n    protected async _readNextMessageAndValidate<T extends MessageHeader>(type?: T | null) {\n        return await this._reader.readMessage<T>(type);\n    }\n}\n\n/** @ignore */\nclass RecordBatchFileReaderImpl<T extends { [key: string]: DataType } = any> extends RecordBatchStreamReaderImpl<T> {\n\n    // @ts-ignore\n    protected _footer?: Footer;\n    // @ts-ignore\n    protected _handle: RandomAccessFile;\n    public get footer() { return this._footer!; }\n    public get numDictionaries() { return this._footer ? this._footer.numDictionaries : 0; }\n    public get numRecordBatches() { return this._footer ? this._footer.numRecordBatches : 0; }\n\n    constructor(source: RandomAccessFile | ArrayBufferViewInput, dictionaries?: Map<number, Vector>) {\n        super(source instanceof RandomAccessFile ? source : new RandomAccessFile(source), dictionaries);\n    }\n    public isSync(): this is RecordBatchReaders<T> { return true; }\n    public isFile(): this is RecordBatchFileReaders<T> { return true; }\n    public open(options?: OpenOptions) {\n        if (!this.closed && !this._footer) {\n            this.schema = (this._footer = this._readFooter()).schema;\n            for (const block of this._footer.dictionaryBatches()) {\n                block && this._readDictionaryBatch(this._dictionaryIndex++);\n            }\n        }\n        return super.open(options);\n    }\n    public readRecordBatch(index: number) {\n        if (this.closed) { return null; }\n        if (!this._footer) { this.open(); }\n        const block = this._footer && this._footer.getRecordBatch(index);\n        if (block && this._handle.seek(block.offset)) {\n            const message = this._reader.readMessage(MessageHeader.RecordBatch);\n            if (message && message.isRecordBatch()) {\n                const header = message.header();\n                const buffer = this._reader.readMessageBody(message.bodyLength);\n                const recordBatch = this._loadRecordBatch(header, buffer);\n                return recordBatch;\n            }\n        }\n        return null;\n    }\n    protected _readDictionaryBatch(index: number) {\n        const block = this._footer && this._footer.getDictionaryBatch(index);\n        if (block && this._handle.seek(block.offset)) {\n            const message = this._reader.readMessage(MessageHeader.DictionaryBatch);\n            if (message && message.isDictionaryBatch()) {\n                const header = message.header();\n                const buffer = this._reader.readMessageBody(message.bodyLength);\n                const vector = this._loadDictionaryBatch(header, buffer);\n                this.dictionaries.set(header.id, vector);\n            }\n        }\n    }\n    protected _readFooter() {\n        const { _handle } = this;\n        const offset = _handle.size - magicAndPadding;\n        const length = _handle.readInt32(offset);\n        const buffer = _handle.readAt(offset - length, length);\n        return Footer.decode(buffer);\n    }\n    protected _readNextMessageAndValidate<T extends MessageHeader>(type?: T | null): Message<T> | null {\n        if (!this._footer) { this.open(); }\n        if (this._footer && this._recordBatchIndex < this.numRecordBatches) {\n            const block = this._footer && this._footer.getRecordBatch(this._recordBatchIndex);\n            if (block && this._handle.seek(block.offset)) {\n                return this._reader.readMessage(type);\n            }\n        }\n        return null;\n    }\n}\n\n/** @ignore */\nclass AsyncRecordBatchFileReaderImpl<T extends { [key: string]: DataType } = any> extends AsyncRecordBatchStreamReaderImpl<T>\n    implements AsyncRecordBatchFileReaderImpl<T> {\n\n    protected _footer?: Footer;\n    // @ts-ignore\n    protected _handle: AsyncRandomAccessFile;\n    public get footer() { return this._footer!; }\n    public get numDictionaries() { return this._footer ? this._footer.numDictionaries : 0; }\n    public get numRecordBatches() { return this._footer ? this._footer.numRecordBatches : 0; }\n\n    constructor(source: FileHandle, byteLength?: number, dictionaries?: Map<number, Vector>);\n    constructor(source: FileHandle | AsyncRandomAccessFile, dictionaries?: Map<number, Vector>);\n    constructor(source: FileHandle | AsyncRandomAccessFile, ...rest: any[]) {\n        const byteLength = typeof rest[0] !== 'number' ? <number> rest.shift() : undefined;\n        const dictionaries = rest[0] instanceof Map ? <Map<number, Vector>> rest.shift() : undefined;\n        super(source instanceof AsyncRandomAccessFile ? source : new AsyncRandomAccessFile(source, byteLength), dictionaries);\n    }\n    public isFile(): this is RecordBatchFileReaders<T> { return true; }\n    public isAsync(): this is AsyncRecordBatchReaders<T> { return true; }\n    public async open(options?: OpenOptions) {\n        if (!this.closed && !this._footer) {\n            this.schema = (this._footer = await this._readFooter()).schema;\n            for (const block of this._footer.dictionaryBatches()) {\n                block && await this._readDictionaryBatch(this._dictionaryIndex++);\n            }\n        }\n        return await super.open(options);\n    }\n    public async readRecordBatch(index: number) {\n        if (this.closed) { return null; }\n        if (!this._footer) { await this.open(); }\n        const block = this._footer && this._footer.getRecordBatch(index);\n        if (block && (await this._handle.seek(block.offset))) {\n            const message = await this._reader.readMessage(MessageHeader.RecordBatch);\n            if (message && message.isRecordBatch()) {\n                const header = message.header();\n                const buffer = await this._reader.readMessageBody(message.bodyLength);\n                const recordBatch = this._loadRecordBatch(header, buffer);\n                return recordBatch;\n            }\n        }\n        return null;\n    }\n    protected async _readDictionaryBatch(index: number) {\n        const block = this._footer && this._footer.getDictionaryBatch(index);\n        if (block && (await this._handle.seek(block.offset))) {\n            const message = await this._reader.readMessage(MessageHeader.DictionaryBatch);\n            if (message && message.isDictionaryBatch()) {\n                const header = message.header();\n                const buffer = await this._reader.readMessageBody(message.bodyLength);\n                const vector = this._loadDictionaryBatch(header, buffer);\n                this.dictionaries.set(header.id, vector);\n            }\n        }\n    }\n    protected async _readFooter() {\n        const { _handle } = this;\n        _handle._pending && await _handle._pending;\n        const offset = _handle.size - magicAndPadding;\n        const length = await _handle.readInt32(offset);\n        const buffer = await _handle.readAt(offset - length, length);\n        return Footer.decode(buffer);\n    }\n    protected async _readNextMessageAndValidate<T extends MessageHeader>(type?: T | null): Promise<Message<T> | null> {\n        if (!this._footer) { await this.open(); }\n        if (this._footer && this._recordBatchIndex < this.numRecordBatches) {\n            const block = this._footer.getRecordBatch(this._recordBatchIndex);\n            if (block && await this._handle.seek(block.offset)) {\n                return await this._reader.readMessage(type);\n            }\n        }\n        return null;\n    }\n}\n\n/** @ignore */\nclass RecordBatchJSONReaderImpl<T extends { [key: string]: DataType } = any> extends RecordBatchStreamReaderImpl<T> {\n    constructor(source: ArrowJSONLike, dictionaries?: Map<number, Vector>) {\n        super(source, dictionaries);\n    }\n    protected _loadVectors(header: metadata.RecordBatch, body: any, types: (Field | DataType)[]) {\n        return new JSONVectorLoader(body, header.nodes, header.buffers, this.dictionaries).visitMany(types);\n    }\n}\n\n//\n// Define some helper functions and static implementations down here. There's\n// a bit of branching in the static methods that can lead to the same routines\n// being executed, so we've broken those out here for readability.\n//\n\n/** @ignore */\nfunction shouldAutoDestroy(self: { autoDestroy: boolean }, options?: OpenOptions) {\n    return options && (typeof options['autoDestroy'] === 'boolean') ? options['autoDestroy'] : self['autoDestroy'];\n}\n\n/** @ignore */\nfunction* readAllSync<T extends { [key: string]: DataType } = any>(source: RecordBatchReaders<T> | FromArg0 | FromArg2) {\n    const reader = RecordBatchReader.from<T>(<any> source) as RecordBatchReaders<T>;\n    try {\n        if (!reader.open({ autoDestroy: false }).closed) {\n            do { yield reader; } while (!(reader.reset().open()).closed);\n        }\n    } finally { reader.cancel(); }\n}\n\n/** @ignore */\nasync function* readAllAsync<T extends { [key: string]: DataType } = any>(source: AsyncRecordBatchReaders<T> | FromArg1 | FromArg3 | FromArg4 | FromArg5) {\n    const reader = await RecordBatchReader.from<T>(<any> source) as RecordBatchReader<T>;\n    try {\n        if (!(await reader.open({ autoDestroy: false })).closed) {\n            do { yield reader; } while (!(await reader.reset().open()).closed);\n        }\n    } finally { await reader.cancel(); }\n}\n\n/** @ignore */\nfunction fromArrowJSON<T extends { [key: string]: DataType }>(source: ArrowJSONLike) {\n    return new RecordBatchStreamReader(new RecordBatchJSONReaderImpl<T>(source));\n}\n\n/** @ignore */\nfunction fromByteStream<T extends { [key: string]: DataType }>(source: ByteStream) {\n    const bytes = source.peek((magicLength + 7) & ~7);\n    return bytes && bytes.byteLength >= 4 ? !checkForMagicArrowString(bytes)\n        ? new RecordBatchStreamReader(new RecordBatchStreamReaderImpl<T>(source))\n        : new RecordBatchFileReader(new RecordBatchFileReaderImpl<T>(source.read()))\n        : new RecordBatchStreamReader(new RecordBatchStreamReaderImpl<T>(function*(): any {}()));\n}\n\n/** @ignore */\nasync function fromAsyncByteStream<T extends { [key: string]: DataType }>(source: AsyncByteStream) {\n    const bytes = await source.peek((magicLength + 7) & ~7);\n    return bytes && bytes.byteLength >= 4 ? !checkForMagicArrowString(bytes)\n        ? new AsyncRecordBatchStreamReader(new AsyncRecordBatchStreamReaderImpl<T>(source))\n        : new RecordBatchFileReader(new RecordBatchFileReaderImpl<T>(await source.read()))\n        : new AsyncRecordBatchStreamReader(new AsyncRecordBatchStreamReaderImpl<T>(async function*(): any {}()));\n}\n\n/** @ignore */\nasync function fromFileHandle<T extends { [key: string]: DataType }>(source: FileHandle) {\n    const { size } = await source.stat();\n    const file = new AsyncRandomAccessFile(source, size);\n    if (size >= magicX2AndPadding) {\n        if (checkForMagicArrowString(await file.readAt(0, (magicLength + 7) & ~7))) {\n            return new AsyncRecordBatchFileReader(new AsyncRecordBatchFileReaderImpl<T>(file));\n        }\n    }\n    return new AsyncRecordBatchStreamReader(new AsyncRecordBatchStreamReaderImpl<T>(file));\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { DataType } from '../../type';\nimport { Vector } from '../../vector';\nimport { VectorType as V } from '../../interfaces';\nimport { Builder, BuilderOptions } from '../../builder/index';\n\n/** @ignore */\nexport interface BuilderTransformOptions<T extends DataType = any, TNull = any> extends BuilderOptions<T, TNull> {\n    queueingStrategy?: 'bytes' | 'count';\n    dictionaryHashFunction?: (value: any) => string | number;\n    readableStrategy?: { highWaterMark?: number, size?: any, type?: 'bytes'; };\n    writableStrategy?: { highWaterMark?: number, size?: any, type?: 'bytes'; };\n    valueToChildTypeId?: (builder: Builder<T, TNull>, value: any, offset: number) => number;\n}\n\n/** @ignore */\nexport function builderThroughDOMStream<T extends DataType = any, TNull = any>(options: BuilderTransformOptions<T, TNull>) {\n    return new BuilderTransform(options);\n}\n\n/** @ignore */\nexport class BuilderTransform<T extends DataType = any, TNull = any> {\n\n    public readable: ReadableStream<V<T>>;\n    public writable: WritableStream<T['TValue'] | TNull>;\n    public _controller: ReadableStreamDefaultController<V<T>> | null;\n\n    private _numChunks = 0;\n    private _finished = false;\n    private _bufferedSize = 0;\n    private _builder: Builder<T, TNull>;\n    private _getSize: (builder: Builder<T, TNull>) => number;\n\n    constructor(options: BuilderTransformOptions<T, TNull>) {\n\n        // Access properties by string indexers to defeat closure compiler\n\n        const {\n            ['readableStrategy']: readableStrategy,\n            ['writableStrategy']: writableStrategy,\n            ['queueingStrategy']: queueingStrategy = 'count',\n            ...builderOptions\n        } = options;\n\n        this._controller = null;\n        this._builder = Builder.new<T, TNull>(builderOptions);\n        this._getSize = queueingStrategy !== 'bytes' ? chunkLength : chunkByteLength;\n\n        const { ['highWaterMark']: readableHighWaterMark = queueingStrategy === 'bytes' ? 2 ** 14 : 1000 } = { ...readableStrategy };\n        const { ['highWaterMark']: writableHighWaterMark = queueingStrategy === 'bytes' ? 2 ** 14 : 1000 } = { ...writableStrategy };\n\n        this['readable'] = new ReadableStream<V<T>>({\n            ['cancel']: ()  => { this._builder.clear(); },\n            ['pull']: (c) => { this._maybeFlush(this._builder, this._controller = c); },\n            ['start']: (c) => { this._maybeFlush(this._builder, this._controller = c); },\n        }, {\n            'highWaterMark': readableHighWaterMark,\n            'size': queueingStrategy !== 'bytes' ? chunkLength : chunkByteLength,\n        });\n\n        this['writable'] = new WritableStream({\n            ['abort']: () => { this._builder.clear(); },\n            ['write']: () => { this._maybeFlush(this._builder, this._controller); },\n            ['close']: () => { this._maybeFlush(this._builder.finish(), this._controller); },\n        }, {\n            'highWaterMark': writableHighWaterMark,\n            'size': (value: T['TValue'] | TNull) => this._writeValueAndReturnChunkSize(value),\n        });\n    }\n\n    private _writeValueAndReturnChunkSize(value: T['TValue'] | TNull) {\n        const bufferedSize = this._bufferedSize;\n        this._bufferedSize = this._getSize(this._builder.append(value));\n        return this._bufferedSize - bufferedSize;\n    }\n\n    private _maybeFlush(builder: Builder<T, TNull>, controller: ReadableStreamDefaultController<V<T>> | null) {\n        if (controller === null) { return; }\n        if (this._bufferedSize >= controller.desiredSize!) {\n            ++this._numChunks && this._enqueue(controller, builder.toVector());\n        }\n        if (builder.finished) {\n            if (builder.length > 0 || this._numChunks === 0) {\n                ++this._numChunks && this._enqueue(controller, builder.toVector());\n            }\n            if (!this._finished && (this._finished = true)) {\n                this._enqueue(controller, null);\n            }\n        }\n    }\n\n    private _enqueue(controller: ReadableStreamDefaultController<V<T>>, chunk: V<T> | null) {\n        this._bufferedSize = 0;\n        this._controller = null;\n        chunk === null ? controller.close() : controller.enqueue(chunk);\n    }\n}\n\n/** @ignore */ const chunkLength = <T extends DataType = any>(chunk: Vector<T> | Builder<T>) => chunk.length;\n/** @ignore */ const chunkByteLength = <T extends DataType = any>(chunk: Vector<T> | Builder<T>) => chunk.byteLength;\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Vector } from '../vector';\nimport { RecordBatch } from '../recordbatch';\nimport { DictionaryVector } from '../vector/dictionary';\n\n/** @ignore */\nexport type ValueFunc<T> = (idx: number, cols: RecordBatch) => T | null;\n/** @ignore */\nexport type PredicateFunc = (idx: number, cols: RecordBatch) => boolean;\n\n/** @ignore */\nexport abstract class Value<T> {\n    eq(other: Value<T> | T): Predicate {\n        if (!(other instanceof Value)) { other = new Literal(other); }\n        return new Equals(this, other);\n    }\n    le(other: Value<T> | T): Predicate {\n        if (!(other instanceof Value)) { other = new Literal(other); }\n        return new LTeq(this, other);\n    }\n    ge(other: Value<T> | T): Predicate {\n        if (!(other instanceof Value)) { other = new Literal(other); }\n        return new GTeq(this, other);\n    }\n    lt(other: Value<T> | T): Predicate {\n        return new Not(this.ge(other));\n    }\n    gt(other: Value<T> | T): Predicate {\n        return new Not(this.le(other));\n    }\n    ne(other: Value<T> | T): Predicate {\n        return new Not(this.eq(other));\n    }\n}\n\n/** @ignore */\nexport class Literal<T= any> extends Value<T> {\n    constructor(public v: T) { super(); }\n}\n\n/** @ignore */\nexport class Col<T= any> extends Value<T> {\n    // @ts-ignore\n    public vector: Vector;\n    // @ts-ignore\n    public colidx: number;\n\n    constructor(public name: string) { super(); }\n    bind(batch: RecordBatch): (idx: number, batch?: RecordBatch) => any {\n        if (!this.colidx) {\n            // Assume column index doesn't change between calls to bind\n            //this.colidx = cols.findIndex(v => v.name.indexOf(this.name) != -1);\n            this.colidx = -1;\n            const fields = batch.schema.fields;\n            for (let idx = -1; ++idx < fields.length;) {\n                if (fields[idx].name === this.name) {\n                    this.colidx = idx;\n                    break;\n                }\n            }\n            if (this.colidx < 0) { throw new Error(`Failed to bind Col \"${this.name}\"`); }\n        }\n\n        const vec = this.vector = batch.getChildAt(this.colidx)!;\n        return (idx: number) => vec.get(idx);\n    }\n}\n\n/** @ignore */\nexport abstract class Predicate {\n    abstract bind(batch: RecordBatch): PredicateFunc;\n    and(...expr: Predicate[]): And { return new And(this, ...expr); }\n    or(...expr: Predicate[]): Or { return new Or(this, ...expr); }\n    not(): Predicate { return new Not(this); }\n}\n\n/** @ignore */\nexport abstract class ComparisonPredicate<T= any> extends Predicate {\n    constructor(public readonly left: Value<T>, public readonly right: Value<T>) {\n        super();\n    }\n\n    bind(batch: RecordBatch) {\n        if (this.left instanceof Literal) {\n            if (this.right instanceof Literal) {\n                return this._bindLitLit(batch, this.left, this.right);\n            } else { // right is a Col\n\n                return this._bindLitCol(batch, this.left, this.right as Col);\n            }\n        } else { // left is a Col\n            if (this.right instanceof Literal) {\n                return this._bindColLit(batch, this.left as Col, this.right);\n            } else { // right is a Col\n                return this._bindColCol(batch, this.left as Col, this.right as Col);\n            }\n        }\n    }\n\n    protected abstract _bindLitLit(batch: RecordBatch, left: Literal, right: Literal): PredicateFunc;\n    protected abstract _bindColCol(batch: RecordBatch, left: Col, right: Col): PredicateFunc;\n    protected abstract _bindColLit(batch: RecordBatch, col: Col, lit: Literal): PredicateFunc;\n    protected abstract _bindLitCol(batch: RecordBatch, lit: Literal, col: Col): PredicateFunc;\n}\n\n/** @ignore */\nexport abstract class CombinationPredicate extends Predicate {\n    readonly children: Predicate[];\n    constructor(...children: Predicate[]) {\n        super();\n        this.children = children;\n    }\n}\n// add children to prototype so it doesn't get mangled in es2015/umd\n(<any> CombinationPredicate.prototype).children = Object.freeze([]); // freeze for safety\n\n/** @ignore */\nexport class And extends CombinationPredicate {\n    constructor(...children: Predicate[]) {\n        // Flatten any Ands\n        children = children.reduce((accum: Predicate[], p: Predicate): Predicate[] => {\n            return accum.concat(p instanceof And ? p.children : p);\n        }, []);\n        super(...children);\n    }\n    bind(batch: RecordBatch) {\n        const bound = this.children.map((p) => p.bind(batch));\n        return (idx: number, batch: RecordBatch) => bound.every((p) => p(idx, batch));\n    }\n}\n\n/** @ignore */\nexport class Or extends CombinationPredicate {\n    constructor(...children: Predicate[]) {\n        // Flatten any Ors\n        children = children.reduce((accum: Predicate[], p: Predicate): Predicate[] => {\n            return accum.concat(p instanceof Or ? p.children : p);\n        }, []);\n        super(...children);\n    }\n    bind(batch: RecordBatch) {\n        const bound = this.children.map((p) => p.bind(batch));\n        return (idx: number, batch: RecordBatch) => bound.some((p) => p(idx, batch));\n    }\n}\n\n/** @ignore */\nexport class Equals extends ComparisonPredicate {\n    // Helpers used to cache dictionary reverse lookups between calls to bind\n    private lastDictionary: Vector|undefined;\n    private lastKey: number|undefined;\n\n    protected _bindLitLit(_batch: RecordBatch, left: Literal, right: Literal): PredicateFunc {\n        const rtrn: boolean = left.v == right.v;\n        return () => rtrn;\n    }\n\n    protected _bindColCol(batch: RecordBatch, left: Col, right: Col): PredicateFunc {\n        const left_func = left.bind(batch);\n        const right_func = right.bind(batch);\n        return (idx: number, batch: RecordBatch) => left_func(idx, batch) == right_func(idx, batch);\n    }\n\n    protected _bindColLit(batch: RecordBatch, col: Col, lit: Literal): PredicateFunc {\n        const col_func = col.bind(batch);\n        if (col.vector instanceof DictionaryVector) {\n            let key: any;\n            const vector = col.vector as DictionaryVector;\n            if (vector.dictionary !== this.lastDictionary) {\n                key = vector.reverseLookup(lit.v);\n                this.lastDictionary = vector.dictionary;\n                this.lastKey = key;\n            } else {\n                key = this.lastKey;\n            }\n\n            if (key === -1) {\n                // the value doesn't exist in the dictionary - always return\n                // false\n                // TODO: special-case of PredicateFunc that encapsulates this\n                // \"always false\" behavior. That way filtering operations don't\n                // have to bother checking\n                return () => false;\n            } else {\n                return (idx: number) => {\n                    return vector.getKey(idx) === key;\n                };\n            }\n        } else {\n            return (idx: number, cols: RecordBatch) => col_func(idx, cols) == lit.v;\n        }\n    }\n\n    protected _bindLitCol(batch: RecordBatch, lit: Literal, col: Col) {\n        // Equals is commutative\n        return this._bindColLit(batch, col, lit);\n    }\n}\n\n/** @ignore */\nexport class LTeq extends ComparisonPredicate {\n    protected _bindLitLit(_batch: RecordBatch, left: Literal, right: Literal): PredicateFunc {\n        const rtrn: boolean = left.v <= right.v;\n        return () => rtrn;\n    }\n\n    protected _bindColCol(batch: RecordBatch, left: Col, right: Col): PredicateFunc {\n        const left_func = left.bind(batch);\n        const right_func = right.bind(batch);\n        return (idx: number, cols: RecordBatch) => left_func(idx, cols) <= right_func(idx, cols);\n    }\n\n    protected _bindColLit(batch: RecordBatch, col: Col, lit: Literal): PredicateFunc {\n        const col_func = col.bind(batch);\n        return (idx: number, cols: RecordBatch) => col_func(idx, cols) <= lit.v;\n    }\n\n    protected _bindLitCol(batch: RecordBatch, lit: Literal, col: Col) {\n        const col_func = col.bind(batch);\n        return (idx: number, cols: RecordBatch) => lit.v <= col_func(idx, cols);\n    }\n}\n\n/** @ignore */\nexport class GTeq extends ComparisonPredicate {\n    protected _bindLitLit(_batch: RecordBatch, left: Literal, right: Literal): PredicateFunc {\n        const rtrn: boolean = left.v >= right.v;\n        return () => rtrn;\n    }\n\n    protected _bindColCol(batch: RecordBatch, left: Col, right: Col): PredicateFunc {\n        const left_func = left.bind(batch);\n        const right_func = right.bind(batch);\n        return (idx: number, cols: RecordBatch) => left_func(idx, cols) >= right_func(idx, cols);\n    }\n\n    protected _bindColLit(batch: RecordBatch, col: Col, lit: Literal): PredicateFunc {\n        const col_func = col.bind(batch);\n        return (idx: number, cols: RecordBatch) => col_func(idx, cols) >= lit.v;\n    }\n\n    protected _bindLitCol(batch: RecordBatch, lit: Literal, col: Col) {\n        const col_func = col.bind(batch);\n        return (idx: number, cols: RecordBatch) => lit.v >= col_func(idx, cols);\n    }\n}\n\n/** @ignore */\nexport class Not extends Predicate {\n    constructor(public readonly child: Predicate) {\n        super();\n    }\n\n    bind(batch: RecordBatch) {\n        const func = this.child.bind(batch);\n        return (idx: number, batch: RecordBatch) => !func(idx, batch);\n    }\n}\n\n/** @ignore */\nexport class CustomPredicate extends Predicate {\n    constructor(private next: PredicateFunc, private bind_: (batch: RecordBatch) => void) {\n        super();\n    }\n\n    bind(batch: RecordBatch) {\n        this.bind_(batch);\n        return this.next;\n    }\n}\n\nexport function lit(v: any): Value<any> { return new Literal(v); }\nexport function col(n: string): Col<any> { return new Col(n); }\nexport function and(...p: Predicate[]): And { return new And(...p); }\nexport function or(...p: Predicate[]): Or { return new Or(...p); }\nexport function custom(next: PredicateFunc, bind: (batch: RecordBatch) => void) {\n    return new CustomPredicate(next, bind);\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Table } from '../table';\nimport { Vector } from '../vector';\nimport { IntVector } from '../vector/int';\nimport { Field, Schema } from '../schema';\nimport { Predicate, Col } from './predicate';\nimport { RecordBatch } from '../recordbatch';\nimport { VectorType as V } from '../interfaces';\nimport { DataType, Int, Struct, Dictionary } from '../type';\n\n/** @ignore */\nexport type BindFunc = (batch: RecordBatch) => void;\n/** @ignore */\nexport type NextFunc = (idx: number, batch: RecordBatch) => void;\n\nTable.prototype.countBy = function(this: Table, name: Col | string) { return new DataFrame(this.chunks).countBy(name); };\nTable.prototype.scan = function(this: Table, next: NextFunc, bind?: BindFunc) { return new DataFrame(this.chunks).scan(next, bind); };\nTable.prototype.scanReverse = function(this: Table, next: NextFunc, bind?: BindFunc) { return new DataFrame(this.chunks).scanReverse(next, bind); };\nTable.prototype.filter = function(this: Table, predicate: Predicate): FilteredDataFrame { return new DataFrame(this.chunks).filter(predicate); };\n\nexport class DataFrame<T extends { [key: string]: DataType } = any> extends Table<T> {\n    public filter(predicate: Predicate): FilteredDataFrame<T> {\n        return new FilteredDataFrame<T>(this.chunks, predicate);\n    }\n    public scan(next: NextFunc, bind?: BindFunc) {\n        const batches = this.chunks, numBatches = batches.length;\n        for (let batchIndex = -1; ++batchIndex < numBatches;) {\n            // load batches\n            const batch = batches[batchIndex];\n            if (bind) { bind(batch); }\n            // yield all indices\n            for (let index = -1, numRows = batch.length; ++index < numRows;) {\n                next(index, batch);\n            }\n        }\n    }\n    public scanReverse(next: NextFunc, bind?: BindFunc) {\n        const batches = this.chunks, numBatches = batches.length;\n        for (let batchIndex = numBatches; --batchIndex >= 0;) {\n            // load batches\n            const batch = batches[batchIndex];\n            if (bind) { bind(batch); }\n            // yield all indices\n            for (let index = batch.length; --index >= 0;) {\n                next(index, batch);\n            }\n        }\n    }\n    public countBy(name: Col | string) {\n        const batches = this.chunks, numBatches = batches.length;\n        const count_by = typeof name === 'string' ? new Col(name) : name as Col;\n        // Assume that all dictionary batches are deltas, which means that the\n        // last record batch has the most complete dictionary\n        count_by.bind(batches[numBatches - 1]);\n        const vector = count_by.vector as V<Dictionary>;\n        if (!DataType.isDictionary(vector.type)) {\n            throw new Error('countBy currently only supports dictionary-encoded columns');\n        }\n\n        const countByteLength = Math.ceil(Math.log(vector.length) / Math.log(256));\n        const CountsArrayType = countByteLength == 4 ? Uint32Array :\n                                countByteLength >= 2 ? Uint16Array : Uint8Array;\n\n        const counts = new CountsArrayType(vector.dictionary.length);\n        for (let batchIndex = -1; ++batchIndex < numBatches;) {\n            // load batches\n            const batch = batches[batchIndex];\n            // rebind the countBy Col\n            count_by.bind(batch);\n            const keys = (count_by.vector as V<Dictionary>).indices;\n            // yield all indices\n            for (let index = -1, numRows = batch.length; ++index < numRows;) {\n                let key = keys.get(index);\n                if (key !== null) { counts[key]++; }\n            }\n        }\n        return new CountByResult(vector.dictionary, IntVector.from(counts));\n    }\n}\n\n/** @ignore */\nexport class CountByResult<T extends DataType = any, TCount extends Int = Int> extends Table<{ values: T,  counts: TCount }> {\n    constructor(values: Vector<T>, counts: V<TCount>) {\n        type R = { values: T, counts: TCount };\n        const schema = new Schema<R>([\n            new Field('values', values.type),\n            new Field('counts', counts.type)\n        ]);\n        super(new RecordBatch<R>(schema, counts.length, [values, counts]));\n    }\n    public toJSON(): Object {\n        const values = this.getColumnAt(0)!;\n        const counts = this.getColumnAt(1)!;\n        const result = {} as { [k: string]: number | null };\n        for (let i = -1; ++i < this.length;) {\n            result[values.get(i)] = counts.get(i);\n        }\n        return result;\n    }\n}\n\n/** @ignore */\nexport class FilteredDataFrame<T extends { [key: string]: DataType } = any> extends DataFrame<T> {\n    private _predicate: Predicate;\n    constructor (batches: RecordBatch<T>[], predicate: Predicate) {\n        super(batches);\n        this._predicate = predicate;\n    }\n    public scan(next: NextFunc, bind?: BindFunc) {\n        // inlined version of this:\n        // this.parent.scan((idx, columns) => {\n        //     if (this.predicate(idx, columns)) next(idx, columns);\n        // });\n        const batches = this._chunks;\n        const numBatches = batches.length;\n        for (let batchIndex = -1; ++batchIndex < numBatches;) {\n            // load batches\n            const batch = batches[batchIndex];\n            const predicate = this._predicate.bind(batch);\n            let isBound = false;\n            // yield all indices\n            for (let index = -1, numRows = batch.length; ++index < numRows;) {\n                if (predicate(index, batch)) {\n                    // bind batches lazily - if predicate doesn't match anything\n                    // in the batch we don't need to call bind on the batch\n                    if (bind && !isBound) {\n                        bind(batch);\n                        isBound = true;\n                    }\n                    next(index, batch);\n                }\n            }\n        }\n    }\n    public scanReverse(next: NextFunc, bind?: BindFunc) {\n        const batches = this._chunks;\n        const numBatches = batches.length;\n        for (let batchIndex = numBatches; --batchIndex >= 0;) {\n            // load batches\n            const batch = batches[batchIndex];\n            const predicate = this._predicate.bind(batch);\n            let isBound = false;\n            // yield all indices\n            for (let index = batch.length; --index >= 0;) {\n                if (predicate(index, batch)) {\n                    // bind batches lazily - if predicate doesn't match anything\n                    // in the batch we don't need to call bind on the batch\n                    if (bind && !isBound) {\n                        bind(batch);\n                        isBound = true;\n                    }\n                    next(index, batch);\n                }\n            }\n        }\n    }\n    public count(): number {\n        // inlined version of this:\n        // let sum = 0;\n        // this.parent.scan((idx, columns) => {\n        //     if (this.predicate(idx, columns)) ++sum;\n        // });\n        // return sum;\n        let sum = 0;\n        const batches = this._chunks;\n        const numBatches = batches.length;\n        for (let batchIndex = -1; ++batchIndex < numBatches;) {\n            // load batches\n            const batch = batches[batchIndex];\n            const predicate = this._predicate.bind(batch);\n            // yield all indices\n            for (let index = -1, numRows = batch.length; ++index < numRows;) {\n                if (predicate(index, batch)) { ++sum; }\n            }\n        }\n        return sum;\n    }\n    public *[Symbol.iterator](): IterableIterator<Struct<T>['TValue']> {\n        // inlined version of this:\n        // this.parent.scan((idx, columns) => {\n        //     if (this.predicate(idx, columns)) next(idx, columns);\n        // });\n        const batches = this._chunks;\n        const numBatches = batches.length;\n        for (let batchIndex = -1; ++batchIndex < numBatches;) {\n            // load batches\n            const batch = batches[batchIndex];\n            // TODO: bind batches lazily\n            // If predicate doesn't match anything in the batch we don't need\n            // to bind the callback\n            const predicate = this._predicate.bind(batch);\n            // yield all indices\n            for (let index = -1, numRows = batch.length; ++index < numRows;) {\n                if (predicate(index, batch)) { yield batch.get(index) as any; }\n            }\n        }\n    }\n    public filter(predicate: Predicate): FilteredDataFrame<T> {\n        return new FilteredDataFrame<T>(\n            this._chunks,\n            this._predicate.and(predicate)\n        );\n    }\n    public countBy(name: Col | string) {\n        const batches = this._chunks, numBatches = batches.length;\n        const count_by = typeof name === 'string' ? new Col(name) : name as Col;\n        // Assume that all dictionary batches are deltas, which means that the\n        // last record batch has the most complete dictionary\n        count_by.bind(batches[numBatches - 1]);\n        const vector = count_by.vector as V<Dictionary>;\n        if (!DataType.isDictionary(vector.type)) {\n            throw new Error('countBy currently only supports dictionary-encoded columns');\n        }\n\n        const countByteLength = Math.ceil(Math.log(vector.length) / Math.log(256));\n        const CountsArrayType = countByteLength == 4 ? Uint32Array :\n                                countByteLength >= 2 ? Uint16Array : Uint8Array;\n\n        const counts = new CountsArrayType(vector.dictionary.length);\n\n        for (let batchIndex = -1; ++batchIndex < numBatches;) {\n            // load batches\n            const batch = batches[batchIndex];\n            const predicate = this._predicate.bind(batch);\n            // rebind the countBy Col\n            count_by.bind(batch);\n            const keys = (count_by.vector as V<Dictionary>).indices;\n            // yield all indices\n            for (let index = -1, numRows = batch.length; ++index < numRows;) {\n                let key = keys.get(index);\n                if (key !== null && predicate(index, batch)) { counts[key]++; }\n            }\n        }\n        return new CountByResult(vector.dictionary, IntVector.from(counts));\n    }\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nexport { ArrowType, DateUnit, IntervalUnit, MessageHeader, MetadataVersion, Precision, TimeUnit, Type, UnionMode, BufferType } from './enum';\nexport { Data } from './data';\nexport {\n    DataType,\n    Null,\n    Bool,\n    Int, Int8, Int16, Int32, Int64, Uint8, Uint16, Uint32, Uint64,\n    Float, Float16, Float32, Float64,\n    Utf8,\n    Binary,\n    FixedSizeBinary,\n    Date_, DateDay, DateMillisecond,\n    Timestamp, TimestampSecond, TimestampMillisecond, TimestampMicrosecond, TimestampNanosecond,\n    Time, TimeSecond, TimeMillisecond, TimeMicrosecond, TimeNanosecond,\n    Decimal,\n    List,\n    Struct,\n    Union, DenseUnion, SparseUnion,\n    Dictionary,\n    Interval, IntervalDayTime, IntervalYearMonth,\n    FixedSizeList,\n    Map_,\n} from './type';\n\nexport { Table } from './table';\nexport { Column } from './column';\nexport { Visitor } from './visitor';\nexport { Schema, Field } from './schema';\nexport {\n    Vector,\n    BaseVector,\n    BinaryVector,\n    BoolVector,\n    Chunked,\n    DateVector, DateDayVector, DateMillisecondVector,\n    DecimalVector,\n    DictionaryVector,\n    FixedSizeBinaryVector,\n    FixedSizeListVector,\n    FloatVector, Float16Vector, Float32Vector, Float64Vector,\n    IntervalVector, IntervalDayTimeVector, IntervalYearMonthVector,\n    IntVector, Int8Vector, Int16Vector, Int32Vector, Int64Vector, Uint8Vector, Uint16Vector, Uint32Vector, Uint64Vector,\n    ListVector,\n    MapVector,\n    NullVector,\n    StructVector,\n    TimestampVector, TimestampSecondVector, TimestampMillisecondVector, TimestampMicrosecondVector, TimestampNanosecondVector,\n    TimeVector, TimeSecondVector, TimeMillisecondVector, TimeMicrosecondVector, TimeNanosecondVector,\n    UnionVector, DenseUnionVector, SparseUnionVector,\n    Utf8Vector,\n} from './vector/index';\n\nexport {\n    Builder,\n    BinaryBuilder,\n    BoolBuilder,\n    DateBuilder, DateDayBuilder, DateMillisecondBuilder,\n    DecimalBuilder,\n    DictionaryBuilder,\n    FixedSizeBinaryBuilder,\n    FixedSizeListBuilder,\n    FloatBuilder, Float16Builder, Float32Builder, Float64Builder,\n    IntervalBuilder, IntervalDayTimeBuilder, IntervalYearMonthBuilder,\n    IntBuilder, Int8Builder, Int16Builder, Int32Builder, Int64Builder, Uint8Builder, Uint16Builder, Uint32Builder, Uint64Builder,\n    ListBuilder,\n    MapBuilder,\n    NullBuilder,\n    StructBuilder,\n    TimestampBuilder, TimestampSecondBuilder, TimestampMillisecondBuilder, TimestampMicrosecondBuilder, TimestampNanosecondBuilder,\n    TimeBuilder, TimeSecondBuilder, TimeMillisecondBuilder, TimeMicrosecondBuilder, TimeNanosecondBuilder,\n    UnionBuilder, DenseUnionBuilder, SparseUnionBuilder,\n    Utf8Builder,\n} from './builder/index';\n\nexport { ByteStream, AsyncByteStream, AsyncByteQueue, ReadableSource, WritableSink } from './io/stream';\nexport { RecordBatchReader, RecordBatchFileReader, RecordBatchStreamReader, AsyncRecordBatchFileReader, AsyncRecordBatchStreamReader } from './ipc/reader';\nexport { RecordBatchWriter, RecordBatchFileWriter, RecordBatchStreamWriter, RecordBatchJSONWriter } from './ipc/writer';\nexport { MessageReader, AsyncMessageReader, JSONMessageReader } from './ipc/message';\nexport { Message } from './ipc/metadata/message';\nexport { RecordBatch } from './recordbatch';\nexport { ArrowJSONLike, FileHandle, Readable, Writable, ReadableWritable, ReadableDOMStreamOptions } from './io/interfaces';\nexport { DataFrame, FilteredDataFrame, CountByResult, BindFunc, NextFunc } from './compute/dataframe';\n\nimport * as util_bn_ from './util/bn';\nimport * as util_int_ from './util/int';\nimport * as util_bit_ from './util/bit';\nimport * as util_math_ from './util/math';\nimport * as util_buffer_ from './util/buffer';\nimport * as util_vector_ from './util/vector';\nimport * as predicate from './compute/predicate';\n\nexport { predicate };\n/** @ignore */\nexport const util = {\n    ...util_bn_,\n    ...util_int_,\n    ...util_bit_,\n    ...util_math_,\n    ...util_buffer_,\n    ...util_vector_\n};\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport streamAdapters from './io/adapters';\nimport { Builder } from './builder/index';\nimport { RecordBatchReader } from './ipc/reader';\nimport { RecordBatchWriter } from './ipc/writer';\nimport { toDOMStream } from './io/whatwg/iterable';\nimport { builderThroughDOMStream } from './io/whatwg/builder';\nimport { recordBatchReaderThroughDOMStream } from './io/whatwg/reader';\nimport { recordBatchWriterThroughDOMStream } from './io/whatwg/writer';\n\nstreamAdapters.toDOMStream = toDOMStream;\nBuilder['throughDOM'] = builderThroughDOMStream;\nRecordBatchReader['throughDOM'] = recordBatchReaderThroughDOMStream;\nRecordBatchWriter['throughDOM'] = recordBatchWriterThroughDOMStream;\n\nexport {\n    ArrowType, DateUnit, IntervalUnit, MessageHeader, MetadataVersion, Precision, TimeUnit, Type, UnionMode, BufferType,\n    Data,\n    DataType,\n    Null,\n    Bool,\n    Int, Int8, Int16, Int32, Int64, Uint8, Uint16, Uint32, Uint64,\n    Float, Float16, Float32, Float64,\n    Utf8,\n    Binary,\n    FixedSizeBinary,\n    Date_, DateDay, DateMillisecond,\n    Timestamp, TimestampSecond, TimestampMillisecond, TimestampMicrosecond, TimestampNanosecond,\n    Time, TimeSecond, TimeMillisecond, TimeMicrosecond, TimeNanosecond,\n    Decimal,\n    List,\n    Struct,\n    Union, DenseUnion, SparseUnion,\n    Dictionary,\n    Interval, IntervalDayTime, IntervalYearMonth,\n    FixedSizeList,\n    Map_,\n    Table,\n    Column,\n    Schema, Field,\n    Visitor,\n    Vector,\n    BaseVector,\n    BinaryVector,\n    BoolVector,\n    Chunked,\n    DateVector, DateDayVector, DateMillisecondVector,\n    DecimalVector,\n    DictionaryVector,\n    FixedSizeBinaryVector,\n    FixedSizeListVector,\n    FloatVector, Float16Vector, Float32Vector, Float64Vector,\n    IntervalVector, IntervalDayTimeVector, IntervalYearMonthVector,\n    IntVector, Int8Vector, Int16Vector, Int32Vector, Int64Vector, Uint8Vector, Uint16Vector, Uint32Vector, Uint64Vector,\n    ListVector,\n    MapVector,\n    NullVector,\n    StructVector,\n    TimestampVector, TimestampSecondVector, TimestampMillisecondVector, TimestampMicrosecondVector, TimestampNanosecondVector,\n    TimeVector, TimeSecondVector, TimeMillisecondVector, TimeMicrosecondVector, TimeNanosecondVector,\n    UnionVector, DenseUnionVector, SparseUnionVector,\n    Utf8Vector,\n    ByteStream, AsyncByteStream, AsyncByteQueue, ReadableSource, WritableSink,\n    RecordBatchReader, RecordBatchFileReader, RecordBatchStreamReader, AsyncRecordBatchFileReader, AsyncRecordBatchStreamReader,\n    RecordBatchWriter, RecordBatchFileWriter, RecordBatchStreamWriter, RecordBatchJSONWriter,\n    MessageReader, AsyncMessageReader, JSONMessageReader,\n    Message,\n    RecordBatch,\n    ArrowJSONLike, FileHandle, Readable, Writable, ReadableWritable, ReadableDOMStreamOptions,\n    DataFrame, FilteredDataFrame, CountByResult, BindFunc, NextFunc,\n    predicate,\n    util,\n    Builder,\n    BinaryBuilder,\n    BoolBuilder,\n    DateBuilder, DateDayBuilder, DateMillisecondBuilder,\n    DecimalBuilder,\n    DictionaryBuilder,\n    FixedSizeBinaryBuilder,\n    FixedSizeListBuilder,\n    FloatBuilder, Float16Builder, Float32Builder, Float64Builder,\n    IntervalBuilder, IntervalDayTimeBuilder, IntervalYearMonthBuilder,\n    IntBuilder, Int8Builder, Int16Builder, Int32Builder, Int64Builder, Uint8Builder, Uint16Builder, Uint32Builder, Uint64Builder,\n    ListBuilder,\n    MapBuilder,\n    NullBuilder,\n    StructBuilder,\n    TimestampBuilder, TimestampSecondBuilder, TimestampMillisecondBuilder, TimestampMicrosecondBuilder, TimestampNanosecondBuilder,\n    TimeBuilder, TimeSecondBuilder, TimeMillisecondBuilder, TimeMicrosecondBuilder, TimeNanosecondBuilder,\n    UnionBuilder, DenseUnionBuilder, SparseUnionBuilder,\n    Utf8Builder,\n} from './Arrow';\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { toUint8Array } from '../../util/buffer';\nimport { ReadableDOMStreamOptions } from '../../io/interfaces';\nimport { isIterable, isAsyncIterable } from '../../util/compat';\n\n/** @ignore */\nexport function toDOMStream<T>(source: Iterable<T> | AsyncIterable<T>, options?: ReadableDOMStreamOptions): ReadableStream<T> {\n    if (isAsyncIterable<T>(source)) { return asyncIterableAsReadableDOMStream(source, options); }\n    if (isIterable<T>(source)) { return iterableAsReadableDOMStream(source, options); }\n    /* istanbul ignore next */\n    throw new Error(`toDOMStream() must be called with an Iterable or AsyncIterable`);\n}\n\n/** @ignore */\nfunction iterableAsReadableDOMStream<T>(source: Iterable<T>, options?: ReadableDOMStreamOptions) {\n\n    let it: Iterator<T> | null = null;\n    const bm = (options && options.type === 'bytes') || false;\n    const hwm = options && options.highWaterMark || (2 ** 24);\n\n    return new ReadableStream<T>({\n        ...options as any,\n        start(controller) { next(controller, it || (it = source[Symbol.iterator]())); },\n        pull(controller) { it ? (next(controller, it)) : controller.close(); },\n        cancel() { (it && (it.return && it.return()) || true) && (it = null); }\n    }, { highWaterMark: bm ? hwm : undefined, ...options });\n\n    function next(controller: ReadableStreamDefaultController<T>, it: Iterator<T>) {\n        let buf: Uint8Array;\n        let r: IteratorResult<T> | null = null;\n        let size = controller.desiredSize || null;\n        while (!(r = it.next(bm ? size : null)).done) {\n            if (ArrayBuffer.isView(r.value) && (buf = toUint8Array(r.value))) {\n                size != null && bm && (size = size - buf.byteLength + 1);\n                r.value = <any> buf;\n            }\n            controller.enqueue(r.value);\n            if (size != null && --size <= 0) { return; }\n        }\n        controller.close();\n    }\n}\n\n/** @ignore */\nfunction asyncIterableAsReadableDOMStream<T>(source: AsyncIterable<T>, options?: ReadableDOMStreamOptions) {\n\n    let it: AsyncIterator<T> | null = null;\n    const bm = (options && options.type === 'bytes') || false;\n    const hwm = options && options.highWaterMark || (2 ** 24);\n\n    return new ReadableStream<T>({\n        ...options as any,\n        async start(controller) { await next(controller, it || (it = source[Symbol.asyncIterator]())); },\n        async pull(controller) { it ? (await next(controller, it)) : controller.close(); },\n        async cancel() { (it && (it.return && await it.return()) || true) && (it = null); },\n    }, { highWaterMark: bm ? hwm : undefined, ...options });\n\n    async function next(controller: ReadableStreamDefaultController<T>, it: AsyncIterator<T>) {\n        let buf: Uint8Array;\n        let r: IteratorResult<T> | null = null;\n        let size = controller.desiredSize || null;\n        while (!(r = await it.next(bm ? size : null)).done) {\n            if (ArrayBuffer.isView(r.value) && (buf = toUint8Array(r.value))) {\n                size != null && bm && (size = size - buf.byteLength + 1);\n                r.value = <any> buf;\n            }\n            controller.enqueue(r.value);\n            if (size != null && --size <= 0) { return; }\n        }\n        controller.close();\n    }\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { DataType } from '../../type';\nimport { RecordBatch } from '../../recordbatch';\nimport { AsyncByteQueue } from '../../io/stream';\nimport { RecordBatchReader } from '../../ipc/reader';\n\n/** @ignore */\nexport function recordBatchReaderThroughDOMStream<T extends { [key: string]: DataType } = any>(writableStrategy?: ByteLengthQueuingStrategy, readableStrategy?: { autoDestroy: boolean }) {\n\n    const queue = new AsyncByteQueue();\n    let reader: RecordBatchReader<T> | null = null;\n\n    const readable = new ReadableStream<RecordBatch<T>>({\n        async cancel() { await queue.close(); },\n        async start(controller) { await next(controller, reader || (reader = await open())); },\n        async pull(controller) { reader ? await next(controller, reader) : controller.close(); }\n    });\n\n    return { writable: new WritableStream(queue, { 'highWaterMark': 2 ** 14, ...writableStrategy }), readable };\n\n    async function open() {\n        return await (await RecordBatchReader.from<T>(queue)).open(readableStrategy);\n    }\n\n    async function next(controller: ReadableStreamDefaultController<RecordBatch<T>>, reader: RecordBatchReader<T>) {\n        let size = controller.desiredSize;\n        let r: IteratorResult<RecordBatch<T>> | null = null;\n        while (!(r = await reader.next()).done) {\n            controller.enqueue(r.value);\n            if (size != null && --size <= 0) {\n                return;\n            }\n        }\n        controller.close();\n    }\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { DataType } from '../../type';\nimport { RecordBatch } from '../../recordbatch';\nimport { AsyncByteStream } from '../../io/stream';\nimport { RecordBatchWriter } from '../../ipc/writer';\n\n/** @ignore */\nexport function recordBatchWriterThroughDOMStream<T extends { [key: string]: DataType } = any>(\n    this: typeof RecordBatchWriter,\n    writableStrategy?: QueuingStrategy<RecordBatch<T>> & { autoDestroy: boolean },\n    readableStrategy?: { highWaterMark?: number, size?: any }\n) {\n\n    const writer = new this<T>(writableStrategy);\n    const reader = new AsyncByteStream(writer);\n    const readable = new ReadableStream({\n        type: 'bytes',\n        async cancel() { await reader.cancel(); },\n        async pull(controller) { await next(controller); },\n        async start(controller) { await next(controller); },\n    }, { 'highWaterMark': 2 ** 14, ...readableStrategy });\n\n    return { writable: new WritableStream(writer, writableStrategy), readable };\n\n    async function next(controller: ReadableStreamDefaultController<Uint8Array>) {\n        let buf: Uint8Array | null = null;\n        let size = controller.desiredSize;\n        while (buf = await reader.read(size || null)) {\n            controller.enqueue(buf);\n            if (size != null && (size -= buf.byteLength) <= 0) { return; }\n        }\n        controller.close();\n    }\n}\n","/**\n * @license\n * Copyright 2018-2021 Streamlit Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { Table, Type } from \"apache-arrow\";\nvar ArrowTable = /** @class */ (function () {\n    function ArrowTable(dataBuffer, indexBuffer, columnsBuffer, styler) {\n        var _this = this;\n        this.getCell = function (rowIndex, columnIndex) {\n            var isBlankCell = rowIndex < _this.headerRows && columnIndex < _this.headerColumns;\n            var isIndexCell = rowIndex >= _this.headerRows && columnIndex < _this.headerColumns;\n            var isColumnsCell = rowIndex < _this.headerRows && columnIndex >= _this.headerColumns;\n            if (isBlankCell) {\n                var classNames = [\"blank\"];\n                if (columnIndex > 0) {\n                    classNames.push(\"level\" + rowIndex);\n                }\n                return {\n                    type: \"blank\",\n                    classNames: classNames.join(\" \"),\n                    content: \"\"\n                };\n            }\n            else if (isColumnsCell) {\n                var dataColumnIndex = columnIndex - _this.headerColumns;\n                var classNames = [\n                    \"col_heading\",\n                    \"level\" + rowIndex,\n                    \"col\" + dataColumnIndex\n                ];\n                return {\n                    type: \"columns\",\n                    classNames: classNames.join(\" \"),\n                    content: _this.getContent(_this.columnsTable, dataColumnIndex, rowIndex)\n                };\n            }\n            else if (isIndexCell) {\n                var dataRowIndex = rowIndex - _this.headerRows;\n                var classNames = [\n                    \"row_heading\",\n                    \"level\" + columnIndex,\n                    \"row\" + dataRowIndex\n                ];\n                return {\n                    type: \"index\",\n                    id: \"T_\" + _this.uuid + \"level\" + columnIndex + \"_row\" + dataRowIndex,\n                    classNames: classNames.join(\" \"),\n                    content: _this.getContent(_this.indexTable, dataRowIndex, columnIndex)\n                };\n            }\n            else {\n                var dataRowIndex = rowIndex - _this.headerRows;\n                var dataColumnIndex = columnIndex - _this.headerColumns;\n                var classNames = [\n                    \"data\",\n                    \"row\" + dataRowIndex,\n                    \"col\" + dataColumnIndex\n                ];\n                var content = _this.styler\n                    ? _this.getContent(_this.styler.displayValuesTable, dataRowIndex, dataColumnIndex)\n                    : _this.getContent(_this.dataTable, dataRowIndex, dataColumnIndex);\n                return {\n                    type: \"data\",\n                    id: \"T_\" + _this.uuid + \"row\" + dataRowIndex + \"_col\" + dataColumnIndex,\n                    classNames: classNames.join(\" \"),\n                    content: content\n                };\n            }\n        };\n        this.getContent = function (table, rowIndex, columnIndex) {\n            var column = table.getColumnAt(columnIndex);\n            if (column === null) {\n                return \"\";\n            }\n            var columnTypeId = _this.getColumnTypeId(table, columnIndex);\n            switch (columnTypeId) {\n                case Type.Timestamp: {\n                    return _this.nanosToDate(column.get(rowIndex));\n                }\n                default: {\n                    return column.get(rowIndex);\n                }\n            }\n        };\n        this.dataTable = Table.from(dataBuffer);\n        this.indexTable = Table.from(indexBuffer);\n        this.columnsTable = Table.from(columnsBuffer);\n        this.styler = styler\n            ? {\n                caption: styler.caption,\n                displayValuesTable: Table.from(styler.displayValues),\n                styles: styler.styles,\n                uuid: styler.uuid\n            }\n            : undefined;\n    }\n    Object.defineProperty(ArrowTable.prototype, \"rows\", {\n        get: function () {\n            return this.indexTable.length + this.columnsTable.numCols;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ArrowTable.prototype, \"columns\", {\n        get: function () {\n            return this.indexTable.numCols + this.columnsTable.length;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ArrowTable.prototype, \"headerRows\", {\n        get: function () {\n            return this.rows - this.dataRows;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ArrowTable.prototype, \"headerColumns\", {\n        get: function () {\n            return this.columns - this.dataColumns;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ArrowTable.prototype, \"dataRows\", {\n        get: function () {\n            return this.dataTable.length;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ArrowTable.prototype, \"dataColumns\", {\n        get: function () {\n            return this.dataTable.numCols;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ArrowTable.prototype, \"uuid\", {\n        get: function () {\n            return this.styler && this.styler.uuid;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ArrowTable.prototype, \"caption\", {\n        get: function () {\n            return this.styler && this.styler.caption;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ArrowTable.prototype, \"styles\", {\n        get: function () {\n            return this.styler && this.styler.styles;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ArrowTable.prototype, \"table\", {\n        get: function () {\n            return this.dataTable;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ArrowTable.prototype, \"index\", {\n        get: function () {\n            return this.indexTable;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ArrowTable.prototype, \"columnTable\", {\n        get: function () {\n            return this.columnsTable;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Serialize arrow table.\n     */\n    ArrowTable.prototype.serialize = function () {\n        return {\n            data: this.dataTable.serialize(),\n            index: this.indexTable.serialize(),\n            columns: this.columnsTable.serialize()\n        };\n    };\n    /**\n     * Returns apache-arrow specific typeId of column.\n     */\n    ArrowTable.prototype.getColumnTypeId = function (table, columnIndex) {\n        return table.schema.fields[columnIndex].type.typeId;\n    };\n    ArrowTable.prototype.nanosToDate = function (nanos) {\n        return new Date(nanos / 1e6);\n    };\n    return ArrowTable;\n}());\nexport { ArrowTable };\n","/**\n * @license\n * Copyright 2018-2021 Streamlit Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\n// Safari doesn't support the EventTarget class, so we use a shim.\nimport { EventTarget } from \"event-target-shim\";\nimport { ArrowTable } from \"./ArrowTable\";\n/** Messages from Component -> Streamlit */\nvar ComponentMessageType;\n(function (ComponentMessageType) {\n    // A component sends this message when it's ready to receive messages\n    // from Streamlit. Streamlit won't send any messages until it gets this.\n    // Data: { apiVersion: number }\n    ComponentMessageType[\"COMPONENT_READY\"] = \"streamlit:componentReady\";\n    // The component has a new widget value. Send it back to Streamlit, which\n    // will then re-run the app.\n    // Data: { value: any }\n    ComponentMessageType[\"SET_COMPONENT_VALUE\"] = \"streamlit:setComponentValue\";\n    // The component has a new height for its iframe.\n    // Data: { height: number }\n    ComponentMessageType[\"SET_FRAME_HEIGHT\"] = \"streamlit:setFrameHeight\";\n})(ComponentMessageType || (ComponentMessageType = {}));\n/**\n * Streamlit communication API.\n *\n * Components can send data to Streamlit via the functions defined here,\n * and receive data from Streamlit via the `events` property.\n */\nvar Streamlit = /** @class */ (function () {\n    function Streamlit() {\n    }\n    /**\n     * The Streamlit component API version we're targetting.\n     * There's currently only 1!\n     */\n    Streamlit.API_VERSION = 1;\n    Streamlit.RENDER_EVENT = \"streamlit:render\";\n    /** Dispatches events received from Streamlit. */\n    Streamlit.events = new EventTarget();\n    Streamlit.registeredMessageListener = false;\n    /**\n     * Tell Streamlit that the component is ready to start receiving data.\n     * Streamlit will defer emitting RENDER events until it receives the\n     * COMPONENT_READY message.\n     */\n    Streamlit.setComponentReady = function () {\n        if (!Streamlit.registeredMessageListener) {\n            // Register for message events if we haven't already\n            window.addEventListener(\"message\", Streamlit.onMessageEvent);\n            Streamlit.registeredMessageListener = true;\n        }\n        Streamlit.sendBackMsg(ComponentMessageType.COMPONENT_READY, {\n            apiVersion: Streamlit.API_VERSION\n        });\n    };\n    /**\n     * Report the component's height to Streamlit.\n     * This should be called every time the component changes its DOM - that is,\n     * when it's first loaded, and any time it updates.\n     */\n    Streamlit.setFrameHeight = function (height) {\n        if (height === undefined) {\n            // `height` is optional. If undefined, it defaults to scrollHeight,\n            // which is the entire height of the element minus its border,\n            // scrollbar, and margin.\n            height = document.body.scrollHeight;\n        }\n        if (height === Streamlit.lastFrameHeight) {\n            // Don't bother updating if our height hasn't changed.\n            return;\n        }\n        Streamlit.lastFrameHeight = height;\n        Streamlit.sendBackMsg(ComponentMessageType.SET_FRAME_HEIGHT, { height: height });\n    };\n    /**\n     * Set the component's value. This value will be returned to the Python\n     * script, and the script will be re-run.\n     *\n     * For example:\n     *\n     * JavaScript:\n     * Streamlit.setComponentValue(\"ahoy!\")\n     *\n     * Python:\n     * value = st.my_component(...)\n     * st.write(value) # -> \"ahoy!\"\n     *\n     * The value must be an ArrowTable, a typed array, an ArrayBuffer, or be\n     * serializable to JSON.\n     */\n    Streamlit.setComponentValue = function (value) {\n        var dataType;\n        if (value instanceof ArrowTable) {\n            dataType = \"dataframe\";\n            value = value.serialize();\n        }\n        else if (isTypedArray(value)) {\n            // All typed arrays get sent as Uint8Array, because that's what our\n            // protobuf library uses for the \"bytes\" field type.\n            dataType = \"bytes\";\n            value = new Uint8Array(value.buffer);\n        }\n        else if (value instanceof ArrayBuffer) {\n            dataType = \"bytes\";\n            value = new Uint8Array(value);\n        }\n        else {\n            dataType = \"json\";\n        }\n        Streamlit.sendBackMsg(ComponentMessageType.SET_COMPONENT_VALUE, {\n            value: value,\n            dataType: dataType\n        });\n    };\n    /** Receive a ForwardMsg from the Streamlit app */\n    Streamlit.onMessageEvent = function (event) {\n        var type = event.data[\"type\"];\n        switch (type) {\n            case Streamlit.RENDER_EVENT:\n                Streamlit.onRenderMessage(event.data);\n                break;\n        }\n    };\n    /**\n     * Handle an untyped Streamlit render event and redispatch it as a\n     * StreamlitRenderEvent.\n     */\n    Streamlit.onRenderMessage = function (data) {\n        var args = data[\"args\"];\n        if (args == null) {\n            console.error(\"Got null args in onRenderMessage. This should never happen\");\n            args = {};\n        }\n        // Parse our dataframe arguments with arrow, and merge them into our args dict\n        var dataframeArgs = data[\"dfs\"] && data[\"dfs\"].length > 0\n            ? Streamlit.argsDataframeToObject(data[\"dfs\"])\n            : {};\n        args = __assign(__assign({}, args), dataframeArgs);\n        var disabled = Boolean(data[\"disabled\"]);\n        var theme = data[\"theme\"];\n        if (theme) {\n            _injectTheme(theme);\n        }\n        // Dispatch a render event!\n        var eventData = { disabled: disabled, args: args, theme: theme };\n        var event = new CustomEvent(Streamlit.RENDER_EVENT, {\n            detail: eventData\n        });\n        Streamlit.events.dispatchEvent(event);\n    };\n    Streamlit.argsDataframeToObject = function (argsDataframe) {\n        var argsDataframeArrow = argsDataframe.map(function (_a) {\n            var key = _a.key, value = _a.value;\n            return [key, Streamlit.toArrowTable(value)];\n        });\n        return Object.fromEntries(argsDataframeArrow);\n    };\n    Streamlit.toArrowTable = function (df) {\n        var _a = df.data, data = _a.data, index = _a.index, columns = _a.columns, styler = _a.styler;\n        return new ArrowTable(data, index, columns, styler);\n    };\n    /** Post a message to the Streamlit app. */\n    Streamlit.sendBackMsg = function (type, data) {\n        window.parent.postMessage(__assign({ isStreamlitMessage: true, type: type }, data), \"*\");\n    };\n    return Streamlit;\n}());\nexport { Streamlit };\nvar _injectTheme = function (theme) {\n    var style = document.createElement(\"style\");\n    document.head.appendChild(style);\n    style.innerHTML = \"\\n    :root {\\n      --primary-color: \" + theme.primaryColor + \";\\n      --background-color: \" + theme.backgroundColor + \";\\n      --secondary-background-color: \" + theme.secondaryBackgroundColor + \";\\n      --text-color: \" + theme.textColor + \";\\n      --font: \" + theme.font + \";\\n    }\\n\\n    body {\\n      background-color: var(--background-color);\\n      color: var(--text-color);\\n    }\\n  \";\n};\n/** True if the value is a TypedArray. */\nfunction isTypedArray(value) {\n    var isBigIntArray = false;\n    try {\n        isBigIntArray =\n            value instanceof BigInt64Array || value instanceof BigUint64Array;\n    }\n    catch (e) {\n        // Ignore cause Safari does not support this\n        // https://caniuse.com/mdn-javascript_builtins_bigint64array\n    }\n    return (value instanceof Int8Array ||\n        value instanceof Uint8Array ||\n        value instanceof Uint8ClampedArray ||\n        value instanceof Int16Array ||\n        value instanceof Uint16Array ||\n        value instanceof Int32Array ||\n        value instanceof Uint32Array ||\n        value instanceof Float32Array ||\n        value instanceof Float64Array ||\n        isBigIntArray);\n}\n","/**\n * @license\n * Copyright 2018-2021 Streamlit Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport hoistNonReactStatics from \"hoist-non-react-statics\";\nimport React from \"react\";\nimport { Streamlit } from \"./streamlit\";\n/**\n * Optional Streamlit React-based component base class.\n *\n * You are not required to extend this base class to create a Streamlit\n * component. If you decide not to extend it, you should implement the\n * `componentDidMount` and `componentDidUpdate` functions in your own class,\n * so that your plugin properly resizes.\n */\nvar StreamlitComponentBase = /** @class */ (function (_super) {\n    __extends(StreamlitComponentBase, _super);\n    function StreamlitComponentBase() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    StreamlitComponentBase.prototype.componentDidMount = function () {\n        // After we're rendered for the first time, tell Streamlit that our height\n        // has changed.\n        Streamlit.setFrameHeight();\n    };\n    StreamlitComponentBase.prototype.componentDidUpdate = function () {\n        // After we're updated, tell Streamlit that our height may have changed.\n        Streamlit.setFrameHeight();\n    };\n    return StreamlitComponentBase;\n}(React.PureComponent));\nexport { StreamlitComponentBase };\n/**\n * Wrapper for React-based Streamlit components.\n *\n * Bootstraps the communication interface between Streamlit and the component.\n */\nexport function withStreamlitConnection(WrappedComponent) {\n    var ComponentWrapper = /** @class */ (function (_super) {\n        __extends(ComponentWrapper, _super);\n        function ComponentWrapper(props) {\n            var _this = _super.call(this, props) || this;\n            _this.componentDidMount = function () {\n                // Set up event listeners, and signal to Streamlit that we're ready.\n                // We won't render the component until we receive the first RENDER_EVENT.\n                Streamlit.events.addEventListener(Streamlit.RENDER_EVENT, _this.onRenderEvent);\n                Streamlit.setComponentReady();\n            };\n            _this.componentDidUpdate = function () {\n                // If our child threw an error, we display it in render(). In this\n                // case, the child won't be mounted and therefore won't call\n                // `setFrameHeight` on its own. We do it here so that the rendered\n                // error will be visible.\n                if (_this.state.componentError != null) {\n                    Streamlit.setFrameHeight();\n                }\n            };\n            _this.componentWillUnmount = function () {\n                Streamlit.events.removeEventListener(Streamlit.RENDER_EVENT, _this.onRenderEvent);\n            };\n            /**\n             * Streamlit is telling this component to redraw.\n             * We save the render data in State, so that it can be passed to the\n             * component in our own render() function.\n             */\n            _this.onRenderEvent = function (event) {\n                // Update our state with the newest render data\n                var renderEvent = event;\n                _this.setState({ renderData: renderEvent.detail });\n            };\n            _this.render = function () {\n                // If our wrapped component threw an error, display it.\n                if (_this.state.componentError != null) {\n                    return (React.createElement(\"div\", null,\n                        React.createElement(\"h1\", null, \"Component Error\"),\n                        React.createElement(\"span\", null, _this.state.componentError.message)));\n                }\n                // Don't render until we've gotten our first RENDER_EVENT from Streamlit.\n                if (_this.state.renderData == null) {\n                    return null;\n                }\n                return (React.createElement(WrappedComponent, { width: window.innerWidth, disabled: _this.state.renderData.disabled, args: _this.state.renderData.args, theme: _this.state.renderData.theme }));\n            };\n            _this.state = {\n                renderData: undefined,\n                componentError: undefined\n            };\n            return _this;\n        }\n        /**\n         * Error boundary function. This will be called if our wrapped\n         * component throws an error. We store the caught error in our state,\n         * and display it in the next render().\n         */\n        ComponentWrapper.getDerivedStateFromError = function (error) {\n            return { componentError: error };\n        };\n        return ComponentWrapper;\n    }(React.PureComponent));\n    return hoistNonReactStatics(ComponentWrapper, WrappedComponent);\n}\n","'use strict';\n\nvar reactIs = require('react-is');\n\n/**\n * Copyright 2015, Yahoo! Inc.\n * Copyrights licensed under the New BSD License. See the accompanying LICENSE file for terms.\n */\nvar REACT_STATICS = {\n  childContextTypes: true,\n  contextType: true,\n  contextTypes: true,\n  defaultProps: true,\n  displayName: true,\n  getDefaultProps: true,\n  getDerivedStateFromError: true,\n  getDerivedStateFromProps: true,\n  mixins: true,\n  propTypes: true,\n  type: true\n};\nvar KNOWN_STATICS = {\n  name: true,\n  length: true,\n  prototype: true,\n  caller: true,\n  callee: true,\n  arguments: true,\n  arity: true\n};\nvar FORWARD_REF_STATICS = {\n  '$$typeof': true,\n  render: true,\n  defaultProps: true,\n  displayName: true,\n  propTypes: true\n};\nvar MEMO_STATICS = {\n  '$$typeof': true,\n  compare: true,\n  defaultProps: true,\n  displayName: true,\n  propTypes: true,\n  type: true\n};\nvar TYPE_STATICS = {};\nTYPE_STATICS[reactIs.ForwardRef] = FORWARD_REF_STATICS;\nTYPE_STATICS[reactIs.Memo] = MEMO_STATICS;\n\nfunction getStatics(component) {\n  // React v16.11 and below\n  if (reactIs.isMemo(component)) {\n    return MEMO_STATICS;\n  } // React v16.12 and above\n\n\n  return TYPE_STATICS[component['$$typeof']] || REACT_STATICS;\n}\n\nvar defineProperty = Object.defineProperty;\nvar getOwnPropertyNames = Object.getOwnPropertyNames;\nvar getOwnPropertySymbols = Object.getOwnPropertySymbols;\nvar getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\nvar getPrototypeOf = Object.getPrototypeOf;\nvar objectPrototype = Object.prototype;\nfunction hoistNonReactStatics(targetComponent, sourceComponent, blacklist) {\n  if (typeof sourceComponent !== 'string') {\n    // don't hoist over string (html) components\n    if (objectPrototype) {\n      var inheritedComponent = getPrototypeOf(sourceComponent);\n\n      if (inheritedComponent && inheritedComponent !== objectPrototype) {\n        hoistNonReactStatics(targetComponent, inheritedComponent, blacklist);\n      }\n    }\n\n    var keys = getOwnPropertyNames(sourceComponent);\n\n    if (getOwnPropertySymbols) {\n      keys = keys.concat(getOwnPropertySymbols(sourceComponent));\n    }\n\n    var targetStatics = getStatics(targetComponent);\n    var sourceStatics = getStatics(sourceComponent);\n\n    for (var i = 0; i < keys.length; ++i) {\n      var key = keys[i];\n\n      if (!KNOWN_STATICS[key] && !(blacklist && blacklist[key]) && !(sourceStatics && sourceStatics[key]) && !(targetStatics && targetStatics[key])) {\n        var descriptor = getOwnPropertyDescriptor(sourceComponent, key);\n\n        try {\n          // Avoid failures from read-only properties\n          defineProperty(targetComponent, key, descriptor);\n        } catch (e) {}\n      }\n    }\n  }\n\n  return targetComponent;\n}\n\nmodule.exports = hoistNonReactStatics;\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-is.production.min.js');\n} else {\n  module.exports = require('./cjs/react-is.development.js');\n}\n","/** @license React v16.13.1\n * react-is.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';var b=\"function\"===typeof Symbol&&Symbol.for,c=b?Symbol.for(\"react.element\"):60103,d=b?Symbol.for(\"react.portal\"):60106,e=b?Symbol.for(\"react.fragment\"):60107,f=b?Symbol.for(\"react.strict_mode\"):60108,g=b?Symbol.for(\"react.profiler\"):60114,h=b?Symbol.for(\"react.provider\"):60109,k=b?Symbol.for(\"react.context\"):60110,l=b?Symbol.for(\"react.async_mode\"):60111,m=b?Symbol.for(\"react.concurrent_mode\"):60111,n=b?Symbol.for(\"react.forward_ref\"):60112,p=b?Symbol.for(\"react.suspense\"):60113,q=b?\nSymbol.for(\"react.suspense_list\"):60120,r=b?Symbol.for(\"react.memo\"):60115,t=b?Symbol.for(\"react.lazy\"):60116,v=b?Symbol.for(\"react.block\"):60121,w=b?Symbol.for(\"react.fundamental\"):60117,x=b?Symbol.for(\"react.responder\"):60118,y=b?Symbol.for(\"react.scope\"):60119;\nfunction z(a){if(\"object\"===typeof a&&null!==a){var u=a.$$typeof;switch(u){case c:switch(a=a.type,a){case l:case m:case e:case g:case f:case p:return a;default:switch(a=a&&a.$$typeof,a){case k:case n:case t:case r:case h:return a;default:return u}}case d:return u}}}function A(a){return z(a)===m}exports.AsyncMode=l;exports.ConcurrentMode=m;exports.ContextConsumer=k;exports.ContextProvider=h;exports.Element=c;exports.ForwardRef=n;exports.Fragment=e;exports.Lazy=t;exports.Memo=r;exports.Portal=d;\nexports.Profiler=g;exports.StrictMode=f;exports.Suspense=p;exports.isAsyncMode=function(a){return A(a)||z(a)===l};exports.isConcurrentMode=A;exports.isContextConsumer=function(a){return z(a)===k};exports.isContextProvider=function(a){return z(a)===h};exports.isElement=function(a){return\"object\"===typeof a&&null!==a&&a.$$typeof===c};exports.isForwardRef=function(a){return z(a)===n};exports.isFragment=function(a){return z(a)===e};exports.isLazy=function(a){return z(a)===t};\nexports.isMemo=function(a){return z(a)===r};exports.isPortal=function(a){return z(a)===d};exports.isProfiler=function(a){return z(a)===g};exports.isStrictMode=function(a){return z(a)===f};exports.isSuspense=function(a){return z(a)===p};\nexports.isValidElementType=function(a){return\"string\"===typeof a||\"function\"===typeof a||a===e||a===m||a===g||a===f||a===p||a===q||\"object\"===typeof a&&null!==a&&(a.$$typeof===t||a.$$typeof===r||a.$$typeof===h||a.$$typeof===k||a.$$typeof===n||a.$$typeof===w||a.$$typeof===x||a.$$typeof===y||a.$$typeof===v)};exports.typeOf=z;\n","/** @license React v16.14.0\n * react.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';var l=require(\"object-assign\"),n=\"function\"===typeof Symbol&&Symbol.for,p=n?Symbol.for(\"react.element\"):60103,q=n?Symbol.for(\"react.portal\"):60106,r=n?Symbol.for(\"react.fragment\"):60107,t=n?Symbol.for(\"react.strict_mode\"):60108,u=n?Symbol.for(\"react.profiler\"):60114,v=n?Symbol.for(\"react.provider\"):60109,w=n?Symbol.for(\"react.context\"):60110,x=n?Symbol.for(\"react.forward_ref\"):60112,y=n?Symbol.for(\"react.suspense\"):60113,z=n?Symbol.for(\"react.memo\"):60115,A=n?Symbol.for(\"react.lazy\"):\n60116,B=\"function\"===typeof Symbol&&Symbol.iterator;function C(a){for(var b=\"https://reactjs.org/docs/error-decoder.html?invariant=\"+a,c=1;c<arguments.length;c++)b+=\"&args[]=\"+encodeURIComponent(arguments[c]);return\"Minified React error #\"+a+\"; visit \"+b+\" for the full message or use the non-minified dev environment for full errors and additional helpful warnings.\"}\nvar D={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},E={};function F(a,b,c){this.props=a;this.context=b;this.refs=E;this.updater=c||D}F.prototype.isReactComponent={};F.prototype.setState=function(a,b){if(\"object\"!==typeof a&&\"function\"!==typeof a&&null!=a)throw Error(C(85));this.updater.enqueueSetState(this,a,b,\"setState\")};F.prototype.forceUpdate=function(a){this.updater.enqueueForceUpdate(this,a,\"forceUpdate\")};\nfunction G(){}G.prototype=F.prototype;function H(a,b,c){this.props=a;this.context=b;this.refs=E;this.updater=c||D}var I=H.prototype=new G;I.constructor=H;l(I,F.prototype);I.isPureReactComponent=!0;var J={current:null},K=Object.prototype.hasOwnProperty,L={key:!0,ref:!0,__self:!0,__source:!0};\nfunction M(a,b,c){var e,d={},g=null,k=null;if(null!=b)for(e in void 0!==b.ref&&(k=b.ref),void 0!==b.key&&(g=\"\"+b.key),b)K.call(b,e)&&!L.hasOwnProperty(e)&&(d[e]=b[e]);var f=arguments.length-2;if(1===f)d.children=c;else if(1<f){for(var h=Array(f),m=0;m<f;m++)h[m]=arguments[m+2];d.children=h}if(a&&a.defaultProps)for(e in f=a.defaultProps,f)void 0===d[e]&&(d[e]=f[e]);return{$$typeof:p,type:a,key:g,ref:k,props:d,_owner:J.current}}\nfunction N(a,b){return{$$typeof:p,type:a.type,key:b,ref:a.ref,props:a.props,_owner:a._owner}}function O(a){return\"object\"===typeof a&&null!==a&&a.$$typeof===p}function escape(a){var b={\"=\":\"=0\",\":\":\"=2\"};return\"$\"+(\"\"+a).replace(/[=:]/g,function(a){return b[a]})}var P=/\\/+/g,Q=[];function R(a,b,c,e){if(Q.length){var d=Q.pop();d.result=a;d.keyPrefix=b;d.func=c;d.context=e;d.count=0;return d}return{result:a,keyPrefix:b,func:c,context:e,count:0}}\nfunction S(a){a.result=null;a.keyPrefix=null;a.func=null;a.context=null;a.count=0;10>Q.length&&Q.push(a)}\nfunction T(a,b,c,e){var d=typeof a;if(\"undefined\"===d||\"boolean\"===d)a=null;var g=!1;if(null===a)g=!0;else switch(d){case \"string\":case \"number\":g=!0;break;case \"object\":switch(a.$$typeof){case p:case q:g=!0}}if(g)return c(e,a,\"\"===b?\".\"+U(a,0):b),1;g=0;b=\"\"===b?\".\":b+\":\";if(Array.isArray(a))for(var k=0;k<a.length;k++){d=a[k];var f=b+U(d,k);g+=T(d,f,c,e)}else if(null===a||\"object\"!==typeof a?f=null:(f=B&&a[B]||a[\"@@iterator\"],f=\"function\"===typeof f?f:null),\"function\"===typeof f)for(a=f.call(a),k=\n0;!(d=a.next()).done;)d=d.value,f=b+U(d,k++),g+=T(d,f,c,e);else if(\"object\"===d)throw c=\"\"+a,Error(C(31,\"[object Object]\"===c?\"object with keys {\"+Object.keys(a).join(\", \")+\"}\":c,\"\"));return g}function V(a,b,c){return null==a?0:T(a,\"\",b,c)}function U(a,b){return\"object\"===typeof a&&null!==a&&null!=a.key?escape(a.key):b.toString(36)}function W(a,b){a.func.call(a.context,b,a.count++)}\nfunction aa(a,b,c){var e=a.result,d=a.keyPrefix;a=a.func.call(a.context,b,a.count++);Array.isArray(a)?X(a,e,c,function(a){return a}):null!=a&&(O(a)&&(a=N(a,d+(!a.key||b&&b.key===a.key?\"\":(\"\"+a.key).replace(P,\"$&/\")+\"/\")+c)),e.push(a))}function X(a,b,c,e,d){var g=\"\";null!=c&&(g=(\"\"+c).replace(P,\"$&/\")+\"/\");b=R(b,g,e,d);V(a,aa,b);S(b)}var Y={current:null};function Z(){var a=Y.current;if(null===a)throw Error(C(321));return a}\nvar ba={ReactCurrentDispatcher:Y,ReactCurrentBatchConfig:{suspense:null},ReactCurrentOwner:J,IsSomeRendererActing:{current:!1},assign:l};exports.Children={map:function(a,b,c){if(null==a)return a;var e=[];X(a,e,null,b,c);return e},forEach:function(a,b,c){if(null==a)return a;b=R(null,null,b,c);V(a,W,b);S(b)},count:function(a){return V(a,function(){return null},null)},toArray:function(a){var b=[];X(a,b,null,function(a){return a});return b},only:function(a){if(!O(a))throw Error(C(143));return a}};\nexports.Component=F;exports.Fragment=r;exports.Profiler=u;exports.PureComponent=H;exports.StrictMode=t;exports.Suspense=y;exports.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=ba;\nexports.cloneElement=function(a,b,c){if(null===a||void 0===a)throw Error(C(267,a));var e=l({},a.props),d=a.key,g=a.ref,k=a._owner;if(null!=b){void 0!==b.ref&&(g=b.ref,k=J.current);void 0!==b.key&&(d=\"\"+b.key);if(a.type&&a.type.defaultProps)var f=a.type.defaultProps;for(h in b)K.call(b,h)&&!L.hasOwnProperty(h)&&(e[h]=void 0===b[h]&&void 0!==f?f[h]:b[h])}var h=arguments.length-2;if(1===h)e.children=c;else if(1<h){f=Array(h);for(var m=0;m<h;m++)f[m]=arguments[m+2];e.children=f}return{$$typeof:p,type:a.type,\nkey:d,ref:g,props:e,_owner:k}};exports.createContext=function(a,b){void 0===b&&(b=null);a={$$typeof:w,_calculateChangedBits:b,_currentValue:a,_currentValue2:a,_threadCount:0,Provider:null,Consumer:null};a.Provider={$$typeof:v,_context:a};return a.Consumer=a};exports.createElement=M;exports.createFactory=function(a){var b=M.bind(null,a);b.type=a;return b};exports.createRef=function(){return{current:null}};exports.forwardRef=function(a){return{$$typeof:x,render:a}};exports.isValidElement=O;\nexports.lazy=function(a){return{$$typeof:A,_ctor:a,_status:-1,_result:null}};exports.memo=function(a,b){return{$$typeof:z,type:a,compare:void 0===b?null:b}};exports.useCallback=function(a,b){return Z().useCallback(a,b)};exports.useContext=function(a,b){return Z().useContext(a,b)};exports.useDebugValue=function(){};exports.useEffect=function(a,b){return Z().useEffect(a,b)};exports.useImperativeHandle=function(a,b,c){return Z().useImperativeHandle(a,b,c)};\nexports.useLayoutEffect=function(a,b){return Z().useLayoutEffect(a,b)};exports.useMemo=function(a,b){return Z().useMemo(a,b)};exports.useReducer=function(a,b,c){return Z().useReducer(a,b,c)};exports.useRef=function(a){return Z().useRef(a)};exports.useState=function(a){return Z().useState(a)};exports.version=\"16.14.0\";\n","/*\nobject-assign\n(c) Sindre Sorhus\n@license MIT\n*/\n\n'use strict';\n/* eslint-disable no-unused-vars */\nvar getOwnPropertySymbols = Object.getOwnPropertySymbols;\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nvar propIsEnumerable = Object.prototype.propertyIsEnumerable;\n\nfunction toObject(val) {\n\tif (val === null || val === undefined) {\n\t\tthrow new TypeError('Object.assign cannot be called with null or undefined');\n\t}\n\n\treturn Object(val);\n}\n\nfunction shouldUseNative() {\n\ttry {\n\t\tif (!Object.assign) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Detect buggy property enumeration order in older V8 versions.\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=4118\n\t\tvar test1 = new String('abc');  // eslint-disable-line no-new-wrappers\n\t\ttest1[5] = 'de';\n\t\tif (Object.getOwnPropertyNames(test1)[0] === '5') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test2 = {};\n\t\tfor (var i = 0; i < 10; i++) {\n\t\t\ttest2['_' + String.fromCharCode(i)] = i;\n\t\t}\n\t\tvar order2 = Object.getOwnPropertyNames(test2).map(function (n) {\n\t\t\treturn test2[n];\n\t\t});\n\t\tif (order2.join('') !== '0123456789') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test3 = {};\n\t\t'abcdefghijklmnopqrst'.split('').forEach(function (letter) {\n\t\t\ttest3[letter] = letter;\n\t\t});\n\t\tif (Object.keys(Object.assign({}, test3)).join('') !==\n\t\t\t\t'abcdefghijklmnopqrst') {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t} catch (err) {\n\t\t// We don't expect any of the above to throw, but better to be safe.\n\t\treturn false;\n\t}\n}\n\nmodule.exports = shouldUseNative() ? Object.assign : function (target, source) {\n\tvar from;\n\tvar to = toObject(target);\n\tvar symbols;\n\n\tfor (var s = 1; s < arguments.length; s++) {\n\t\tfrom = Object(arguments[s]);\n\n\t\tfor (var key in from) {\n\t\t\tif (hasOwnProperty.call(from, key)) {\n\t\t\t\tto[key] = from[key];\n\t\t\t}\n\t\t}\n\n\t\tif (getOwnPropertySymbols) {\n\t\t\tsymbols = getOwnPropertySymbols(from);\n\t\t\tfor (var i = 0; i < symbols.length; i++) {\n\t\t\t\tif (propIsEnumerable.call(from, symbols[i])) {\n\t\t\t\t\tto[symbols[i]] = from[symbols[i]];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn to;\n};\n"],"sourceRoot":""}